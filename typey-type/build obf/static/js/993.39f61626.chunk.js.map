{"version":3,"file":"static/js/993.39f61626.chunk.js","mappings":"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","sources":["pages/lessons/components/UserSettings/updateGlobalUserSetting.js","pages/progress/components/RecommendationDescription.tsx","utils/recommendations.js","states/recommendedCoursesState.ts","states/recommendationsState.ts","pages/progress/components/RecommendationBoxFallback.tsx","pages/progress/components/RecommendationBox.tsx","pages/progress/components/RecentLessons.tsx","pages/progress/components/FlashcardsBox.tsx","pages/progress/components/FlashcardsSection.tsx","images/BoredRobot.svg","pages/progress/components/TodaysEffortsOrGoals.tsx","pages/progress/utils/formatSpacePlacementValue.ts","pages/progress/utils/formatProgressFileDownloadName.ts","pages/progress/components/ReformatProgress.tsx","pages/progress/components/ProgressLessonLinks.tsx","pages/progress/components/ProgressSummaryCompleted.tsx","pages/progress/components/ProgressSummaryAndLinks.tsx","components/Icons/icon-images/Checkmark.svg","components/Icons/icon-images/TriangleRight.svg","pages/progress/components/LessonsProgress.tsx","pages/progress/components/DownloadProgressButton.tsx","pages/progress/components/BackupModal.tsx","pages/progress/components/BackupBanner.tsx","states/userGoalsState.ts","pages/progress/Progress.tsx","../node_modules/d3-format/src/formatPrefixAuto.js","../node_modules/d3-format/src/formatRounded.js","../node_modules/d3-format/src/formatTypes.js","../node_modules/d3-format/src/identity.js","../node_modules/d3-format/src/locale.js","../node_modules/d3-format/src/defaultLocale.js","../node_modules/d3-format/src/formatGroup.js","../node_modules/d3-format/src/formatNumerals.js","../node_modules/d3-format/src/formatTrim.js","../node_modules/d3-format/src/exponent.js","../node_modules/d3-format/src/formatDecimal.js","../node_modules/d3-format/src/formatSpecifier.js"],"sourcesContent":["import GoogleAnalytics from \"react-ga4\";\nimport { useSetAtom } from \"jotai\";\nimport {\n  backupBannerDismissedTime,\n  experimentsState,\n  inputForKAOESState,\n  writerInputState\n} from \"../../../../states/globalUserSettingsState\";\n\n// (event: SyntheticInputEvent<HTMLInputElement>) => void\nexport function useChangeWriterInput() {\n  const setState = useSetAtom(writerInputState);\n  return (event) => {\n    let name = \"BAD_INPUT\";\n\n    if (event && event.target && event.target.name) {\n      setState(event.target.name);\n      name = event.target.name;\n    }\n\n    let labelString = name;\n    if (!name) {\n      labelString = \"BAD_INPUT\";\n    }\n\n    GoogleAnalytics.event({\n      category: \"Global user settings\",\n      action: \"Change writer input\",\n      label: labelString,\n    });\n  }\n}\n\nexport function useChangeInputForKAOES() {\n  const setState = useSetAtom(inputForKAOESState);\n  return (event) => {\n    let name = \"BAD_INPUT\";\n\n    if (event && event.target && event.target.name) {\n      setState(event.target.name);\n      name = event.target.name;\n    }\n\n    let labelString = name;\n    if (!name) {\n      labelString = \"BAD_INPUT\";\n    }\n\n    GoogleAnalytics.event({\n      category: \"Global user settings\",\n      action: \"Change input for KAOES\",\n      label: labelString,\n    });\n  }\n}\n\nexport function useToggleExperiment() {\n  const setState = useSetAtom(experimentsState);\n  return (event) => {\n    const target = event.target;\n    const value = target.checked;\n    const name = target.name;\n\n    setState(name, value);\n\n    let labelString = value;\n    if (value === undefined) {\n      labelString = \"BAD_INPUT\";\n    } else {\n      labelString.toString();\n    }\n\n    GoogleAnalytics.event({\n      category: \"Global user settings\",\n      action: \"Change \" + name,\n      label: labelString,\n    });\n  }\n}\n\nexport function useDismissBackupBanner() {\n  const setState = useSetAtom(backupBannerDismissedTime);\n  return () => {\n    setState(Date.now());\n\n    let labelString = \"Dismiss\";\n\n    GoogleAnalytics.event({\n      category: \"Global user settings\",\n      action: \"Dismiss backup banner\",\n      label: labelString,\n    });\n  }\n}\n","import React from \"react\";\n\nimport type { FullRecommendationsStudyType } from \"../../../types\";\n\ntype Props = {\n  studyType: FullRecommendationsStudyType;\n};\n\nconst RecommendationDescription = ({ studyType }: Props) => {\n  let description;\n\n  switch (studyType) {\n    case \"error\":\n      description = (\n        <>\n          Unable to fetch the recommendation course. Check your Internet\n          connection and try <a href=\".\">refresh the page</a>.\n        </>\n      );\n      break;\n\n    case \"practice\":\n      description = (\n        <>\n          Practice a longer lesson and mimic real usage as closely as possible.\n          Write as fast as you can without causing misstrokes. Explore classic\n          stories that use simple and common sentences.\n        </>\n      );\n      break;\n\n    case \"drill\":\n      description = (\n        <>\n          Regularly drill common words to build up your muscle memory. Write as\n          fast as you can, aiming for a high speed score. Pick specific drills\n          that focus on similar words.\n        </>\n      );\n      break;\n\n    case \"revise\":\n      description = (\n        <>\n          Revise lessons with lots of words you want to memorise, like the top\n          100 words. Try to recall briefs before revealing their strokes. Avoid\n          fingerspelling or writing out words in long form.\n        </>\n      );\n      break;\n\n    case \"discover\":\n      description = (\n        <>\n          Discover new words without hiding their briefs while you learn to\n          write them. Write slowly, concentrating on accuracy and forming good\n          habits around how you stroke word parts.\n        </>\n      );\n      break;\n\n    case \"compete\":\n      description = (\n        <>\n          To really push your speed and vocabulary, you might add some\n          competition. Try a race. Unexpected material can also teach you to how\n          to adapt to unknown words under pressure.\n        </>\n      );\n      break;\n\n    case \"game\":\n      description = (\n        <>\n          You’ve been so diligent! You might take a break from drilling and try\n          a game. Steno games let you make mistakes and think differently about\n          what you’ve learned.\n        </>\n      );\n      break;\n\n    case \"wildcard\":\n      description = (\n        <>\n          Well done! You’ve typed a lot of words today. You might rest your\n          hands and your mind for now, and come back in 4+&nbsp;hours.\n        </>\n      );\n      break;\n\n    case \"break\":\n      description = (\n        <>\n          Well done! You’ve typed a lot of words today. You might rest your\n          hands and your mind for now. Save your progress and take\n          5&nbsp;minutes or come back in 4+&nbsp;hours.\n        </>\n      );\n      break;\n\n    default:\n      description = (\n        <>\n          Practice writing as fast as you can without causing misstrokes using\n          simple sentences and common words.\n        </>\n      );\n      break;\n  }\n\n  return <p className=\"mb3\">{description}</p>;\n};\n\nexport default RecommendationDescription;\n","import PARAMS from './params.js';\n\nlet recommendedStudySession = [\n  // null,\n  'practice',\n  'drill',\n  'revise',\n  'discover',\n  'wildcard',\n  'break'\n  // repeat\n];\n\nconst games = [\n  {\n    studyType: 'game',\n    limitNumberOfWords: null,\n    repetitions: null,\n    linkTitle: \"KAOES (keys) game\",\n    linkText: \"Play KAOES (keys) game\",\n    link: '/games/KAOES',\n  },\n  {\n    studyType: 'game',\n    limitNumberOfWords: null,\n    repetitions: null,\n    linkTitle: \"SHUFL (shuffle) game\",\n    linkText: \"Play SHUFL (shuffle) game\",\n    link: '/games/SHUFL',\n  },\n  {\n    studyType: 'game',\n    limitNumberOfWords: null,\n    repetitions: null,\n    linkTitle: \"TPEUBGSZ (fixes) game\",\n    linkText: \"Play TPEUBGSZ (fixes) game\",\n    link: '/games/TPEUBGSZ',\n  }\n]\n\nfunction getRecommendedNextLesson(courses, lessonsProgress = {}, history = {}, numberOfWordsSeen = 0, numberOfWordsMemorised = 0, lessonIndex = {}, metWords = {}) {\n    // fallback lesson:\n    let recommendedNextLesson = {\n      studyType: \"practice\",\n      limitNumberOfWords: 300,\n      repetitions: 1,\n      linkTitle: \"Top 10000 Project Gutenberg words\",\n      linkText: \"Practice 300 words from Top 10000 Project Gutenberg words\",\n      link: process.env.PUBLIC_URL + \"/lessons/drills/top-10000-project-gutenberg-words/?recommended=true&\" + PARAMS.practiceParams\n    };\n\n    // Check currentStep to set index of recommendedStudySession\n    // For given step, check if it's viable e.g. you've seen punctuation and basic words so you can do practice:\n    // metWords = { \"a\": 1, \"man\": 1, \"!\": 1, \".\": 1, \"?\": 1, \"as\": 1, \"if\": 1 }\n    // 'A': KPA/AEU\n    // 'man!': PHAPB SKHRAPL\n    // 'A': KPA/AEU\n    // 'man.': PHAPB TP-PL\n    // 'A': KPA/AEU\n    // 'man?': PHAPB H-F\n    // 'As': AZ\n    // 'if.': TP TP-PL\n    // If not viable, move to next step; if nothing is valid (e.g. you've discovered ALL words on Typey Type, fall back to top 10,000 project gutenberg words practice\n    let recommendedStudySessionIndex = 0;\n    if (typeof history === \"object\") {\n      switch (history[\"currentStep\"]) {\n        case \"practice\":\n          recommendedStudySessionIndex = 0;\n          break;\n        case \"drill\":\n          recommendedStudySessionIndex = 1;\n          break;\n        case \"revise\":\n          recommendedStudySessionIndex = 2;\n          break;\n        case \"discover\":\n          recommendedStudySessionIndex = 3;\n          break;\n        case \"wildcard\":\n          recommendedStudySessionIndex = 4;\n          break;\n        case \"compete\":\n          recommendedStudySessionIndex = 4;\n          break;\n        case \"game\":\n          recommendedStudySessionIndex = 4;\n          break;\n        case \"break\":\n          recommendedStudySessionIndex = 5;\n          break;\n        case null:\n          recommendedStudySessionIndex = 0;\n          break;\n        default:\n          recommendedStudySessionIndex = 0;\n          break;\n      }\n    }\n\n    if (recommendedStudySession[recommendedStudySessionIndex] === \"practice\" && numberOfWordsMemorised < 2) {\n      recommendedStudySessionIndex = recommendedStudySessionIndex + 1;\n    }\n\n    if (recommendedStudySession[recommendedStudySessionIndex] === \"practice\") {\n      let practiceParams = '?recommended=true&' + PARAMS.practiceParams;\n      let practiceChoice = Math.random() <.9 ? \"practiceLessons\" : \"practiceAllYourWords\";\n\n      switch (practiceChoice) {\n        case \"practiceAllYourWords\":\n          practiceParams = practiceParams.replace('newWords=1','newWords=0');\n          recommendedNextLesson.limitNumberOfWords = 300;\n          recommendedNextLesson.linkTitle = \"Your words\";\n          recommendedNextLesson.linkText = \"Practice your words\";\n          recommendedNextLesson.link = \"/lessons/progress/\" + practiceParams;\n          recommendedNextLesson.studyType = 'practice';\n          recommendedNextLesson.repetitions = 1;\n          break;\n\n        case \"practiceLessons\":\n          let recommendedPracticeLesson = courses.practiceCourse.find((recommendable) => {\n            let entryInLessonsProgress = lessonsProgress[process.env.PUBLIC_URL + recommendable.path];\n            let seenOrMemorisedChoice = Math.random() <.9 ? \"numberOfWordsSeen\" : \"numberOfWordsMemorised\";\n\n            // You've never seen it before, so it's probably a good one to start\n            if (typeof entryInLessonsProgress === \"undefined\") {\n              return true;\n            }\n            else {\n              if (typeof entryInLessonsProgress[seenOrMemorisedChoice] !== \"undefined\") {\n                if (seenOrMemorisedChoice === \"numberOfWordsMemorised\") {\n                  // You've memorised most of this lesson already, so it is probably boring.\n                  // We don't aim for 100% because we're tracking unique number of words seen.\n                  // Practice lessons contains some word repetition so number of unique words so it\n                  // will always fall short of the target.\n                  if (entryInLessonsProgress[seenOrMemorisedChoice] >= .6 * recommendable.target) {\n                    return false;\n                  }\n                  else {\n                    return true;\n                  }\n                }\n                else {\n                  if (entryInLessonsProgress[\"numberOfWordsToDiscover\"] === 0) {\n                    return false;\n                  }\n                  else {\n                    return true;\n                  }\n                }\n              }\n              else {\n                return true;\n              }\n            }\n\n            // return false;\n          });\n\n          let wordCount = 300;\n\n          let recommendedPracticeLessonInIndex = lessonIndex.find((recommended) => {\n            return \"/lessons\" + recommended.path === recommendedPracticeLesson.path;\n          });\n\n          if (typeof recommendedPracticeLessonInIndex !== \"undefined\") {\n            if (typeof recommendedPracticeLessonInIndex.wordCount !== \"undefined\") {\n              wordCount = recommendedPracticeLessonInIndex.wordCount;\n            }\n          }\n\n          if (typeof recommendedPracticeLesson !== \"undefined\") {\n            recommendedNextLesson.studyType = 'practice';\n            recommendedNextLesson.limitNumberOfWords = Math.min(300, wordCount);\n            recommendedNextLesson.repetitions = 1;\n            recommendedNextLesson.linkTitle = recommendedPracticeLesson.lessonTitle;\n            recommendedNextLesson.linkText = \"Practice \" + recommendedPracticeLesson.lessonTitle;\n            recommendedNextLesson.link = recommendedPracticeLesson.path.replace(/lesson.txt$/,'') + practiceParams;\n          }\n\n          break;\n\n        default:\n          practiceParams = practiceParams.replace('newWords=1','newWords=0');\n          recommendedNextLesson.limitNumberOfWords = 300;\n          recommendedNextLesson.linkTitle = \"Your words\";\n          recommendedNextLesson.linkText = \"Practice your words\";\n          recommendedNextLesson.link = \"/lessons/progress/?recommended=true&\" + PARAMS.practiceParams;\n          recommendedNextLesson.studyType = 'practice';\n          recommendedNextLesson.repetitions = 1;\n          break;\n      }\n    }\n\n    if (recommendedStudySession[recommendedStudySessionIndex] === \"drill\" && numberOfWordsMemorised < 2) {\n      recommendedStudySessionIndex = recommendedStudySessionIndex + 1;\n    }\n\n    if (recommendedStudySession[recommendedStudySessionIndex] === \"drill\") {\n      let entryInLessonsProgress;\n\n      let drillChoice = Math.random() <.5 ? \"drillLessons\" : \"drillMemorised\";\n\n      switch (drillChoice) {\n        case \"drillMemorised\":\n          recommendedNextLesson.studyType = 'drill';\n          recommendedNextLesson.limitNumberOfWords = 100;\n          recommendedNextLesson.repetitions = 3;\n          recommendedNextLesson.linkTitle = \"Your memorised words\";\n          recommendedNextLesson.linkText = \"Your memorised words\";\n          recommendedNextLesson.link = \"/lessons/progress/memorised/?recommended=true&\" + PARAMS.drillParams;\n          break;\n\n        case \"drillLessons\":\n          let recommendedDrillLesson = courses.drillCourse.find((recommendable) => {\n\n            entryInLessonsProgress = lessonsProgress[process.env.PUBLIC_URL + recommendable.path];\n\n            // No lessonsProgress lesson matches recommendable.path, then you've never seen that lesson\n            // It's not a great candidate for drilling\n            if (typeof entryInLessonsProgress === \"undefined\") { return false; }\n\n            // Don't pick this lesson if you've already memorised 15 words and its target was 15\n            if ((entryInLessonsProgress['numberOfWordsMemorised'] || 0) >= recommendable['target']) { return false; }\n\n            // Don't pick this lesson if it has fewer than 15 memorised words because it will be a boring lesson\n            if ((entryInLessonsProgress['numberOfWordsMemorised'] || 0) < 15) { return false; }\n\n            return true;\n          });\n\n          if (typeof recommendedDrillLesson !== \"undefined\") {\n            recommendedNextLesson.studyType = 'drill';\n            recommendedNextLesson.limitNumberOfWords = 100;\n            recommendedNextLesson.repetitions = 3;\n            recommendedNextLesson.linkTitle = recommendedDrillLesson.lessonTitle;\n            recommendedNextLesson.linkText = \"Drill \" + recommendedNextLesson.limitNumberOfWords + \" words from \" + recommendedDrillLesson.lessonTitle + \" with \" + recommendedNextLesson.repetitions + \" repetitions\";\n            recommendedNextLesson.link = recommendedDrillLesson.path.replace(/lesson.txt$/,'') + \"?recommended=true&\" + PARAMS.drillParams;\n          } else {\n            recommendedNextLesson.studyType = 'drill';\n            recommendedNextLesson.limitNumberOfWords = 100;\n            recommendedNextLesson.repetitions = 3;\n            recommendedNextLesson.linkTitle = \"Your memorised words\";\n            recommendedNextLesson.linkText = \"Your memorised words\";\n            recommendedNextLesson.link = \"/lessons/progress/memorised/?recommended=true&\" + PARAMS.drillParams;\n          }\n          break;\n\n        default:\n          recommendedNextLesson.studyType = 'drill';\n          recommendedNextLesson.limitNumberOfWords = 100;\n          recommendedNextLesson.repetitions = 3;\n          recommendedNextLesson.linkTitle = \"Your memorised words\";\n          recommendedNextLesson.linkText = \"Your memorised words\";\n          recommendedNextLesson.link = \"/lessons/progress/memorised/?recommended=true&\" + PARAMS.drillParams;\n          break;\n      }\n    }\n\n    if (recommendedStudySession[recommendedStudySessionIndex] === \"revise\" && numberOfWordsSeen < 15) {\n      recommendedStudySessionIndex = recommendedStudySessionIndex + 1;\n    }\n\n    if (recommendedStudySession[recommendedStudySessionIndex] === \"revise\") {\n      // One day it could include an option to revise your worst words or tricky words\n      let reviseChoice = Math.random() <.5 ? \"reviseLessons\" : \"reviseSeen\";\n\n      switch (reviseChoice) {\n        case \"reviseSeen\":\n          recommendedNextLesson.studyType = 'revise';\n          recommendedNextLesson.limitNumberOfWords = 50;\n          recommendedNextLesson.repetitions = 3;\n          recommendedNextLesson.linkTitle = \"Your revision words\";\n          recommendedNextLesson.linkText = \"Your revision words\";\n          recommendedNextLesson.link = \"/lessons/progress/seen/?recommended=true&\" + PARAMS.reviseParams;\n          break;\n\n        case \"reviseLessons\":\n          let entryInLessonsProgress;\n          let recommendedRevisionLesson = courses.revisionCourse.find((recommendable) => {\n\n            // no lessonsProgress lesson matches recommendable.path, then you've never seen that lesson\n            // so it's probably not a good candidate for revision\n            entryInLessonsProgress = lessonsProgress[process.env.PUBLIC_URL + recommendable.path];\n            if (typeof entryInLessonsProgress === \"undefined\") { return false; }\n\n            // don't pick this lesson if you've already seen 15 words and its target was 15\n            if (entryInLessonsProgress['numberOfWordsSeen'] >= recommendable['target']) { return false; }\n\n            // don't pick this lesson if it has fewer than 15 seen words because you've already memorised all the words in this lesson\n            if (entryInLessonsProgress['numberOfWordsSeen'] < 15) { return false; }\n\n            return true;\n          });\n\n          if (typeof recommendedRevisionLesson !== \"undefined\") {\n            recommendedNextLesson.studyType = 'revise';\n            recommendedNextLesson.limitNumberOfWords = 50;\n            recommendedNextLesson.repetitions = 3;\n            recommendedNextLesson.linkTitle = recommendedRevisionLesson.lessonTitle;\n            recommendedNextLesson.linkText = \"Revise 50 words from \" + recommendedRevisionLesson.lessonTitle + \" with 3 repetitions\";\n            recommendedNextLesson.link = recommendedRevisionLesson.path.replace(/lesson.txt$/,'') + \"?recommended=true&\" + PARAMS.reviseParams;\n          } else {\n            recommendedNextLesson.studyType = 'revise';\n            recommendedNextLesson.limitNumberOfWords = 50;\n            recommendedNextLesson.repetitions = 3;\n            recommendedNextLesson.linkTitle = \"Your revision words\";\n            recommendedNextLesson.linkText = \"Your revision words\";\n            recommendedNextLesson.link = \"/lessons/progress/seen/?recommended=true&\" + PARAMS.reviseParams;\n          }\n          break;\n\n        default:\n          recommendedNextLesson.studyType = 'revise';\n          recommendedNextLesson.limitNumberOfWords = 50;\n          recommendedNextLesson.repetitions = 3;\n          recommendedNextLesson.linkTitle = \"Your revision words\";\n          recommendedNextLesson.linkText = \"Your revision words\";\n          recommendedNextLesson.link = \"/lessons/progress/seen/?recommended=true&\" + PARAMS.reviseParams;\n          break;\n      }\n    }\n\n    // Once a step is chosen, pick a valid lesson/step for that\n    // For discover, review lessonsProgress for words seen and compare against targets in recommendedDiscoverCourse\n    if (recommendedStudySession[recommendedStudySessionIndex] === \"discover\") {\n      let discoverParams = \"?recommended=true&\" + PARAMS.discoverParams;\n      let entryInLessonsProgress;\n      let recommendedDiscoverLesson = courses.discoverCourse.find((recommendable) => {\n\n        // no lessonsProgress lesson matches recommendable.path, then you've never seen that lesson\n        // so it's probably a good candidate\n        if (typeof lessonsProgress[process.env.PUBLIC_URL + recommendable.path] === \"undefined\") { return true; }\n\n        entryInLessonsProgress = lessonsProgress[process.env.PUBLIC_URL + recommendable.path];\n\n        // don't pick this lesson if you've already seen/memorised 15 words and its target was 15\n        if (((entryInLessonsProgress['numberOfWordsSeen'] || 0) + (entryInLessonsProgress['numberOfWordsMemorised'] || 0)) >= recommendable['target']) { return false; }\n\n        // don't pick this lesson if you've seen ALL the words (leftToDiscover === 0)\n        if (entryInLessonsProgress['numberOfWordsToDiscover'] === 0) { return false; }\n\n        return true;\n      });\n\n      let wordCount = 15;\n\n      let recommendedDiscoverLessonInIndex = lessonIndex.find((recommended) => {\n        return \"/lessons\" + recommended.path === recommendedDiscoverLesson.path;\n      });\n\n      if (typeof recommendedDiscoverLessonInIndex !== \"undefined\") {\n        if (typeof recommendedDiscoverLessonInIndex.wordCount !== \"undefined\") {\n          wordCount = recommendedDiscoverLessonInIndex.wordCount;\n        }\n      }\n\n      let wordsLeftToDiscover = 15;\n      if (lessonsProgress[recommendedDiscoverLesson.path] && lessonsProgress[recommendedDiscoverLesson.path].numberOfWordsToDiscover) {\n        wordsLeftToDiscover = lessonsProgress[recommendedDiscoverLesson.path].numberOfWordsToDiscover;\n      }\n\n      let limitNumberOfWords = Math.min(15, wordCount, wordsLeftToDiscover);\n\n      if (recommendedDiscoverLesson.path.includes(\"briefs\") || recommendedDiscoverLesson.path.includes(\"punctuation\") || recommendedDiscoverLesson.path.includes(\"longest\")) {\n        limitNumberOfWords = Math.min(5, wordCount, wordsLeftToDiscover);\n        discoverParams = discoverParams.replace(\"limitNumberOfWords=15\", \"limitNumberOfWords=\" + limitNumberOfWords.toString());\n      }\n\n      if (typeof recommendedDiscoverLesson !== \"undefined\") {\n        recommendedNextLesson.studyType = 'discover';\n        recommendedNextLesson.limitNumberOfWords = limitNumberOfWords;\n        recommendedNextLesson.repetitions = 5;\n        recommendedNextLesson.linkTitle = recommendedDiscoverLesson.lessonTitle;\n        recommendedNextLesson.linkText = \"Discover \" + limitNumberOfWords + \" words from \" + recommendedDiscoverLesson.lessonTitle + \" with 5 repetitions\";\n        recommendedNextLesson.link = recommendedDiscoverLesson.path.replace(/lesson.txt$/,'') + discoverParams;\n      }\n    }\n\n    // if (recommendedStudySession[recommendedStudySessionIndex] === \"wildcard\" && numberOfWordsMemorised < 50) {\n    //   recommendedStudySessionIndex = recommendedStudySessionIndex + 1;\n    // }\n\n    if (recommendedStudySession[recommendedStudySessionIndex] === \"wildcard\") {\n      // One day it could include \"test\"\n      let wildcardChoice = Math.random() <.5 ? \"compete\" : \"game\";\n\n      switch (wildcardChoice) {\n        case \"compete\":\n          recommendedNextLesson.studyType = 'compete';\n          recommendedNextLesson.limitNumberOfWords = null;\n          recommendedNextLesson.repetitions = null;\n          recommendedNextLesson.linkTitle = \"Type Racer\";\n          recommendedNextLesson.linkText = \"Play Type Racer\";\n          recommendedNextLesson.link = 'https://play.typeracer.com/?universe=steno';\n          break;\n        case \"game\":\n          if ((numberOfWordsSeen + numberOfWordsMemorised) < 100) {\n            Object.assign(recommendedNextLesson, games[0])\n          }\n          else {\n            if (Math.random() < 0.5) {\n              Object.assign(recommendedNextLesson, games[1])\n            }\n            else {\n              Object.assign(recommendedNextLesson, games[2])\n            }\n          }\n          break;\n        default:\n          recommendedNextLesson.studyType = 'break';\n          recommendedNextLesson.limitNumberOfWords = null;\n          recommendedNextLesson.repetitions = null;\n          recommendedNextLesson.linkTitle = \"Take a break\";\n          recommendedNextLesson.linkText = \"Take a break\";\n          recommendedNextLesson.link = '/break';\n          break;\n      }\n\n    }\n\n    if (recommendedStudySession[recommendedStudySessionIndex] === \"break\") {\n      recommendedNextLesson.studyType = 'break';\n      recommendedNextLesson.limitNumberOfWords = null;\n      recommendedNextLesson.repetitions = null;\n      recommendedNextLesson.linkTitle = \"Save your progress and take a break\";\n      recommendedNextLesson.linkText = \"Take a break\";\n      recommendedNextLesson.link = '/break';\n    }\n\n    return recommendedNextLesson;\n}\n\nexport {\n  getRecommendedNextLesson\n};\n","import { atomWithLazy } from \"jotai/utils\";\nimport { useAtomValue } from \"jotai\";\nimport { RecommendedCoursesType } from \"../types\";\n\nconst recommendedCoursesFallback: RecommendedCoursesType = {\n  \"discoverCourse\": [\n    {\n      \"path\":\n        \"/lessons/fundamentals/one-syllable-words-with-simple-keys/lesson.txt\",\n      \"lessonTitle\": \"One-syllable words with simple keys\",\n      \"target\": 15,\n    },\n  ],\n  \"revisionCourse\": [\n    {\n      \"path\": \"/lessons/drills/top-10000-project-gutenberg-words/lesson.txt\",\n      \"lessonTitle\": \"Top 10000 Project Gutenberg words\",\n      \"target\": 10000,\n    },\n  ],\n  \"drillCourse\": [\n    {\n      \"path\": \"/lessons/drills/top-10000-project-gutenberg-words/lesson.txt\",\n      \"lessonTitle\": \"Top 10000 Project Gutenberg words\",\n      \"target\": 10000,\n    },\n  ],\n  \"practiceCourse\": [\n    {\n      \"path\": \"/lessons/drills/top-10000-project-gutenberg-words/lesson.txt\",\n      \"lessonTitle\": \"Top 10000 Project Gutenberg words\",\n      \"target\": 10000,\n    },\n  ],\n};\n\nfunction fetchRecommendations() {\n  return fetch(process.env.PUBLIC_URL + \"/lessons/recommendations.json\", {\n    method: \"GET\",\n    credentials: \"same-origin\",\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .then((json) => {\n      return json;\n    })\n    .catch(() => {\n      return recommendedCoursesFallback;\n    });\n}\n\nconst _recommendedCoursesState =\n  atomWithLazy<Promise<RecommendedCoursesType>>(fetchRecommendations);\n\n/**\n * This suspends while loading\n */\nexport const useRecommendedCourses = () => {\n  return useAtomValue(_recommendedCoursesState);\n};\n","import { atom } from \"jotai\";\nimport PARAMS from \"../utils/params\";\nimport {\n  RecommendationHistory,\n  RecommendedNextLesson,\n} from \"../pages/progress/components/RecommendationBox\";\n\nconst defaultRecommendedNextLesson: RecommendedNextLesson = {\n  studyType: \"practice\",\n  limitNumberOfWords: 50,\n  repetitions: 1,\n  linkTitle: \"Top 10000 Project Gutenberg words\",\n  linkText: \"Practice 150 words from Top 10000 Project Gutenberg words\",\n  link:\n    process.env.PUBLIC_URL +\n    \"/lessons/drills/top-10000-project-gutenberg-words/?recommended=true&\" +\n    PARAMS.practiceParams,\n};\n\nexport const recommendedNextLessonState = atom(defaultRecommendedNextLesson);\n\nconst defaultRecommendationHistory: RecommendationHistory = {\n  currentStep: null,\n};\n\nexport const recommendationHistoryState = atom(defaultRecommendationHistory);\n","import React from \"react\";\nimport RecommendationDescription from \"./RecommendationDescription\";\n\nconst RecommendationBoxFallback = () => {\n  return (\n    <React.Fragment>\n      <div className=\"panel bg-white dark:bg-coolgrey-1000 min-h-424 p5 mb3\">\n        <h3 className=\"mt0 pb1 bb b--brand-primary-tint mb3\">Recommended…</h3>\n        <p className=\"mb0 mt4\">\n          <strong>Loading…</strong>\n        </p>\n        <p className=\"de-emphasized\">…</p>\n        <RecommendationDescription studyType={\"discover\"} />\n        <div className=\"flex flex-wrap\">\n          <div>\n            <button\n              disabled\n              className=\"mr2 link-button dib\"\n              style={{ lineHeight: 2 }}\n            >\n              Loading…\n            </button>\n          </div>\n          <button\n            disabled\n            id=\"js-skip-button\"\n            className=\"button button--secondary pl3 pr3\"\n          >\n            Skip\n          </button>\n        </div>\n        <div className=\"hide\" id=\"js-next-recommended-link-text\">\n          &nbsp;\n        </div>\n      </div>\n      <div className=\"flex flex-wrap content-start-ns\">\n        <div className=\"flex flex-wrap\"></div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default RecommendationBoxFallback;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport GoogleAnalytics from \"react-ga4\";\nimport OutboundLink from \"../../../components/OutboundLink\";\nimport RecommendationDescription from \"./RecommendationDescription\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useAnnouncerApi } from \"../../../components/Announcer/useAnnouncer\";\n\nimport type { FullRecommendationsStudyType, MetWords } from \"../../../types\";\nimport { useAtom, useSetAtom } from \"jotai\";\nimport { revisionModeState } from \"../../../states/lessonState\";\nimport { useLessonIndex } from \"../../../states/lessonIndexState\";\nimport { getRecommendedNextLesson } from \"../../../utils/recommendations\";\nimport { useRecommendedCourses } from \"../../../states/recommendedCoursesState\";\nimport {\n  recommendationHistoryState,\n  recommendedNextLessonState,\n} from \"../../../states/recommendationsState\";\nimport RecommendationBoxFallback from \"./RecommendationBoxFallback\";\n\n/**\n * Examples:\n * \"https://play.typeracer.com/?universe=steno\"\n * \"/lessons/stories/proverbs/proverbs-starting-with-p/?recommended=true&study=practice&showStrokes=0&hideStrokesOnLastRepetition=1&newWords=1&seenWords=1&retainedWords=1&repetitions=1&limitNumberOfWords=0&sortOrder=sortOff\"\n */\ntype RecommendationLink = string;\n\nexport type RecommendedNextLesson = {\n  /** Example: 15 */\n  limitNumberOfWords: number | null;\n  /** Example: 3 */\n  repetitions: number | null;\n  studyType: FullRecommendationsStudyType;\n  /** Example: \"One-syllable words with simple keys\" */\n  lessonTitle?: string; // FIXME: may not exist?\n  link: RecommendationLink;\n  /** Examples: \"Proverbs starting with P\" | \"Play Type Racer\" */\n  linkTitle: string;\n  /** Examples: \"Practice Proverbs starting with P\" | \"Discover\" */\n  linkText?: string; // FIXME: may not be used?\n};\n\nexport type RecommendationHistory = {\n  currentStep: FullRecommendationsStudyType | null;\n};\n\ntype Props = {\n  lessonsProgress: any;\n  yourMemorisedWordCount: number;\n  yourSeenWordCount: number;\n  metWords: MetWords;\n};\n\nconst RecommendationBox = ({\n  lessonsProgress,\n  yourSeenWordCount,\n  yourMemorisedWordCount,\n  metWords,\n}: Props) => {\n  const [toRecommendedNextLesson, setToRecommendedNextLesson] = useState(false);\n  const lessonIndex = useLessonIndex();\n  const recommendedCourses = useRecommendedCourses();\n  const setRevisionMode = useSetAtom(revisionModeState);\n  const { updateMessage } = useAnnouncerApi();\n  const firstRecommendationBoxRender = useRef(true);\n  const [recommendationHistory, setRecommendationHistory] = useAtom(\n    recommendationHistoryState\n  );\n  const [recommendedNextLesson, setRecommendedNextLesson] = useAtom(\n    recommendedNextLessonState\n  );\n\n  useEffect(() => {\n    try {\n      if (recommendationHistory?.[\"currentStep\"] === null) {\n        setRevisionMode(false);\n        updateRecommendationHistory(recommendationHistory);\n      }\n    } catch (e: any) {\n      console.error(e);\n    }\n    // TODO: review this:\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  // }, [recommendationHistory, setRevisionMode, updateRecommendationHistory]);\n\n  useEffect(() => {\n    if (firstRecommendationBoxRender.current) {\n      firstRecommendationBoxRender.current = false;\n    } else {\n      setRevisionMode(false);\n      updateRecommendationHistory(recommendationHistory);\n    }\n    // TODO: revisit this after reducing parent component re-renders and converting class component to function component\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [toRecommendedNextLesson]);\n\n  function updateRecommendationHistory(\n    prevRecommendationHistory: RecommendationHistory\n  ) {\n    let newRecommendationHistory = Object.assign({}, prevRecommendationHistory);\n\n    if (\n      typeof newRecommendationHistory[\"currentStep\"] === \"undefined\" ||\n      newRecommendationHistory[\"currentStep\"] === null\n    ) {\n      newRecommendationHistory[\"currentStep\"] = \"break\";\n    }\n\n    switch (newRecommendationHistory[\"currentStep\"]) {\n      case null:\n        newRecommendationHistory[\"currentStep\"] = \"drill\";\n        break;\n      case \"practice\":\n        newRecommendationHistory[\"currentStep\"] = \"drill\";\n        break;\n      case \"drill\":\n        newRecommendationHistory[\"currentStep\"] = \"revise\";\n        break;\n      case \"revise\":\n        newRecommendationHistory[\"currentStep\"] = \"discover\";\n        break;\n      case \"discover\":\n        newRecommendationHistory[\"currentStep\"] = \"wildcard\";\n        break;\n      case \"wildcard\":\n        newRecommendationHistory[\"currentStep\"] = \"break\";\n        break;\n      case \"break\":\n        newRecommendationHistory[\"currentStep\"] = \"practice\";\n        break;\n      default:\n        newRecommendationHistory[\"currentStep\"] = \"practice\";\n        break;\n    }\n\n    const nextRecommendedLesson = getRecommendedNextLesson(\n      recommendedCourses,\n      lessonsProgress,\n      newRecommendationHistory,\n      yourSeenWordCount,\n      yourMemorisedWordCount,\n      lessonIndex,\n      metWords\n    );\n\n    const typedNextRecommendedLesson =\n      nextRecommendedLesson as RecommendedNextLesson;\n    setRecommendationHistory(newRecommendationHistory);\n    setRecommendedNextLesson(typedNextRecommendedLesson);\n\n    // For new Typey Type students, there may be no valid practice/drill/revision recommendations so it may recommend \"Discover\" 4 times in a row. If the recommendation is the same as the previous recommendation, update the recommendation history again to skip ahead:\n    let prevRecommendedLesson = recommendedNextLesson;\n    if (\n      prevRecommendedLesson.linkText === nextRecommendedLesson.linkText &&\n      nextRecommendedLesson.studyType !== \"error\" &&\n      nextRecommendedLesson.studyType !== \"break\"\n    ) {\n      updateRecommendationHistory(newRecommendationHistory);\n    }\n  }\n\n  const recommendAnotherLesson = () => {\n    GoogleAnalytics.event({\n      category: \"Recommendations\",\n      action: \"Skip recommended\",\n      label: recommendedNextLesson?.link || \"BAD_INPUT\",\n    });\n\n    const element = document.getElementById(\"js-skip-button\");\n    if (element) {\n      element.focus();\n    }\n\n    // Note: This is a hacky hack. It would be better to clean up the mess of\n    // code handling recommendations and either have the code that gets the\n    // recommendation call the announcer with the new recommendation (but not\n    // when other actions fetch recommendations) or somehow get the *new*\n    // recommendation from state/props/refs and announce it here instead of\n    // relying on sketchy timeouts and querying the DOM.\n    setTimeout(() => {\n      const toAnnounce = document.getElementById(\n        \"js-next-recommended-link-text\"\n      );\n      if (toAnnounce && toAnnounce.textContent !== \"Loading…\") {\n        updateMessage(`Recommended: ${toAnnounce.textContent ?? \"\"}`);\n      }\n    }, 100);\n\n    setRevisionMode(false);\n    updateRecommendationHistory(recommendationHistory);\n  };\n\n  function startRecommendedStep(e: any) {\n    GoogleAnalytics.event({\n      category: \"Recommendations\",\n      action: \"Start recommended step\",\n      label: recommendedNextLesson.link || \"BAD_INPUT\",\n    });\n\n    if (recommendedNextLesson.link?.startsWith(\"http\")) {\n      setRevisionMode(false);\n      // lets external link open in a new tab\n      updateRecommendationHistory(recommendationHistory);\n    } else {\n      setToRecommendedNextLesson(true);\n      // does not navigate using link but instead allows Router Redirect\n      e.preventDefault();\n    }\n  }\n\n  let recommendedNextLessonBox;\n  let recommendedNextLessonHeading;\n  let recommendedLink;\n  let recommendedLinkTitle;\n  let metadataStats;\n  let studyType;\n  let recommendedNextLessonCallToActionButton;\n  let recommendedNextLessonHeadingClassNames =\n    \"mt0 pb1 bb b--brand-primary-tint mb3\";\n\n  if (!!recommendedNextLesson) {\n    metadataStats = (\n      <React.Fragment>\n        {recommendedNextLesson.limitNumberOfWords}{\" \"}\n        {recommendedNextLesson.limitNumberOfWords === 1 ? \"word\" : \"words\"} |{\" \"}\n        {recommendedNextLesson.repetitions} repetitions\n      </React.Fragment>\n    );\n\n    studyType = recommendedNextLesson.studyType;\n    if (studyType === \"error\") {\n      metadataStats = <React.Fragment>No recommendation.</React.Fragment>;\n    } else if (studyType === \"wildcard\") {\n      metadataStats = <React.Fragment>External link.</React.Fragment>;\n    } else if (studyType === \"game\") {\n      metadataStats = (\n        <React.Fragment>\n          Solve puzzles to exercise your steno knowledge\n        </React.Fragment>\n      );\n    } else if (studyType === \"compete\") {\n      metadataStats = (\n        <React.Fragment>\n          Increase your speed while racing against others\n        </React.Fragment>\n      );\n    } else if (studyType === \"break\") {\n      metadataStats = (\n        <React.Fragment>\n          Take 5&nbsp;minutes or come&nbsp;back in 4+&nbsp;hours.\n        </React.Fragment>\n      );\n    } else if (recommendedNextLesson.repetitions === 1) {\n      metadataStats = (\n        <React.Fragment>\n          {recommendedNextLesson.limitNumberOfWords}{\" \"}\n          {recommendedNextLesson.limitNumberOfWords === 1 ? \"word\" : \"words\"} |{\" \"}\n          {recommendedNextLesson.repetitions} repetition\n        </React.Fragment>\n      );\n    }\n\n    if (\n      recommendedNextLesson?.lessonTitle &&\n      recommendedNextLesson.lessonTitle.length < 10\n    ) {\n      metadataStats = (\n        <React.Fragment>\n          {recommendedNextLesson.limitNumberOfWords}{\" \"}\n          {recommendedNextLesson.limitNumberOfWords === 1 ? \"word\" : \"words\"}{\" \"}\n          <br /> {recommendedNextLesson.repetitions} repetitions\n        </React.Fragment>\n      );\n      if (recommendedNextLesson.repetitions === 1) {\n        metadataStats = (\n          <React.Fragment>\n            {recommendedNextLesson.limitNumberOfWords}{\" \"}\n            {recommendedNextLesson.limitNumberOfWords === 1 ? \"word\" : \"words\"}{\" \"}\n            <br /> {recommendedNextLesson.repetitions} repetition\n          </React.Fragment>\n        );\n      }\n    }\n\n    switch (recommendedNextLesson.studyType) {\n      case \"error\":\n        recommendedNextLessonCallToActionButton = \"Practice\";\n        recommendedNextLessonHeading = (\n          <h3 className={recommendedNextLessonHeadingClassNames}>\n            Recommended: error\n          </h3>\n        );\n        break;\n      case \"practice\":\n        recommendedNextLessonCallToActionButton = \"Practice\";\n        recommendedNextLessonHeading = (\n          <h3 className={recommendedNextLessonHeadingClassNames}>\n            Recommended: practice\n          </h3>\n        );\n        break;\n      case \"drill\":\n        recommendedNextLessonCallToActionButton = \"Drill\";\n        recommendedNextLessonHeading = (\n          <h3 className={recommendedNextLessonHeadingClassNames}>\n            Recommended: drill\n          </h3>\n        );\n        break;\n      case \"revise\":\n        recommendedNextLessonCallToActionButton = \"Revise\";\n        recommendedNextLessonHeading = (\n          <h3 className={recommendedNextLessonHeadingClassNames}>\n            Recommended: revise\n          </h3>\n        );\n        break;\n      case \"discover\":\n        recommendedNextLessonCallToActionButton = \"Discover\";\n        recommendedNextLessonHeading = (\n          <h3 className={recommendedNextLessonHeadingClassNames}>\n            Recommended: discover\n          </h3>\n        );\n        break;\n      case \"break\":\n        recommendedNextLessonCallToActionButton = \"Take a break\";\n        recommendedNextLessonHeading = (\n          <h3 className={recommendedNextLessonHeadingClassNames}>\n            Recommended: break\n          </h3>\n        );\n        break;\n      case \"game\":\n        recommendedNextLessonCallToActionButton = \"Play\";\n        recommendedNextLessonHeading = (\n          <h3 className={recommendedNextLessonHeadingClassNames}>\n            Recommended: game\n          </h3>\n        );\n        break;\n      case \"compete\":\n        recommendedNextLessonCallToActionButton = \"Compete\";\n        recommendedNextLessonHeading = (\n          <h3 className={recommendedNextLessonHeadingClassNames}>\n            Recommended: compete\n          </h3>\n        );\n        break;\n      default:\n        recommendedNextLessonCallToActionButton = \"Start now\";\n        recommendedNextLessonHeading = (\n          <h3 className={recommendedNextLessonHeadingClassNames}>\n            Recommended: practice\n          </h3>\n        );\n        break;\n    }\n\n    if (recommendedNextLesson.link.startsWith(\"http\")) {\n      recommendedLink = (\n        <OutboundLink\n          eventLabel={recommendedNextLessonCallToActionButton}\n          aria-label={\n            recommendedNextLessonCallToActionButton +\n            \" (external link opens in new tab)\"\n          }\n          to={recommendedNextLesson.link}\n          onClick={startRecommendedStep}\n          className=\"link-button dib\"\n          style={{ lineHeight: 2 }}\n        >\n          {recommendedNextLessonCallToActionButton} (opens in new tab)\n        </OutboundLink>\n      );\n    } else {\n      recommendedLink = (\n        <Link\n          onClick={startRecommendedStep}\n          to={recommendedNextLesson.link}\n          className=\"link-button dib\"\n          style={{ lineHeight: 2 }}\n        >\n          {recommendedNextLessonCallToActionButton}\n        </Link>\n      );\n    }\n\n    if (studyType === \"error\") {\n      recommendedLinkTitle = \"Unable to load recommendation\";\n      recommendedLink = (\n        <a href=\".\" className=\"link-button dib\" style={{ lineHeight: 2 }}>\n          Refresh\n        </a>\n      );\n    } else {\n      recommendedLinkTitle = recommendedNextLesson.linkTitle;\n    }\n\n    recommendedNextLessonBox = (\n      <React.Fragment>\n        <div className=\"panel bg-white dark:bg-coolgrey-1000 min-h-424 p5 mb3\">\n          {recommendedNextLessonHeading}\n          <p className=\"mb0 mt4\">\n            <strong>{recommendedLinkTitle}</strong>\n          </p>\n          <p className=\"de-emphasized\">{metadataStats}</p>\n          <RecommendationDescription\n            studyType={recommendedNextLesson.studyType}\n          />\n          <div className=\"flex flex-wrap gap-4\">\n            <div>{recommendedLink}</div>\n            <button\n              onClick={recommendAnotherLesson}\n              id=\"js-skip-button\"\n              className=\"button button--secondary pl3 pr3\"\n            >\n              Skip\n            </button>\n          </div>\n          <div className=\"hide\" id=\"js-next-recommended-link-text\">\n            {recommendedNextLesson.linkText}\n          </div>\n        </div>\n        <div className=\"flex flex-wrap content-start-ns\">\n          <div className=\"flex flex-wrap\"></div>\n        </div>\n      </React.Fragment>\n    );\n  } else {\n    recommendedNextLessonBox = <RecommendationBoxFallback />;\n  }\n\n  if (toRecommendedNextLesson === true) {\n    return <Redirect push to={recommendedNextLesson.link} />;\n  }\n\n  return <React.Fragment>{recommendedNextLessonBox}</React.Fragment>;\n};\n\nexport default RecommendationBox;\n","import React from \"react\";\nimport PARAMS from \"../../../utils/params.js\";\nimport { Link } from \"react-router-dom\";\nimport type {\n  LessonIndexEntry,\n  LessonPathWithoutBasenameOrFilename,\n  Study,\n} from \"../../../types\";\nimport { recentLessonHistoryState } from \"../../../states/recentLessonHistoryState\";\nimport { useAtomValue } from \"jotai\";\n\ntype RecentLessonIndex = Pick<LessonIndexEntry, \"path\" | \"title\">;\n\n/** The most *recent* lesson is the *last* history item in the array */\nexport type RecentLessonHistory = RecentLessonHistoryItem[];\n\nexport type RecentLessonHistoryItem = {\n  path: LessonPathWithoutBasenameOrFilename;\n  studyType: Study;\n};\n\ntype Props = {\n  lessonIndex: RecentLessonIndex[];\n};\n\nconst RecentLessons = ({ lessonIndex }: Props) => {\n  const recentLessonHistory = useAtomValue(recentLessonHistoryState)?.history;\n\n  const hasRecentLessons =\n    recentLessonHistory &&\n    recentLessonHistory.length > 0 &&\n    recentLessonHistory[0] &&\n    recentLessonHistory[0].path;\n\n  const linkList = hasRecentLessons\n    ? recentLessonHistory\n        .filter((recentLesson) =>\n          lessonIndex.find(\n            (lesson) =>\n              recentLesson.path.includes(\"/lessons/progress\") ||\n              lesson.path ===\n                recentLesson.path.replace(\"/lessons\", \"\") + \"lesson.txt\"\n          )\n        )\n        .map((recentLesson) => {\n          let lesson = lessonIndex.find(\n            (lesson) =>\n              lesson.path ===\n              recentLesson.path.replace(\"/lessons\", \"\") + \"lesson.txt\"\n          );\n\n          if (recentLesson.path.includes(\"/lessons/progress\")) {\n            const path = recentLesson.path.replace(\"/lessons\", \"\");\n            const title = path.includes(\"memorised\")\n              ? \"Your memorised words\"\n              : path.includes(\"seen\")\n              ? \"Your revision words\"\n              : \"Your words\";\n\n            lesson = {\n              path,\n              title,\n            };\n          }\n\n          let studyType: Study = \"practice\";\n          // NOTE: does not check if studyType is legit\n          if (recentLesson && recentLesson.studyType) {\n            studyType = recentLesson.studyType;\n          }\n\n          const studyTypeKey: keyof typeof PARAMS = `${studyType}Params`;\n\n          return lesson ? (\n            <li className=\"unstyled-list-item mb1\" key={lesson.path}>\n              <Link\n                to={\n                  \"/lessons\" +\n                  lesson.path\n                    .replace(/lesson\\.txt$/, \"\")\n                    .replace(/\\/{2,}/g, \"/\") +\n                  \"?recent=1&\" +\n                  PARAMS[studyTypeKey]\n                }\n                id={\"ga--recent-lessons--\" + lesson.path.replace(/[/.]/g, \"-\")}\n              >\n                {lesson.title}\n              </Link>\n            </li>\n          ) : undefined;\n        })\n        .filter(Boolean) // guard against undefined result from find\n        .reverse()\n    : undefined;\n\n  const recentLessons = hasRecentLessons ? (\n    <React.Fragment>\n      <h3>Recent lessons</h3>\n      <ul className=\"unstyled-list\">{linkList}</ul>\n    </React.Fragment>\n  ) : null;\n\n  return recentLessons;\n};\n\nexport default RecentLessons;\n","import React from \"react\";\nimport GoogleAnalytics from \"react-ga4\";\nimport { Link } from \"react-router-dom\";\nimport * as Utils from \"../../../utils/utils\";\nimport { useAnnouncerApi } from \"../../../components/Announcer/useAnnouncer\";\n\nexport type FlashcardsNextLesson = {\n  /** Example: \"Top 1000 words flashcards\" */\n  linkTitle: string;\n  /** JavaScript timestamp e.g. 1558144862000 */\n  lastSeen: number;\n  /** A URL */\n  link: string;\n};\n\nexport type Props = {\n  flashcardsNextLesson: FlashcardsNextLesson;\n  skipButtonId: string;\n  startFlashcards: () => void;\n  updateFlashcardsRecommendation: () => void;\n};\n\n// This magic time stamp matches the default time used in flashcardsRecommendations\nconst defaultTimestamp = 1558144862000;\n\nconst FlashcardsBox = ({\n  flashcardsNextLesson,\n  skipButtonId,\n  startFlashcards,\n  updateFlashcardsRecommendation,\n}: Props) => {\n  const { updateMessage } = useAnnouncerApi();\n\n  const onSkipFlashcards = () => {\n    GoogleAnalytics.event({\n      category: \"Flashcards\",\n      action: \"Skip recommended flashcards\",\n      label: flashcardsNextLesson?.link || \"BAD_INPUT\",\n    });\n\n    // Note: This is a hacky hack. It would be better to clean up the mess of\n    // code handling recommendations and either have the code that gets the\n    // recommendation call the announcer with the new recommendation (but not\n    // when other actions fetch recommendations) or somehow get the *new*\n    // recommendation from state/props/refs and announce it here instead of\n    // relying on sketchy timeouts and querying the DOM.\n    setTimeout(() => {\n      const toAnnounce = document.getElementById(\n        \"js-next-recommended-link-text\"\n      );\n      if (toAnnounce && toAnnounce.textContent !== \"Loading…\") {\n        updateMessage(`Recommended: ${toAnnounce.textContent ?? \"\"}`);\n      }\n    }, 100);\n\n    updateFlashcardsRecommendation();\n  };\n\n  return !!flashcardsNextLesson ? (\n    <div className=\"bw-12 br-4 b--solid b--brand-primary p3 mb3\">\n      <p className=\"text-right\">\n        <strong>{flashcardsNextLesson.linkTitle}</strong>\n      </p>\n      <p className=\"text-right de-emphasized\" data-chromatic=\"ignore\">\n        {flashcardsNextLesson.lastSeen === defaultTimestamp\n          ? \"New flashcards\"\n          : `Seen ${Utils.relativeTimeAgo(\n              Date.now(),\n              flashcardsNextLesson.lastSeen\n            )} ago`}\n      </p>\n      <div className=\"flex flex-wrap justify-end\">\n        <button\n          onClick={onSkipFlashcards}\n          id={skipButtonId || \"js-flashcards-skip-button\"}\n          className=\"button button--secondary mr2 pl3 pr3\"\n        >\n          Skip\n        </button>\n        <div className=\"text-right\">\n          <Link\n            onClick={startFlashcards}\n            to={flashcardsNextLesson.link}\n            className=\"link-button dib\"\n            style={{ lineHeight: 2 }}\n          >\n            Study\n          </Link>\n        </div>\n        <div className=\"hide\" id=\"js-next-recommended-link-text\">\n          {flashcardsNextLesson.linkTitle}\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"bw-12 br-4 b--solid b--brand-primary p3 mb3\">\n      <p className=\"text-right\">\n        <strong>Loading…</strong>\n      </p>\n      <p className=\"text-right de-emphasized\"></p>\n      <div className=\"flex flex-wrap justify-end\">\n        <button\n          onClick={onSkipFlashcards}\n          id={skipButtonId || \"js-flashcards-skip-button\"}\n          className=\"button button--secondary mr2 pl3 pr3\"\n        >\n          Skip\n        </button>\n        <div className=\"text-right\">\n          <button\n            disabled\n            className=\"link-button dib\"\n            style={{ lineHeight: 2 }}\n          >\n            Loading…\n          </button>\n        </div>\n        <div className=\"hide\" id=\"js-next-recommended-link-text\">\n          Loading…\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FlashcardsBox;\n","import React, { useEffect } from \"react\";\nimport GoogleAnalytics from \"react-ga4\";\nimport ErrorBoundary from \"../../../components/ErrorBoundary\";\nimport FlashcardsBox from \"./FlashcardsBox\";\nimport type { Props as FlashcardsBoxProps } from \"./FlashcardsBox\";\nimport type { FlashcardsCourseLevel } from \"../../../types\";\nimport { useChangeFlashcardCourseLevel } from \"../../lessons/components/UserSettings/updateFlashcardSetting\";\nimport { useAtomValue } from \"jotai\";\nimport { flashcardsRecommendationState } from \"../../../states/flashcardsProgressState\";\n\ntype Props = {\n  showOnSmallScreen: boolean;\n  flashcardsCourseLevel: FlashcardsCourseLevel;\n  skipButtonId: FlashcardsBoxProps[\"skipButtonId\"];\n  updateFlashcardsRecommendation: () => void;\n};\n\nconst FlashcardsSection = ({\n  showOnSmallScreen,\n  flashcardsCourseLevel,\n  skipButtonId,\n  updateFlashcardsRecommendation,\n}: Props) => {\n  const { flashcardsNextLesson } = useAtomValue(flashcardsRecommendationState);\n  const changeFlashcardCourseLevel = useChangeFlashcardCourseLevel();\n\n  useEffect(() => {\n    updateFlashcardsRecommendation();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [flashcardsCourseLevel]);\n\n  const startFlashcards = () => {\n    GoogleAnalytics.event({\n      category: \"Flashcards\",\n      action: \"Start recommended flashcards\",\n      label: flashcardsNextLesson?.link || \"BAD_INPUT\",\n    });\n  };\n\n  return (\n    <div\n      className={`mx-auto${\n        showOnSmallScreen ? \" p3 mw-1024 show-sm-only\" : \"\"\n      }`}\n    >\n      <div className={`mw100${showOnSmallScreen ? \" w-336\" : \"\"}`}>\n        <h3>Flashcards</h3>\n        <ErrorBoundary relative={true}>\n          <div className=\"clearfix mb2 mt2\">\n            <label\n              className=\"mb1 db\"\n              htmlFor={\n                showOnSmallScreen\n                  ? \"smFlashcardsCourseLevel\"\n                  : \"mdFlashcardsCourseLevel\"\n              }\n            >\n              Choose flashcard level\n            </label>\n            <select\n              id={\n                showOnSmallScreen\n                  ? \"smFlashcardsCourseLevel\"\n                  : \"mdFlashcardsCourseLevel\"\n              }\n              name=\"flashcardsCourseLevel\"\n              value={flashcardsCourseLevel}\n              onChange={changeFlashcardCourseLevel}\n              className=\"form-control form-control--large mw100 w-336\"\n            >\n              <option value=\"noviceCourse\">Novice</option>\n              <option value=\"beginnerCourse\">Beginner</option>\n              <option value=\"competentCourse\">Competent</option>\n              <option value=\"proficientCourse\">Proficient</option>\n              <option value=\"expertCourse\">Expert</option>\n            </select>\n          </div>\n          <FlashcardsBox\n            skipButtonId={skipButtonId}\n            flashcardsNextLesson={flashcardsNextLesson}\n            startFlashcards={startFlashcards}\n            updateFlashcardsRecommendation={updateFlashcardsRecommendation}\n          />\n        </ErrorBoundary>\n      </div>\n    </div>\n  );\n};\n\nexport default FlashcardsSection;\n","var _path, _path2, _rect, _rect2, _rect3, _path3, _rect4, _rect5, _rect6, _rect7, _rect8, _rect9, _rect10, _rect11, _rect12, _rect13, _rect14, _rect15, _rect16, _rect17, _rect18, _rect19, _rect20, _rect21, _rect22, _rect23, _rect24, _rect25, _rect26, _rect27, _path4, _circle, _circle2, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _circle3, _circle4;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgBoredRobot(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 77 124\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76.0012 78.404C74.001 64.0127 62.436 60.0127 52.8708 60.0127L52.8708 64.0127C68.5229 64.3869 70.7838 76.6409 70.7838 78.404C70.7838 81.8823 76.48 81.8491 76.0012 78.404Z\",\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 1.73913\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.00084 78.404C3.00098 64.0127 14.4357 60.0127 24.0009 60.0127L24.0009 64.0127C8.34873 64.3869 6.00084 76.6409 6.00084 78.404C6.00084 81.8823 0.522027 81.8491 1.00084 78.404Z\",\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 1.73913\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 25,\n    y: 98,\n    width: 7,\n    height: 21,\n    fill: \"#202630\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 45,\n    y: 98,\n    width: 7,\n    height: 21,\n    fill: \"#202630\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 30,\n    y: 45,\n    width: 17,\n    height: 5,\n    fill: \"#202630\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18 60C18 54.4772 22.4772 50 28 50H49C54.5228 50 59 54.4772 59 60V89C59 94.5228 54.5228 99 49 99H28C22.4772 99 18 94.5228 18 89V60Z\",\n    fill: \"#949494\"\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 50.97,\n    y: 66.8552,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 50.97,\n    y: 63.4045,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 48.3883,\n    y: 66.8552,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 48.3883,\n    y: 63.4045,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 45.8075,\n    y: 66.8552,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect9 || (_rect9 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 45.8075,\n    y: 63.4045,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect10 || (_rect10 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 43.2255,\n    y: 66.8552,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect11 || (_rect11 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 43.2255,\n    y: 63.4045,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect12 || (_rect12 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 40.6438,\n    y: 66.8552,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect13 || (_rect13 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 40.6438,\n    y: 63.4045,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect14 || (_rect14 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 41.9958,\n    y: 70.3042,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect15 || (_rect15 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 39.4149,\n    y: 70.3042,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect16 || (_rect16 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 37.325,\n    y: 63.4045,\n    width: 2.45848,\n    height: 6.28387,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect17 || (_rect17 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 35.7264,\n    y: 70.3042,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect18 || (_rect18 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 33.146,\n    y: 70.3042,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect19 || (_rect19 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 34.4985,\n    y: 66.8552,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect20 || (_rect20 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 34.4985,\n    y: 63.4045,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect21 || (_rect21 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 31.9164,\n    y: 66.8552,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect22 || (_rect22 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 31.9164,\n    y: 63.4045,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect23 || (_rect23 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 29.3356,\n    y: 66.8552,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect24 || (_rect24 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 29.3356,\n    y: 63.4045,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect25 || (_rect25 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 26.7535,\n    y: 66.8552,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect26 || (_rect26 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 26.7535,\n    y: 63.4045,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect27 || (_rect27 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 26.7534,\n    y: 60.9414,\n    width: 26.1828,\n    height: 1.8482,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47 4.48695C40.2243 2.53439 37 9.51792 37 13.9999H40C39.5282 6.74529 44.8491 5.7889 47 7.33062V4.48695Z\",\n    fill: \"#202630\",\n    stroke: \"#202630\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 49,\n    cy: 7,\n    r: 4,\n    fill: \"#202630\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 50.5,\n    cy: 5.5,\n    r: 1.5,\n    fill: \"white\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.5 113C23.8056 113 19.9999 118.5 20 121.5C20.0001 124.5 37 124.5 37 121.5C37 118.5 33.1944 113 28.5 113Z\",\n    fill: \"#202630\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.5 113C43.8056 113 39.9999 118.5 40 121.5C40.0001 124.5 57 124.5 57 121.5C57 118.5 53.1944 113 48.5 113Z\",\n    fill: \"#202630\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62 33C64.2091 33 66 31.2091 66 29C66 26.7909 64.2091 25 62 25V33Z\",\n    fill: \"#202630\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11 29C11 31.2091 12.7909 33 15 33V25C12.7909 25 11 26.7909 11 29Z\",\n    fill: \"#202630\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14 25.0954C14 18.9676 18.9676 14 25.0954 14H51.9046C58.0324 14 63 18.9676 63 25.0954V33C63 39.6274 57.6274 45 51 45H26C19.3726 45 14 39.6274 14 33V25.0954Z\",\n    fill: \"#949494\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20 25.224C20 22.3389 22.3389 20 25.224 20H51.776C54.6611 20 57 22.3389 57 25.224V31C57 35.4183 53.4183 39 49 39H28C23.5817 39 20 35.4183 20 31V25.224Z\",\n    fill: \"white\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.9646 32.4173L35.9646 32.4173C35.4123 32.4173 34.9644 32.8651 34.9644 33.4173C34.9643 33.6888 34.9644 33.9355 34.9647 34.0473C34.9688 35.8694 37.0263 36 38.9646 36C40.9029 36 42.9646 35.9416 42.9646 34.0473L42.9646 33.4173C42.9646 32.8651 42.5168 32.4173 41.9646 32.4173Z\",\n    fill: \"#202630\"\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 30,\n    cy: 28,\n    r: 3,\n    fill: \"#202630\"\n  })), _circle4 || (_circle4 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 47,\n    cy: 28,\n    r: 3,\n    fill: \"#202630\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBoredRobot);\nexport default __webpack_public_path__ + \"static/media/BoredRobot.565aa6cdc7dad57642d2151346a33c6a.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport NumericInput from \"react-numeric-input\";\nimport { ReactComponent as AlertRobot } from \"../../../images/AlertRobot.svg\";\nimport { ReactComponent as BoredRobot } from \"../../../images/BoredRobot.svg\";\nimport { ReactComponent as HappyRobot } from \"../../../images/HappyRobot.svg\";\nimport type { MetWords } from \"../../../types\";\n\ntype Props = {\n  cancelSetGoals: (event: React.MouseEvent | React.KeyboardEvent) => void;\n  handleNewWordsGoalInputChange: (event: any) => void;\n  handleOldWordsGoalInputChange: (event: any) => void;\n  newWordsGoalMet: boolean;\n  newWordsGoalUnveiled: boolean;\n  oldWordsGoalMet: boolean;\n  oldWordsGoalUnveiled: boolean;\n  celebrateCompletedGoals: (oldGoal: boolean, newGoal: boolean) => void;\n  saveGoals: (event: any) => void;\n  showSetGoalsForm: boolean;\n  showSetGoalsFormFn: () => void;\n  startingMetWordsToday: MetWords;\n  todayNewWordCount: number;\n  todayOldWordCount: number;\n  unveilOldWordsGoal: React.Dispatch<React.SetStateAction<boolean>>;\n  unveilNewWordsGoal: React.Dispatch<React.SetStateAction<boolean>>;\n  userGoalInputNewWords: number;\n  userGoalInputOldWords: number;\n  userGoals: {\n    oldWords: number;\n    newWords: number;\n  };\n};\n\ntype TodaysEffortsGoalsProps = {\n  userGoalsWords: number;\n  todayWordCount: number;\n};\n\nconst TodaysEffortsGoals = ({\n  userGoalsWords,\n  todayWordCount,\n}: TodaysEffortsGoalsProps) => {\n  return (\n    <React.Fragment>\n      {userGoalsWords}\n      {userGoalsWords <= todayWordCount ? (\n        <>\n          <span aria-hidden=\"true\"> •</span> Done!\n        </>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\nconst TodaysEffortsOrGoals = ({\n  cancelSetGoals,\n  handleNewWordsGoalInputChange,\n  handleOldWordsGoalInputChange,\n  newWordsGoalMet,\n  newWordsGoalUnveiled,\n  oldWordsGoalMet,\n  oldWordsGoalUnveiled,\n  celebrateCompletedGoals,\n  saveGoals,\n  showSetGoalsForm,\n  showSetGoalsFormFn,\n  startingMetWordsToday,\n  todayNewWordCount,\n  todayOldWordCount,\n  unveilOldWordsGoal,\n  unveilNewWordsGoal,\n  userGoalInputNewWords,\n  userGoalInputOldWords,\n  userGoals,\n}: Props) => {\n  const grabStyle = function () {\n    return false;\n  };\n\n  function revealCompletedGoals() {\n    celebrateCompletedGoals(\n      oldWordsGoalMet && !oldWordsGoalUnveiled,\n      newWordsGoalMet && !newWordsGoalUnveiled\n    );\n\n    unveilOldWordsGoal(oldWordsGoalMet ? true : oldWordsGoalUnveiled);\n    unveilNewWordsGoal(newWordsGoalMet ? true : newWordsGoalUnveiled);\n\n    const element = document.getElementById(\"js-todays-efforts\");\n    if (element) {\n      element.focus();\n    }\n  }\n\n  let todaysEffortsOrGoals;\n  if (showSetGoalsForm) {\n    todaysEffortsOrGoals = (\n      <React.Fragment>\n        <form onSubmit={saveGoals}>\n          <div className=\"pt4 pb4\">\n            <div className=\"mb3\">\n              <label\n                className=\"pb1\"\n                id=\"js-first-interactive-form-field-element\"\n                htmlFor=\"userGoalInputOldWords\"\n              >\n                Old words goal\n              </label>\n              <NumericInput\n                autoCapitalize=\"off\"\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                autoFocus={false}\n                className=\"form-control w-100\"\n                disabled={!showSetGoalsForm}\n                id=\"userGoalInputOldWords\"\n                max={10000}\n                min={1}\n                name=\"userGoalInputOldWords\"\n                onChange={handleOldWordsGoalInputChange}\n                precision={0}\n                spellCheck=\"false\"\n                step={1}\n                style={grabStyle()}\n                type=\"number\"\n                value={userGoalInputOldWords}\n                snap\n              />\n              <div className=\"mt1 text-small de-emphasized\">\n                (50–200 recommended)\n              </div>\n            </div>\n            <div className=\"mb3\">\n              <label className=\"pb1\" htmlFor=\"userGoalInputNewWords\">\n                New words goal\n              </label>\n              <NumericInput\n                autoCapitalize=\"off\"\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                autoFocus={false}\n                className=\"form-control w-100\"\n                disabled={!showSetGoalsForm}\n                id=\"userGoalInputNewWords\"\n                max={10000}\n                min={1}\n                name=\"userGoalInputNewWords\"\n                onChange={handleNewWordsGoalInputChange}\n                precision={0}\n                spellCheck=\"false\"\n                step={1}\n                style={grabStyle()}\n                type=\"number\"\n                value={userGoalInputNewWords}\n                snap\n              />\n              <div className=\"mt1 text-small de-emphasized\">\n                (5–40 recommended)\n              </div>\n            </div>\n            <div className=\"flex flex-wrap justify-end\">\n              <button\n                onClick={cancelSetGoals}\n                className=\"button button--secondary mr2 dib\"\n              >\n                Cancel\n              </button>\n              <button onClick={saveGoals} className=\"button mr2 dib\">\n                Save goals\n              </button>\n            </div>\n          </div>\n        </form>\n      </React.Fragment>\n    );\n  } else if (\n    (oldWordsGoalMet && !oldWordsGoalUnveiled) ||\n    (newWordsGoalMet && !newWordsGoalUnveiled)\n  ) {\n    todaysEffortsOrGoals = (\n      <React.Fragment>\n        <div className=\"inline-flex flex-column items-center pt4 pb4 bb b--brand-primary-tint w-100\">\n          <div className=\"todays-effort-reveal-robot\">\n            <AlertRobot />\n          </div>\n          You completed a goal!\n          <button\n            onClick={revealCompletedGoals}\n            className=\"button button--secondary mt3 dib\"\n          >\n            Reveal\n          </button>\n        </div>\n      </React.Fragment>\n    );\n  } else {\n    let todaysEffortsOldGoalsRow: JSX.Element | null = (\n      <div className=\"inline-flex items-center pt4 pb4 bb b--brand-primary-tint w-100\">\n        <div className=\"flex todays-effort-goal-robot pl2\">\n          {userGoals.oldWords <= todayOldWordCount ? (\n            <HappyRobot />\n          ) : (\n            <BoredRobot />\n          )}\n        </div>\n        <div className=\"stat__number stat__number--display pl3 mr1\">\n          {todayOldWordCount}\n        </div>\n        <div>\n          Old {todayOldWordCount !== 1 ? \"words\" : \"word\"}\n          <br />\n          <span className=\"text-small\">\n            Your goal:{\" \"}\n            <TodaysEffortsGoals\n              userGoalsWords={userGoals.oldWords}\n              todayWordCount={todayOldWordCount}\n            />\n          </span>\n        </div>\n      </div>\n    );\n\n    if (\n      !startingMetWordsToday ||\n      Object.keys(startingMetWordsToday).length < 15\n    ) {\n      todaysEffortsOldGoalsRow = null;\n    }\n\n    todaysEffortsOrGoals = (\n      <React.Fragment>\n        {todaysEffortsOldGoalsRow}\n        <div className=\"inline-flex items-center pt4 pb4 bb b--brand-primary-tint w-100\">\n          <div className=\"flex todays-effort-goal-robot pl2\">\n            {userGoals.newWords <= todayNewWordCount ? (\n              <HappyRobot />\n            ) : (\n              <BoredRobot />\n            )}\n          </div>\n          <div className=\"stat__number stat__number--display pl3 mr1\">\n            {todayNewWordCount}\n          </div>\n          <div>\n            New {todayNewWordCount !== 1 ? \"words\" : \"word\"}\n            <br />\n            <span className=\"text-small\">\n              Your goal:\n              <TodaysEffortsGoals\n                userGoalsWords={userGoals.newWords}\n                todayWordCount={todayNewWordCount}\n              />\n            </span>\n          </div>\n        </div>\n        <div className=\"text-right\">\n          <button\n            id=\"js-set-goals-button\"\n            onClick={showSetGoalsFormFn}\n            className=\"button button--secondary mt3 dib\"\n          >\n            Set goals\n          </button>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <>\n      <h3\n        className=\"mt0 mb0 pt5 pb1 bb b--brand-primary-tint\"\n        id=\"js-todays-efforts\"\n        tabIndex={-1}\n      >\n        Today’s efforts\n      </h3>\n      {todaysEffortsOrGoals}\n    </>\n  );\n};\n\nexport default TodaysEffortsOrGoals;\n","import type { UserSettings } from \"../../../types\";\n\nconst formatSpacePlacementValue = (userSettings: UserSettings) => {\n  if (!userSettings?.spacePlacement) {\n    return \"not set\";\n  }\n\n  switch (userSettings.spacePlacement) {\n    case \"spaceBeforeOutput\":\n      return \"Space before output\";\n    case \"spaceAfterOutput\":\n      return \"Space after output\";\n    case \"spaceOff\":\n      return \"Ignore spaces\";\n    case \"spaceExact\":\n      return \"Exact spacing\";\n\n    default:\n      return \"not set\";\n  }\n};\n\nexport default formatSpacePlacementValue;\n","/** Example: \"typey-type-reformatted-progress-\" */\ntype ProgressFileNamePrefix = string;\n\nconst dashifiedDate = new Date()\n  .toDateString()\n  .replace(/ /g, \"-\")\n  .toLowerCase();\n\nconst formatProgressFileDownloadName = (prefix: ProgressFileNamePrefix) =>\n  `${prefix}${dashifiedDate}.json`;\n\nexport default formatProgressFileDownloadName;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport GoogleAnalytics from \"react-ga4\";\nimport formatSpacePlacementValue from \"../utils/formatSpacePlacementValue\";\nimport makeDownloadHref from \"../../../utils/makeDownloadHref\";\nimport trimAndSumUniqMetWords from \"../../../utils/trimAndSumUniqMetWords\";\nimport formatProgressFileDownloadName from \"../utils/formatProgressFileDownloadName\";\nimport type { MetWords, UserSettings } from \"../../../types\";\n\ntype Props = {\n  metWords: MetWords;\n  userSettings: UserSettings;\n};\n\nconst ReformatProgress = ({ metWords, userSettings }: Props) => {\n  const [reformattedProgress, setReformattedProgress] = useState({});\n\n  const downloadReformattedProgressHref = useMemo(\n    () => makeDownloadHref(reformattedProgress),\n    [reformattedProgress]\n  );\n\n  const downloadReformattedProgress = useCallback(() => {\n    const spacePlacement = userSettings.spacePlacement;\n    let reformattedProgress = trimAndSumUniqMetWords(metWords);\n\n    if (spacePlacement === \"spaceBeforeOutput\") {\n      reformattedProgress = Object.fromEntries(\n        Object.entries(reformattedProgress).map(([word, count]) => [\n          \" \" + word,\n          count,\n        ])\n      );\n    } else if (spacePlacement === \"spaceAfterOutput\") {\n      reformattedProgress = Object.fromEntries(\n        Object.entries(reformattedProgress).map(([word, count]) => [\n          word + \" \",\n          count,\n        ])\n      );\n    }\n\n    setReformattedProgress(reformattedProgress);\n\n    GoogleAnalytics.event({\n      category: \"Downloads\",\n      action: \"Click\",\n      label: \"typey-type-reformatted-progress.json\",\n    });\n  }, [metWords, userSettings.spacePlacement]);\n\n  return (\n    <p className=\"bg-coolgrey-300 dark:bg-coolgrey-1000 pl1 pr1\">\n      If you’ve changed your spacing settings, you can download a reformatted\n      “progress file” to match your new setting. After downloading it, if you're\n      happy it looks good you can load it back into Typey Type. Then visit each\n      lesson to update lesson progress. Your current spacing setting is:{\" \"}\n      {formatSpacePlacementValue(userSettings)}.{\" \"}\n      <a\n        href={downloadReformattedProgressHref}\n        download={formatProgressFileDownloadName(\n          \"typey-type-reformatted-progress-\"\n        )}\n        onClick={downloadReformattedProgress}\n      >\n        Download reformatted progress file\n      </a>\n    </p>\n  );\n};\n\nexport default ReformatProgress;\n","import React from \"react\";\nimport PARAMS, { createParamString } from \"../../../utils/params.js\";\nimport { Link } from \"react-router-dom\";\n\nimport type { UserSettings } from \"../../../types\";\n\ntype LessonLinkProps = {\n  userSettings: UserSettings;\n  yourWordCount: number;\n  yourMemorisedWordCount: number;\n  yourSeenWordCount: number;\n};\n\nconst getPracticeAllLink = (seen: number, memorised: number) =>\n  seen > 1 && memorised > 0 ? (\n    <>\n      <Link to=\"/lessons/progress/\">Practice&nbsp;your words</Link>.{\" \"}\n    </>\n  ) : null;\n\nconst getDrillMemorisedLink = (memorised: number) =>\n  memorised > 0 ? (\n    <>\n      <Link to=\"/lessons/progress/memorised/\">\n        Drill&nbsp;{memorised} memorised word{memorised === 1 ? \"\" : \"s\"}\n      </Link>\n      .{\" \"}\n    </>\n  ) : null;\n\nconst getReviseSeenLink = (seen: number) =>\n  seen > 0 ? (\n    <>\n      <Link to=\"/lessons/progress/seen/\">\n        Revise&nbsp;{seen} seen word{seen === 1 ? \"\" : \"s\"}\n      </Link>\n      .{\" \"}\n    </>\n  ) : null;\n\nconst getDiscoverNewLink = (\n  yourWordCount: number,\n  userSettings: UserSettings\n) => {\n  const defaultDiscoverParams = PARAMS.discover;\n  const userDiscoverParams = userSettings.studyPresets?.[0] ?? {\n    limitNumberOfWords: 5,\n    repetitions: 3,\n  };\n  const combinedDiscoverParams = {\n    ...defaultDiscoverParams,\n    ...userDiscoverParams,\n  };\n  const discoverParamsString = createParamString(combinedDiscoverParams);\n\n  return yourWordCount < 10000 && yourWordCount > 0 ? (\n    <>\n      <Link\n        to={\n          \"/lessons/drills/top-10000-project-gutenberg-words/?recommended=true&\" +\n          discoverParamsString\n        }\n      >\n        Discover new words\n      </Link>\n      .\n    </>\n  ) : null;\n};\n\nconst ProgressLessonLinks = ({\n  userSettings,\n  yourWordCount,\n  yourSeenWordCount,\n  yourMemorisedWordCount,\n}: LessonLinkProps) => {\n  return (\n    <>\n      {[\n        <React.Fragment key=\"practice-all\">\n          {getPracticeAllLink(yourSeenWordCount, yourMemorisedWordCount)}\n        </React.Fragment>,\n        <React.Fragment key=\"drill-memorised\">\n          {getDrillMemorisedLink(yourMemorisedWordCount)}\n        </React.Fragment>,\n        <React.Fragment key=\"revise-seen\">\n          {getReviseSeenLink(yourSeenWordCount)}\n        </React.Fragment>,\n        <React.Fragment key=\"discover-new\">\n          {getDiscoverNewLink(yourWordCount, userSettings)}\n        </React.Fragment>,\n      ]}\n    </>\n  );\n};\n\nexport default ProgressLessonLinks;\n","import React, { useEffect } from \"react\";\nimport GoogleAnalytics from \"react-ga4\";\nimport ProgressLessonLinks from \"./ProgressLessonLinks\";\nimport { format } from \"d3-format\";\n\nimport type { UserSettings } from \"../../../types\";\n\ntype CompletedProps = {\n  restartConfetti: (\n    event:\n      | React.MouseEvent<HTMLButtonElement, MouseEvent>\n      | React.KeyboardEvent<HTMLButtonElement>\n  ) => void;\n  userSettings: UserSettings;\n  yourWordCount: number;\n  yourMemorisedWordCount: number;\n  yourSeenWordCount: number;\n};\n\ntype IntroProps = {\n  yourWordCount: number;\n};\n\nconst IntroToCelebrate10000Memorised = ({ yourWordCount }: IntroProps) => {\n  useEffect(() => {\n    GoogleAnalytics.event({\n      category: \"MemorisedTypeyType10000\",\n      action: \"MemorisedTypeyType10000\",\n      label: \"MemorisedTypeyType10000\",\n    });\n  }, []);\n\n  return (\n    <>\n      Woohoo! You rock! What a magnificent effort to memorise 10,000 words. You\n      are an expert stenographer now! You’ve successfully typed{\" \"}\n      {format(\",\")(yourWordCount)} words. It’s time to{\" \"}\n    </>\n  );\n};\n\nconst IntroToCelebrate10000Typed = ({ yourWordCount }: IntroProps) => {\n  useEffect(() => {\n    GoogleAnalytics.event({\n      category: \"CompletedTypeyType10000\",\n      action: \"CompletedTypeyType10000\",\n      label: \"CompletedTypeyType10000\",\n    });\n  }, []);\n\n  return (\n    <>\n      Woohoo! You rock! You’ve successfully typed {format(\",\")(yourWordCount)}{\" \"}\n      words. You are an accomplished stenographer now! You’ve completed 100% of\n      10,000 words. It’s time to{\" \"}\n    </>\n  );\n};\n\nconst ProgressSummaryCompleted = ({\n  restartConfetti,\n  userSettings,\n  yourWordCount,\n  yourMemorisedWordCount,\n  yourSeenWordCount,\n}: CompletedProps) => {\n  return (\n    <>\n      <p>\n        {yourMemorisedWordCount >= 10000 ? (\n          <IntroToCelebrate10000Memorised yourWordCount={yourWordCount} />\n        ) : (\n          <IntroToCelebrate10000Typed yourWordCount={yourWordCount} />\n        )}\n        <button\n          className=\"button-that-looks-like-a-link\"\n          id=\"celebrate-button\"\n          onClick={restartConfetti}\n          onKeyDown={restartConfetti}\n        >\n          celebrate!\n        </button>\n      </p>\n      <p>\n        <ProgressLessonLinks\n          userSettings={userSettings}\n          yourWordCount={yourWordCount}\n          yourSeenWordCount={yourSeenWordCount}\n          yourMemorisedWordCount={yourMemorisedWordCount}\n        />\n      </p>\n    </>\n  );\n};\n\nexport default ProgressSummaryCompleted;\n","import React, { useMemo } from \"react\";\nimport ProgressSummaryCompleted from \"./ProgressSummaryCompleted\";\nimport ProgressLessonLinks from \"./ProgressLessonLinks\";\n\nimport type { MetWords, UserSettings } from \"../../../types\";\n\ntype Props = {\n  metWords: MetWords;\n  restartConfetti: (\n    event:\n      | React.MouseEvent<HTMLButtonElement, MouseEvent>\n      | React.KeyboardEvent<HTMLButtonElement>\n  ) => void;\n  userSettings: UserSettings;\n  yourMemorisedWordCount: number;\n  yourSeenWordCount: number;\n};\n\ntype MaybeProgressPercentSentenceProps = {\n  yourSeenWordCount: number;\n};\n\nconst ProgressSummaryAndLinks = ({\n  metWords,\n  restartConfetti,\n  userSettings,\n  yourSeenWordCount,\n  yourMemorisedWordCount,\n}: Props) => {\n  const yourWordCount = useMemo(\n    () => Object.keys(metWords).length || 0,\n    [metWords]\n  );\n\n  const progressPercent = useMemo(\n    () => Math.round((yourWordCount / 10000) * 100) || 0,\n    [yourWordCount]\n  );\n\n  const IntroSentence = () => (\n    <span>\n      You’ve successfully typed {yourWordCount}{\" \"}\n      {yourWordCount === 1 ? \"word\" : \"words\"} without misstrokes.{\" \"}\n    </span>\n  );\n\n  const MaybeProgressPercentSentence = ({\n    yourSeenWordCount,\n  }: MaybeProgressPercentSentenceProps) =>\n    yourSeenWordCount > 1 ? (\n      <span>{`You’re ${progressPercent}% of the way to 10,000 words. `}</span>\n    ) : null;\n\n  return yourWordCount >= 10000 ? (\n    <ProgressSummaryCompleted\n      restartConfetti={restartConfetti}\n      userSettings={userSettings}\n      yourWordCount={yourWordCount}\n      yourMemorisedWordCount={yourMemorisedWordCount}\n      yourSeenWordCount={yourSeenWordCount}\n    />\n  ) : (\n    <p>\n      <IntroSentence />\n      <MaybeProgressPercentSentence yourSeenWordCount={yourSeenWordCount} />\n      <ProgressLessonLinks\n        userSettings={userSettings}\n        yourWordCount={yourWordCount}\n        yourSeenWordCount={yourSeenWordCount}\n        yourMemorisedWordCount={yourMemorisedWordCount}\n      />\n    </p>\n  );\n};\n\nexport default ProgressSummaryAndLinks;\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgCheckmark(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"currentColor\",\n    d: \"M2.06 16.354l5.442 5.44a.5.5 0 0 0 .766-.07l11.57-16.912a.5.5 0 0 0-.254-.757l-1.041-.347a.5.5 0 0 0-.565.184L8.064 17.77l-3.71-3.71a.5.5 0 0 0-.708 0l-1.585 1.585a.5.5 0 0 0 0 .708z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheckmark);\nexport default __webpack_public_path__ + \"static/media/Checkmark.ead2583cd96549ec6d98d8b1b49aa0d5.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgTriangleRight(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.445 2.557l7.305 9.13a.5.5 0 0 1 0 .625l-7.305 9.131A.25.25 0 0 1 8 21.287V2.713a.25.25 0 0 1 .445-.156z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTriangleRight);\nexport default __webpack_public_path__ + \"static/media/TriangleRight.16ddddf6bca6186a40e26b524165beb7.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Checkmark from \"../../../components/Icons/icon-images/Checkmark.svg\";\nimport TriangleRight from \"../../../components/Icons/icon-images/TriangleRight.svg\";\nimport Icon from \"../../../components/Icons/Icon\";\nimport Tooltip from \"../../../components/Tooltip\";\nimport slugifyTitle from \"../../../utils/slugifyTitle\";\n\nimport type { LessonIndexEntry, LessonsProgressIndex } from \"../../../types\";\n\ntype Props = {\n  lessonIndex: LessonIndexEntry[];\n  lessonsProgress: LessonsProgressIndex;\n};\n\nconst LessonsProgress = ({ lessonIndex, lessonsProgress }: Props) => {\n  function progressIconClasses(color: string) {\n    return (\n      `text-${color}-600 ` +\n      \"progress-circle \" +\n      \"relative \" +\n      \"svg-baseline \" +\n      \"svg-icon-wrapper\"\n    );\n  }\n\n  function unstarted(id: string) {\n    return (\n      <div className=\"dib\">\n        <div\n          data-tooltip-id={id}\n          data-tooltip-content={\"Unstarted\"}\n          tabIndex={0}\n          className={progressIconClasses(\"violet\")}\n        />\n        <Tooltip id={id} />\n      </div>\n    );\n  }\n\n  function inProgress(id: string) {\n    return (\n      <div className=\"dib\">\n        <div\n          data-tooltip-id={id}\n          data-tooltip-content={\"In progress\"}\n          tabIndex={0}\n          className={progressIconClasses(\"violet\")}\n        >\n          <Icon\n            iconSVGImport={TriangleRight}\n            width=\"1em\"\n            height=\"1em\"\n            style={{ transform: \"translateX(0.025em) scale(0.6)\" }}\n          />\n        </div>\n        <Tooltip id={id} />\n      </div>\n    );\n  }\n\n  function lessonComplete(id: string) {\n    return (\n      <div className=\"dib\">\n        <div\n          data-tooltip-id={id}\n          data-tooltip-content={\"100 words done or lesson complete\"}\n          tabIndex={0}\n          className={progressIconClasses(\"green\")}\n        >\n          <Icon\n            iconSVGImport={Checkmark}\n            width=\"1em\"\n            height=\"1em\"\n            style={{ transform: \"scale(0.6)\" }}\n          />\n        </div>\n        <Tooltip id={id} />\n      </div>\n    );\n  }\n\n  const linkList = lessonIndex.map((lesson) => {\n    let htmlIdForLesson = slugifyTitle(\n      lesson.path.slice(1).replace(\"/lesson.txt\", \"\")\n    );\n    let lessonsubtitle = \"\";\n    let wordCountDenominator = 0;\n    let numberOfWordsSeenOrMemorised = 0;\n    let lessonCompletion;\n    if (lesson.subtitle && lesson.subtitle.length > 0) {\n      lessonsubtitle = \": \" + lesson.subtitle;\n    }\n    if (lesson.wordCount && lesson.wordCount > 0) {\n      wordCountDenominator = lesson.wordCount;\n    }\n    if (\n      lessonsProgress &&\n      lessonsProgress[process.env.PUBLIC_URL + \"/lessons\" + lesson.path]\n    ) {\n      let toDiscover =\n        lessonsProgress[process.env.PUBLIC_URL + \"/lessons\" + lesson.path]\n          ?.numberOfWordsToDiscover || 0;\n      let seen =\n        lessonsProgress[process.env.PUBLIC_URL + \"/lessons\" + lesson.path]\n          ?.numberOfWordsSeen || 0;\n      let memorised =\n        lessonsProgress[process.env.PUBLIC_URL + \"/lessons\" + lesson.path]\n          ?.numberOfWordsMemorised || 0;\n      numberOfWordsSeenOrMemorised = seen + memorised;\n      wordCountDenominator = seen + memorised + toDiscover;\n      if (\n        numberOfWordsSeenOrMemorised >= wordCountDenominator ||\n        numberOfWordsSeenOrMemorised > 100\n      ) {\n        if (numberOfWordsSeenOrMemorised >= wordCountDenominator) {\n          numberOfWordsSeenOrMemorised = wordCountDenominator;\n        }\n        lessonCompletion = lessonComplete(htmlIdForLesson);\n      } else if (numberOfWordsSeenOrMemorised > 0) {\n        lessonCompletion = inProgress(htmlIdForLesson);\n      } else {\n        lessonCompletion = unstarted(htmlIdForLesson);\n      }\n    } else {\n      lessonCompletion = unstarted(htmlIdForLesson);\n    }\n    if (\n      lesson.category === \"Fundamentals\" ||\n      (lesson.category === \"Drills\" && lesson.title.startsWith(\"Top 100\")) ||\n      (lesson.category === \"Drills\" && lesson.title.startsWith(\"Top 200\"))\n    ) {\n      return (\n        <li className=\"unstyled-list-item mb1\" key={lesson.path}>\n          {lessonCompletion}{\" \"}\n          <Link\n            to={`/lessons${lesson.path}`\n              .replace(/lesson\\.txt$/, \"\")\n              .replace(/\\/{2,}/g, \"/\")}\n            id={\n              \"ga--lesson-index-\" +\n              lesson.path.replace(/\\/lesson\\.txt/g, \"\").replace(/[/.]/g, \"-\")\n            }\n          >\n            {lesson.title}\n            {lessonsubtitle}\n          </Link>{\" \"}\n          ·{\" \"}\n          <small>\n            {numberOfWordsSeenOrMemorised} of {wordCountDenominator}\n          </small>\n        </li>\n      );\n    } else {\n      return \"\";\n    }\n  });\n\n  return <>{linkList}</>;\n};\n\nexport default LessonsProgress;\n","import React from \"react\";\nimport GoogleAnalytics from \"react-ga4\";\nimport formatProgressFileDownloadName from \"../utils/formatProgressFileDownloadName\";\nimport makeDownloadHref from \"../../../utils/makeDownloadHref\";\nimport type { MetWords } from \"../../../types\";\n\ntype Props = {\n  metWords: MetWords;\n};\n\nconst DownloadProgressButton = ({ metWords }: Props) => {\n  const downloadProgress = () => {\n    GoogleAnalytics.event({\n      category: \"Downloads\",\n      action: \"Click\",\n      label: \"typey-type-progress.json\",\n    });\n  };\n\n  return (\n    <a\n      href={makeDownloadHref(metWords)}\n      download={formatProgressFileDownloadName(\"typey-type-progress-\")}\n      onClick={downloadProgress}\n      className=\"link-button link-button-ghost table-cell mr1\"\n    >\n      Download progress file\n    </a>\n  );\n};\n\nexport default DownloadProgressButton;\n","import React, { useEffect } from \"react\";\nimport ReactModal from \"react-modal\";\n\ntype Props = {\n  isOpen: boolean;\n  handleCloseModal: () => void;\n};\nconst BackupModal: React.FC<Props> = ({ isOpen, handleCloseModal }) => {\n  useEffect(() => {\n    ReactModal.setAppElement(\"#js-app\");\n  }, []);\n\n  return (\n    <ReactModal\n      isOpen={isOpen}\n      aria={{\n        labelledby: \"aria-modal-heading\",\n        describedby: \"aria-modal-description\",\n      }}\n      ariaHideApp={true}\n      closeTimeoutMS={300}\n      role=\"dialog\"\n      onRequestClose={handleCloseModal}\n      className={{\n        base: \"modal\",\n        afterOpen: \"modal--after-open\",\n        beforeClose: \"modal--before-close\",\n      }}\n      overlayClassName={{\n        base: \"modal__overlay\",\n        afterOpen: \"modal__overlay--after-open\",\n        beforeClose: \"modal__overlay--before-close\",\n      }}\n    >\n      <h3 id=\"aria-modal-heading\">Back up your progress</h3>\n      <p>\n        Typey Type saves your typing progress in your browser’s local storage.{\" \"}\n        <span className=\"bg-danger dark:text-coolgrey-900\">\n          You’ll lose your progress if you clear your browsing data (history,\n          cookies, and cache).\n        </span>{\" \"}\n        If you share this device with other people or use Typey Type across\n        several devices and browsers, you should save your progress elsewhere.\n      </p>\n      <h3>Save progress</h3>\n      <p>You can:</p>\n      <ul>\n        <li>\n          Copy your progress to your clipboard and save it in a text file\n          somewhere safe, or\n        </li>\n        <li>\n          Hit “Download progress file” to save your progress as a JSON file.\n        </li>\n      </ul>\n      <h3>Load progress</h3>\n      <p>\n        When you return, hit “Load progress” and enter your progress to load it\n        back into Typey Type. You can also clear your progress by loading in\n        empty curly braces, <code>{\"{}\"}</code>\n      </p>\n      <div className=\"text-right\">\n        <button className=\"button\" onClick={handleCloseModal}>\n          OK\n        </button>\n      </div>\n    </ReactModal>\n  );\n};\n\nexport default BackupModal;\n","import React, { useState } from \"react\";\nimport BackupModal from \"./BackupModal\";\nimport ClosingCross from \"../../../components/Icons/icon-images/ClosingCross.svg\";\nimport Icon from \"../../../components/Icons/Icon\";\nimport { useAtomValue } from \"jotai\";\nimport { backupBannerDismissedTime } from \"../../../states/globalUserSettingsState\";\nimport { useDismissBackupBanner } from \"../../lessons/components/UserSettings/updateGlobalUserSetting\";\n\nconst BANNER_REAPPEAR_INTERVAL = 1000 * 60 * 60 * 24 * 7; // 1 week\n\nconst BackupBanner: React.FC = () => {\n  const dismissedTime = useAtomValue(backupBannerDismissedTime);\n  const dismiss = useDismissBackupBanner();\n  const [isModalOpen, setModalOpen] = useState(false);\n  if (\n    dismissedTime !== null &&\n    Date.now() < dismissedTime + BANNER_REAPPEAR_INTERVAL\n  )\n    return null;\n  return (\n    <>\n      <div className=\"notification notification--global  w-100 flex wrap justify-between pa1 p1 p3 pa3 mb3 items-center bg-danger dark:text-coolgrey-900\">\n        <div className=\"notification__message\">\n          <p className=\"mb0\">\n            <strong>Back up your progress regularly:</strong> Your progress data\n            is saved in your browser. You’ll lose your progress if you clear\n            your browsing data (history, cookies, and cache).{\" \"}\n            <button\n              className=\"de-emphasized-button\"\n              onClick={() => setModalOpen(true)}\n            >\n              Learn more\n            </button>\n            .\n          </p>\n        </div>\n        <button\n          className=\"de-emphasized-button flex items-center justify-center p1\"\n          aria-label=\"Dismiss notification\"\n          onClick={dismiss}\n        >\n          <Icon iconSVGImport={ClosingCross} width=\"1em\" height=\"1em\" />\n        </button>\n      </div>\n      <BackupModal\n        isOpen={isModalOpen}\n        handleCloseModal={() => setModalOpen(false)}\n      />\n    </>\n  );\n};\n\nexport default BackupBanner;\n","import { atom } from \"jotai\";\nimport { atomWithStorage } from \"jotai/utils\";\n\nexport const userGoalsState = atomWithStorage(\"userGoals\", {\n  newWords: 15,\n  oldWords: 50,\n});\n\nexport const oldWordsGoalUnveiledState = atom(false);\nexport const newWordsGoalUnveiledState = atom(false);\n","import React, { Suspense, useEffect, useRef, useState } from \"react\";\nimport GoogleAnalytics from \"react-ga4\";\nimport ErrorBoundary from \"../../components/ErrorBoundary\";\nimport PseudoContentButton from \"../../components/PseudoContentButton\";\nimport RecommendationBox from \"./components/RecommendationBox\";\nimport RecentLessons from \"./components/RecentLessons\";\nimport * as Confetti from \"../../utils/confetti\";\nimport { useLessonIndex } from \"../../states/lessonIndexState\";\nimport { Link } from \"react-router-dom\";\nimport FlashcardsSection from \"./components/FlashcardsSection\";\nimport TodaysEffortsOrGoals from \"./components/TodaysEffortsOrGoals\";\nimport ReformatProgress from \"./components/ReformatProgress\";\nimport ProgressSummaryAndLinks from \"./components/ProgressSummaryAndLinks\";\nimport LessonsProgress from \"./components/LessonsProgress\";\nimport DownloadProgressButton from \"./components/DownloadProgressButton\";\nimport Subheader from \"../../components/Subheader\";\nimport { MetWords } from \"../../types\";\nimport BackupBanner from \"./components/BackupBanner\";\nimport BackupModal from \"./components/BackupModal\";\nimport { useAppMethods } from \"../../states/legacy/AppMethodsContext\";\nimport { useAtom, useAtomValue } from \"jotai\";\nimport { userSettingsState } from \"../../states/userSettingsState\";\nimport { globalUserSettingsState } from \"../../states/globalUserSettingsState\";\nimport { useUpdateFlashcardsRecommendation } from \"../../states/flashcardsProgressState\";\nimport {\n  newWordsGoalUnveiledState,\n  oldWordsGoalUnveiledState,\n  userGoalsState,\n} from \"../../states/userGoalsState\";\nimport RecommendationBoxFallback from \"./components/RecommendationBoxFallback\";\n\nconst skipButtonId = \"js-flashcards-skip-button\";\nconst mobileSkipButtonId = \"js-mobile-flashcards-skip-button\";\n\nlet particles: any[] = [];\n\ntype Props = {\n  lessonsProgress: any;\n  metWords: MetWords;\n  startingMetWordsToday: any;\n  yourMemorisedWordCount: number;\n  yourSeenWordCount: number;\n};\n\nconst Progress = (props: Props) => {\n  const { setPersonalPreferences, updateStartingMetWordsAndCounts } =\n    useAppMethods();\n  const globalUserSettings = useAtomValue(globalUserSettingsState);\n  const userSettings = useAtomValue(userSettingsState);\n  const lessonIndex = useLessonIndex();\n  const updateFlashcardsRecommendation = useUpdateFlashcardsRecommendation();\n  const [userGoals, setUserGoals] = useAtom(userGoalsState);\n  const [oldWordsGoalUnveiled, setOldWordsGoalUnveiled] = useAtom(\n    oldWordsGoalUnveiledState\n  );\n  const [newWordsGoalUnveiled, setNewWordsGoalUnveiled] = useAtom(\n    newWordsGoalUnveiledState\n  );\n  const mainHeading = useRef<HTMLHeadingElement>(null);\n  const canvas = useRef(null);\n  const firstGoalsRender = useRef(true);\n\n  const [canvasWidth] = useState(Math.floor(window.innerWidth));\n  const [canvasHeight] = useState(Math.floor(window.innerHeight));\n  const [flashWarning, setFlashWarning] = useState(\"\");\n  const [showLoadInput, setShowLoadInput] = useState(false);\n  const [showSetGoalsForm, setShowSetGoalsForm] = useState(false);\n  const [todayNewWordCount, setTodayNewWordCount] = useState(0);\n  const [todayOldWordCount, setTodayOldWordCount] = useState(0);\n  const [oldWordsGoalMet, setOldWordsGoalMet] = useState(false);\n  const [newWordsGoalMet, setNewWordsGoalMet] = useState(false);\n  const [userGoalInputOldWords, setUserGoalInputOldWords] = useState(50);\n  const [userGoalInputNewWords, setUserGoalInputNewWords] = useState(15);\n  const [isBackupModalOpen, setBackupModalOpen] = useState(false);\n\n  useEffect(() => {\n    if (mainHeading) {\n      mainHeading.current?.focus();\n    }\n\n    try {\n      updateFlashcardsRecommendation();\n    } catch (e: any) {\n      console.error(e);\n    }\n\n    const [todayOldWordCountToUpdate, todayNewWordCountToUpdate] =\n      Object.entries(props.metWords).reduce(\n        (accumulator, [phrase, timesSeen]) => {\n          if (\n            props.startingMetWordsToday[phrase] &&\n            timesSeen - props.startingMetWordsToday[phrase] > 0\n          ) {\n            accumulator[0] += 1;\n          } else if (!props.startingMetWordsToday[phrase] && timesSeen > 0) {\n            accumulator[1] += 1;\n          }\n          return accumulator;\n        },\n        [0, 0]\n      );\n\n    const oldWordsGoalMetToUpdate =\n      userGoals.oldWords <= todayOldWordCountToUpdate ? true : oldWordsGoalMet;\n    const newWordsGoalMetToUpdate =\n      userGoals.newWords <= todayNewWordCountToUpdate ? true : newWordsGoalMet;\n\n    setOldWordsGoalMet(oldWordsGoalMetToUpdate);\n    setNewWordsGoalMet(newWordsGoalMetToUpdate);\n    setTodayNewWordCount(todayNewWordCountToUpdate);\n    setTodayOldWordCount(todayOldWordCountToUpdate);\n    // TODO: revisit this after reducing parent component re-renders and converting class component to function component\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (firstGoalsRender.current) {\n      firstGoalsRender.current = false;\n    } else {\n      if (showSetGoalsForm) {\n        const element = document.getElementById(\n          \"js-first-interactive-form-field-element\"\n        );\n        if (element) {\n          element.focus();\n        }\n      } else if (!showSetGoalsForm) {\n        const element = document.getElementById(\"js-set-goals-button\");\n        if (element) {\n          element.focus();\n        }\n      }\n    }\n  }, [showSetGoalsForm]);\n\n  useEffect(() => {\n    if (showLoadInput) {\n      const element = document.getElementById(\n        \"js-metwords-from-personal-store--small\"\n      );\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [showLoadInput]);\n\n  function showLoadInputFn() {\n    setShowLoadInput(true);\n  }\n\n  function handleLoadProgress() {\n    const textareas = document.querySelectorAll(\n      \".js-metwords-from-personal-store\"\n    );\n    const textareaContents: HTMLTextAreaElement = (\n      textareas.length > 1 ? textareas[1] : textareas[0]\n    ) as HTMLTextAreaElement;\n\n    setPersonalPreferences(textareaContents.value);\n    setFlashWarning(\"To update your lesson progress, visit the lessons.\");\n\n    let numberOfMetWords = \"0\";\n    try {\n      const parsedMetWords = JSON.parse(textareaContents.value);\n      numberOfMetWords = Object.keys(parsedMetWords).length.toString();\n\n      updateStartingMetWordsAndCounts(parsedMetWords);\n\n      setOldWordsGoalUnveiled(false);\n      setNewWordsGoalUnveiled(false);\n      setTodayOldWordCount(0);\n      setTodayNewWordCount(0);\n      setOldWordsGoalMet(false);\n      setNewWordsGoalMet(false);\n    } catch (error) {\n      numberOfMetWords = \"BAD_PROGRESS_INPUT\";\n    }\n\n    if (textareaContents.value === \"\" || textareaContents.value === \" \") {\n      numberOfMetWords = \"EMPTY_PROGRESS_INPUT\";\n    }\n\n    GoogleAnalytics.event({\n      category: \"Progress\",\n      action: \"Update progress\",\n      label: \"Load met words: \" + numberOfMetWords,\n    });\n  }\n\n  function saveGoals(event: any) {\n    event.preventDefault();\n\n    GoogleAnalytics.event({\n      category: \"Progress\",\n      action: \"Save goals\",\n      label: \"true\",\n    });\n\n    const currentNewWords = userGoalInputNewWords;\n    const currentOldWords = userGoalInputOldWords;\n\n    const userGoalsToUpdate = {\n      newWords: currentNewWords,\n      oldWords: currentOldWords,\n    };\n\n    if (isNaN(currentOldWords) || currentOldWords === null) {\n      userGoalsToUpdate[\"oldWords\"] = userGoals.oldWords || 1;\n    }\n    if (isNaN(currentNewWords) || currentNewWords === null) {\n      userGoalsToUpdate[\"newWords\"] = userGoals.newWords || 1;\n    }\n\n    const oldWordsGoalUnveiledToUpdate =\n      currentOldWords > userGoals.oldWords ? false : oldWordsGoalUnveiled;\n    const newWordsGoalUnveiledToUpdate =\n      currentNewWords > userGoals.newWords ? false : newWordsGoalUnveiled;\n\n    setOldWordsGoalUnveiled(oldWordsGoalUnveiledToUpdate);\n    setNewWordsGoalUnveiled(newWordsGoalUnveiledToUpdate);\n\n    const oldWordsGoalMetToUpdate =\n      todayOldWordCount < userGoalsToUpdate[\"oldWords\"]\n        ? false\n        : oldWordsGoalMet;\n    const newWordsGoalMetToUpdate =\n      todayNewWordCount < userGoalsToUpdate[\"newWords\"]\n        ? false\n        : newWordsGoalMet;\n\n    setUserGoals(userGoalsToUpdate);\n\n    setOldWordsGoalMet(oldWordsGoalMetToUpdate);\n    setNewWordsGoalMet(newWordsGoalMetToUpdate);\n    setShowSetGoalsForm(false);\n  }\n\n  function cancelSetGoals(event: any) {\n    event.preventDefault();\n\n    GoogleAnalytics.event({\n      category: \"Progress\",\n      action: \"Cancel set goals\",\n      label: \"true\",\n    });\n\n    setShowSetGoalsForm(false);\n  }\n\n  function showSetGoalsFormFn() {\n    GoogleAnalytics.event({\n      category: \"Progress\",\n      action: \"Show set goals form\",\n      label: \"true\",\n    });\n\n    setShowSetGoalsForm(true);\n    setUserGoalInputOldWords(userGoals.oldWords);\n    setUserGoalInputNewWords(userGoals.newWords);\n  }\n\n  function celebrateCompletedGoals(oldGoal: any, newGoal: any) {\n    if (oldGoal && newGoal) {\n      Confetti.setupCanvas(\n        { sparsity: 240, colors: 5 },\n        \"js-confetti-target\",\n        particles\n      );\n    } else {\n      Confetti.setupCanvas(\n        { sparsity: 960, colors: 2 },\n        \"js-confetti-target\",\n        particles\n      );\n    }\n    Confetti.restartAnimation(\n      particles,\n      canvas.current,\n      canvasWidth,\n      canvasHeight\n    );\n  }\n\n  function handleOldWordsGoalInputChange(event: any) {\n    setUserGoalInputOldWords(event);\n\n    GoogleAnalytics.event({\n      category: \"Progress\",\n      action: \"Change old words goal\",\n      label: event || \"BAD_INPUT\",\n    });\n\n    return event;\n  }\n\n  function handleNewWordsGoalInputChange(event: any) {\n    setUserGoalInputNewWords(event);\n\n    GoogleAnalytics.event({\n      category: \"Progress\",\n      action: \"Change new words goal\",\n      label: event || \"BAD_INPUT\",\n    });\n\n    return event;\n  }\n\n  function restartConfetti(event: any) {\n    if (\n      event &&\n      ((event.keyCode && event.keyCode === 13) || event.type === \"click\")\n    ) {\n      particles.splice(0);\n      Confetti.cancelAnimation();\n      Confetti.setupCanvas(\n        { sparsity: 60, colors: 5, positioningRandomness: 600 },\n        \"js-page-confetti-target\",\n        particles\n      );\n      Confetti.restartAnimation(\n        particles,\n        canvas.current,\n        canvasWidth,\n        canvasHeight\n      );\n    }\n  }\n\n  const loadForm = showLoadInput ? (\n    <React.Fragment>\n      <label\n        htmlFor=\"js-metwords-from-personal-store--small\"\n        className=\"inline-block mb05 visually-hidden\"\n      >\n        Enter your progress here:\n      </label>\n      <div className=\"flex flex-wrap\" style={{ rowGap: \"16px\" }}>\n        <textarea\n          id=\"js-metwords-from-personal-store--small\"\n          className=\"js-metwords-from-personal-store progress-textarea bg-info dark:text-coolgrey-900 px1 py05 bw-1 b--solid br-4 db w-100 mr1\"\n          autoCapitalize=\"off\"\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n          spellCheck={false}\n          style={{ maxWidth: \"200px\", maxHeight: \"40px\" }}\n          rows={1}\n        />\n        <PseudoContentButton\n          className=\"link-button load-progress mr2\"\n          onClick={handleLoadProgress.bind(this)}\n          aria-label=\"Load progress from text\"\n        >\n          Load progress\n        </PseudoContentButton>\n      </div>\n    </React.Fragment>\n  ) : (\n    <button\n      onClick={showLoadInputFn.bind(this)}\n      className=\"button button--secondary mr2\"\n      aria-label=\"Show progress loading form\"\n    >\n      Load progress\n    </button>\n  );\n\n  return (\n    <div>\n      <main id=\"main\">\n        <Subheader id=\"js-page-confetti-target\">\n          <div className=\"flex mr1 self-center\">\n            <header className=\"flex items-center min-h-40\">\n              <h2 id=\"progress\" ref={mainHeading} tabIndex={-1}>\n                Progress\n              </h2>\n            </header>\n          </div>\n          <div className=\"flex mxn2\">\n            <DownloadProgressButton metWords={props.metWords} />\n          </div>\n        </Subheader>\n        <canvas\n          ref={canvas}\n          width={canvasWidth}\n          height={canvasHeight}\n          className=\"fixed celebration-canvas top-0 left-0 pointer-none\"\n        />\n\n        <FlashcardsSection\n          showOnSmallScreen={true}\n          flashcardsCourseLevel={globalUserSettings.flashcardsCourseLevel}\n          skipButtonId={mobileSkipButtonId}\n          updateFlashcardsRecommendation={updateFlashcardsRecommendation}\n        />\n\n        <div className={`p3 mx-auto mw-1024 mt3`}>\n          <div className=\"flex flex-wrap justify-between\">\n            <h2 className=\"mb0\">Your progress</h2>\n            <div\n              className=\"flex flex-wrap mb3\"\n              style={{ columnGap: \"16px\", rowGap: \"16px\" }}\n            >\n              <button\n                className=\"de-emphasized-button\"\n                style={{ textDecorationLine: \"none\" }}\n                onClick={() => setBackupModalOpen(true)}\n              >\n                Learn more\n              </button>\n              <BackupModal\n                isOpen={isBackupModalOpen}\n                handleCloseModal={() => setBackupModalOpen(false)}\n              />\n              <div className=\"flex flex-wrap\" style={{ rowGap: \"16px\" }}>\n                <div className=\"flex\">{loadForm}</div>\n                <PseudoContentButton\n                  className=\"js-clipboard-button link-button copy-to-clipboard\"\n                  dataClipboardTarget=\"#js-metwords-from-typey-type\"\n                  aria-label=\"Copy progress to clipboard\"\n                >\n                  Copy progress\n                </PseudoContentButton>\n              </div>\n            </div>\n          </div>\n\n          <BackupBanner />\n\n          <ProgressSummaryAndLinks\n            metWords={props.metWords}\n            restartConfetti={restartConfetti.bind(this)}\n            yourMemorisedWordCount={props.yourMemorisedWordCount}\n            yourSeenWordCount={props.yourSeenWordCount}\n            userSettings={userSettings}\n          />\n\n          <div className=\"flex flex-wrap justify-between pt3\">\n            <div className=\"mw-568 mr3 flex-grow nt-1\">\n              <ErrorBoundary relative={true}>\n                <Suspense fallback={<RecommendationBoxFallback />}>\n                  <RecommendationBox\n                    lessonsProgress={props.lessonsProgress}\n                    yourSeenWordCount={props.yourSeenWordCount}\n                    yourMemorisedWordCount={props.yourMemorisedWordCount}\n                    metWords={props.metWords}\n                  />\n                </Suspense>\n              </ErrorBoundary>\n            </div>\n\n            <div className=\"mw-368 flex-grow\" id=\"js-confetti-target\">\n              <TodaysEffortsOrGoals\n                cancelSetGoals={cancelSetGoals.bind(this)}\n                handleNewWordsGoalInputChange={handleNewWordsGoalInputChange.bind(\n                  this\n                )}\n                handleOldWordsGoalInputChange={handleOldWordsGoalInputChange.bind(\n                  this\n                )}\n                newWordsGoalMet={newWordsGoalMet}\n                newWordsGoalUnveiled={newWordsGoalUnveiled}\n                oldWordsGoalMet={oldWordsGoalMet}\n                oldWordsGoalUnveiled={oldWordsGoalUnveiled}\n                celebrateCompletedGoals={celebrateCompletedGoals.bind(this)}\n                saveGoals={saveGoals.bind(this)}\n                showSetGoalsForm={showSetGoalsForm}\n                showSetGoalsFormFn={showSetGoalsFormFn.bind(this)}\n                startingMetWordsToday={props.startingMetWordsToday}\n                todayNewWordCount={todayNewWordCount}\n                todayOldWordCount={todayOldWordCount}\n                unveilOldWordsGoal={setOldWordsGoalUnveiled}\n                unveilNewWordsGoal={setNewWordsGoalUnveiled}\n                userGoalInputOldWords={userGoalInputOldWords}\n                userGoalInputNewWords={userGoalInputNewWords}\n                userGoals={userGoals}\n              />\n            </div>\n          </div>\n\n          <p\n            className={flashWarning.length > 0 ? \"bg-warning pl1 pr1\" : \"hide\"}\n            aria-live=\"polite\"\n          >\n            {flashWarning}\n          </p>\n\n          <div className=\"flex flex-wrap justify-between\">\n            <div className=\"mw-368 flex-grow order-1\">\n              <ErrorBoundary relative={true}>\n                <RecentLessons lessonIndex={lessonIndex} />\n              </ErrorBoundary>\n              <FlashcardsSection\n                showOnSmallScreen={false}\n                flashcardsCourseLevel={globalUserSettings.flashcardsCourseLevel}\n                skipButtonId={skipButtonId}\n                updateFlashcardsRecommendation={updateFlashcardsRecommendation}\n              />\n            </div>\n            <div className=\"mw-568\">\n              <h3>Lessons progress</h3>\n              <ul className=\"unstyled-list\">\n                <LessonsProgress\n                  lessonIndex={lessonIndex}\n                  lessonsProgress={props.lessonsProgress}\n                />\n              </ul>\n              <p>\n                There are more <Link to=\"/lessons\">Lessons</Link>, including\n                lessons with sentences.\n              </p>\n            </div>\n          </div>\n\n          <h3 id=\"vocabulary-progress\">Vocabulary progress</h3>\n          <ReformatProgress\n            metWords={props.metWords}\n            userSettings={userSettings}\n          />\n          <p>Words you’ve seen and times you’ve typed them well:</p>\n          <p\n            id=\"js-metwords-from-typey-type\"\n            className=\"w-100 mt3 mb3 quote break-words whitespace-break-spaces\"\n          >\n            <small>{JSON.stringify(props.metWords)}</small>\n          </p>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Progress;\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n"],"names":["useChangeWriterInput","setState","useSetAtom","writerInputState","event","name","target","labelString","GoogleAnalytics","category","action","label","useChangeInputForKAOES","inputForKAOESState","useToggleExperiment","experimentsState","value","checked","undefined","toString","useDismissBackupBanner","backupBannerDismissedTime","Date","now","_ref","description","studyType","_jsxs","_Fragment","children","_jsx","href","className","recommendedStudySession","games","limitNumberOfWords","repetitions","linkTitle","linkText","link","recommendedCoursesFallback","_recommendedCoursesState","atomWithLazy","fetch","process","method","credentials","then","response","json","catch","defaultRecommendedNextLesson","PARAMS","practiceParams","recommendedNextLessonState","atom","recommendationHistoryState","currentStep","RecommendationBoxFallback","React","RecommendationDescription","disabled","style","lineHeight","id","lessonsProgress","yourSeenWordCount","yourMemorisedWordCount","metWords","toRecommendedNextLesson","setToRecommendedNextLesson","useState","lessonIndex","useLessonIndex","recommendedCourses","useAtomValue","setRevisionMode","revisionModeState","updateMessage","useAnnouncerApi","firstRecommendationBoxRender","useRef","recommendationHistory","setRecommendationHistory","useAtom","recommendedNextLesson","setRecommendedNextLesson","updateRecommendationHistory","prevRecommendationHistory","newRecommendationHistory","Object","assign","nextRecommendedLesson","courses","arguments","length","history","numberOfWordsSeen","numberOfWordsMemorised","recommendedStudySessionIndex","Math","random","replace","recommendedPracticeLesson","practiceCourse","find","recommendable","entryInLessonsProgress","path","seenOrMemorisedChoice","wordCount","recommendedPracticeLessonInIndex","recommended","min","lessonTitle","drillParams","recommendedDrillLesson","drillCourse","reviseParams","recommendedRevisionLesson","revisionCourse","discoverParams","recommendedDiscoverLesson","discoverCourse","recommendedDiscoverLessonInIndex","wordsLeftToDiscover","numberOfWordsToDiscover","includes","getRecommendedNextLesson","typedNextRecommendedLesson","useEffect","e","console","error","current","recommendAnotherLesson","element","document","getElementById","focus","setTimeout","toAnnounce","_toAnnounce$textConte","textContent","startRecommendedStep","_recommendedNextLesso","startsWith","preventDefault","recommendedNextLessonBox","recommendedNextLessonHeading","recommendedLink","recommendedLinkTitle","metadataStats","recommendedNextLessonCallToActionButton","recommendedNextLessonHeadingClassNames","OutboundLink","eventLabel","to","onClick","Link","Redirect","push","_useAtomValue","recentLessonHistory","recentLessonHistoryState","hasRecentLessons","linkList","filter","recentLesson","lesson","map","title","studyTypeKey","Boolean","reverse","flashcardsNextLesson","skipButtonId","startFlashcards","updateFlashcardsRecommendation","onSkipFlashcards","lastSeen","Utils","showOnSmallScreen","flashcardsCourseLevel","flashcardsRecommendationState","changeFlashcardCourseLevel","useChangeFlashcardCourseLevel","ErrorBoundary","relative","htmlFor","onChange","FlashcardsBox","_path","_path2","_rect","_rect2","_rect3","_path3","_rect4","_rect5","_rect6","_rect7","_rect8","_rect9","_rect10","_rect11","_rect12","_rect13","_rect14","_rect15","_rect16","_rect17","_rect18","_rect19","_rect20","_rect21","_rect22","_rect23","_rect24","_rect25","_rect26","_rect27","_path4","_circle","_circle2","_path5","_path6","_path7","_path8","_path9","_path10","_path11","_circle3","_circle4","_extends","bind","n","t","r","hasOwnProperty","call","apply","SvgBoredRobot","svgRef","titleId","props","viewBox","fill","xmlns","ref","d","stroke","strokeWidth","x","y","width","height","rx","cx","cy","ForwardRef","TodaysEffortsGoals","userGoalsWords","todayWordCount","_ref2","cancelSetGoals","handleNewWordsGoalInputChange","handleOldWordsGoalInputChange","newWordsGoalMet","newWordsGoalUnveiled","oldWordsGoalMet","oldWordsGoalUnveiled","celebrateCompletedGoals","saveGoals","showSetGoalsForm","showSetGoalsFormFn","startingMetWordsToday","todayNewWordCount","todayOldWordCount","unveilOldWordsGoal","unveilNewWordsGoal","userGoalInputNewWords","userGoalInputOldWords","userGoals","todaysEffortsOrGoals","onSubmit","NumericInput","autoCapitalize","autoComplete","autoCorrect","autoFocus","max","precision","spellCheck","step","type","snap","AlertRobot","todaysEffortsOldGoalsRow","oldWords","HappyRobot","BoredRobot","keys","newWords","tabIndex","userSettings","spacePlacement","dashifiedDate","toDateString","toLowerCase","prefix","reformattedProgress","setReformattedProgress","downloadReformattedProgressHref","useMemo","makeDownloadHref","downloadReformattedProgress","useCallback","trimAndSumUniqMetWords","fromEntries","entries","word","count","_ref3","formatSpacePlacementValue","download","formatProgressFileDownloadName","getDrillMemorisedLink","memorised","getReviseSeenLink","seen","getDiscoverNewLink","yourWordCount","_userSettings$studyPr","_userSettings$studyPr2","combinedDiscoverParams","discover","studyPresets","discoverParamsString","createParamString","getPracticeAllLink","IntroToCelebrate10000Memorised","format","IntroToCelebrate10000Typed","restartConfetti","onKeyDown","ProgressLessonLinks","progressPercent","round","IntroSentence","MaybeProgressPercentSentence","ProgressSummaryCompleted","progressIconClasses","color","unstarted","Tooltip","lessonCompletion","htmlIdForLesson","slugifyTitle","slice","lessonsubtitle","wordCountDenominator","numberOfWordsSeenOrMemorised","subtitle","_lessonsProgress","_lessonsProgress2","_lessonsProgress3","toDiscover","Icon","iconSVGImport","Checkmark","transform","TriangleRight","inProgress","downloadProgress","isOpen","handleCloseModal","ReactModal","aria","labelledby","describedby","ariaHideApp","closeTimeoutMS","role","onRequestClose","base","afterOpen","beforeClose","overlayClassName","BackupBanner","dismissedTime","dismiss","isModalOpen","setModalOpen","ClosingCross","BackupModal","userGoalsState","atomWithStorage","oldWordsGoalUnveiledState","newWordsGoalUnveiledState","particles","setPersonalPreferences","updateStartingMetWordsAndCounts","useAppMethods","globalUserSettings","globalUserSettingsState","userSettingsState","useUpdateFlashcardsRecommendation","setUserGoals","setOldWordsGoalUnveiled","setNewWordsGoalUnveiled","mainHeading","canvas","firstGoalsRender","canvasWidth","floor","window","innerWidth","canvasHeight","innerHeight","flashWarning","setFlashWarning","showLoadInput","setShowLoadInput","setShowSetGoalsForm","setTodayNewWordCount","setTodayOldWordCount","setOldWordsGoalMet","setNewWordsGoalMet","setUserGoalInputOldWords","setUserGoalInputNewWords","isBackupModalOpen","setBackupModalOpen","_mainHeading$current","todayOldWordCountToUpdate","todayNewWordCountToUpdate","reduce","accumulator","phrase","timesSeen","oldWordsGoalMetToUpdate","newWordsGoalMetToUpdate","loadForm","rowGap","maxWidth","maxHeight","rows","PseudoContentButton","textareas","querySelectorAll","textareaContents","numberOfMetWords","parsedMetWords","JSON","parse","Subheader","DownloadProgressButton","FlashcardsSection","columnGap","textDecorationLine","dataClipboardTarget","ProgressSummaryAndLinks","keyCode","splice","Confetti","sparsity","colors","positioningRandomness","Suspense","fallback","RecommendationBox","TodaysEffortsOrGoals","oldGoal","newGoal","currentNewWords","currentOldWords","userGoalsToUpdate","isNaN","oldWordsGoalUnveiledToUpdate","newWordsGoalUnveiledToUpdate","RecentLessons","LessonsProgress","ReformatProgress","stringify","prefixExponent","p","formatDecimalParts","coefficient","exponent","Array","join","%","toFixed","formatDecimal","toExponential","f","g","toPrecision","formatRounded","i","toUpperCase","locale","formatPrefix","prototype","prefixes","grouping","thousands","group","identity","Number","j","substring","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","String","percent","minus","nan","newFormat","specifier","formatSpecifier","align","sign","symbol","zero","comma","trim","formatTypes","test","suffix","formatType","maybeSuffix","c","valuePrefix","valueSuffix","valueNegative","abs","s","out","i1","i0","formatTrim","charCodeAt","Infinity","padding","k","pow","formatLocale","NaN","toLocaleString","indexOf","re","match","exec","Error","FormatSpecifier","this"],"sourceRoot":""}