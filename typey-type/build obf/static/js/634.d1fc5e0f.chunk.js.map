{"version":3,"file":"static/js/634.d1fc5e0f.chunk.js","mappings":"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","sources":["pages/lessons/custom/generator/rulesActions.ts","pages/lessons/custom/generator/rulesWithDataActions.ts","pages/lessons/custom/generator/rulesReducer.ts","pages/lessons/custom/generator/rulesWithDataReducer.ts","pages/lessons/custom/generator/components/RuleOptions.tsx","pages/lessons/custom/generator/components/RegexRuleSetting.tsx","pages/lessons/custom/generator/utilities/availableRulePrettyNames.ts","pages/lessons/custom/GeneratorHelp.tsx","pages/lessons/custom/CustomLessonGenerator.tsx"],"sourcesContent":["export const actions = {\n  setRuleStatus: \"setRuleStatus\",\n};\n","export const actions = {\n  setRuleWithDataStatus: \"setRuleWithDataStatus\",\n  setRegexRuleData: \"setRegexRuleData\",\n};\n","import { actions } from \"./rulesActions\";\nimport type { Rules, RuleStatus } from \"./types\";\n\nexport const defaultState: Rules = {\n  endsWithSuffix: \"ignored\",\n  fewerThanFiveCharacters: \"off\",\n  hasAnyLongVowel: \"ignored\",\n  hasAnyShortVowel: \"ignored\",\n  hasAnyVowelKey: \"ignored\",\n  hasApostrophes: \"off\",\n  hasCapitalLetter: \"off\",\n  hasCoding: \"off\",\n  hasCompoundClusters: \"ignored\",\n  hasContractionsPluralsOrPossessives: \"ignored\",\n  hasDictionaryFormatting: \"off\",\n  hasDigraphs: \"ignored\",\n  hasDiphthong: \"ignored\",\n  hasDisambiguatingBrief: \"off\",\n  hasDoubleConsonants: \"ignored\",\n  hasDoubleLetters: \"ignored\",\n  hasDoubleVowels: \"ignored\",\n  hasEfAsVeeOrEss: \"ignored\",\n  hasForcedWordEnding: \"off\",\n  hasInversion: \"ignored\",\n  hasLhsConsonantWithMultipleKeys: \"ignored\",\n  hasLongTranslations: \"ignored\",\n  hasLongWords: \"ignored\",\n  hasMedical: \"off\",\n  hasNumbers: \"off\",\n  hasOneConsonantOnEachSide: \"ignored\",\n  hasOneKeyPerFinger: \"ignored\",\n  hasOneOrMoreSpaces: \"ignored\",\n  hasOneSpace: \"ignored\",\n  hasOnlyOneVowelKey: \"ignored\",\n  hasOnlyShortIVowel: \"ignored\",\n  hasPhillyShift: \"off\",\n  hasPunctuation: \"off\",\n  hasRhsConsonantWithMultipleKeys: \"ignored\",\n  hasShortTranslations: \"ignored\",\n  hasSimpleStenoKeys: \"ignored\",\n  hasSomeConsonants: \"ignored\",\n  hasStar: \"off\",\n  hasStretchKeys: \"ignored\",\n  hasSuppressedSpaceStroke: \"off\",\n  hasUnstressedVowels: \"ignored\",\n  hasVowelDisambiguator: \"ignored\",\n  isBrief: \"off\",\n  isFingerspelled: \"off\",\n  isMultiStroke: \"ignored\",\n  isOneSyllable: \"on\",\n  isRomanNumeral: \"off\",\n  isSingleStroke: \"ignored\",\n  isSuperlative: \"ignored\",\n  isUppercase: \"off\",\n  moreThanOneSyllable: \"ignored\",\n  moreThanTwoCharacters: \"ignored\",\n  outlineIsTranslation: \"ignored\",\n  startsWithPrefix: \"ignored\",\n};\n\nexport const initConfig = (state: Rules) => ({\n  ...defaultState,\n  ...state,\n});\n\nconst setRuleStatus = (\n  state: Rules,\n  payload: { ruleName: keyof Rules; ruleStatus: RuleStatus }\n) => {\n  return {\n    ...state,\n    [payload.ruleName]: payload.ruleStatus,\n  };\n};\n\nexport const rulesReducer = (state: Rules, action: any) => {\n  switch (action?.type) {\n    case actions.setRuleStatus:\n      return setRuleStatus(state, action.payload);\n\n    default:\n      return state;\n  }\n};\n","import { actions } from \"./rulesWithDataActions\";\nimport type { RuleStatus } from \"./types\";\n\nexport type RulesWithData = {\n  outlineRegexText: string;\n  outlineMatching: RuleStatus;\n  translationRegexText: string;\n  translationMatching: RuleStatus;\n};\n\nexport const defaultState: RulesWithData = {\n  outlineRegexText: \"\",\n  outlineMatching: \"ignored\",\n  translationRegexText: \"\",\n  translationMatching: \"ignored\",\n};\n\nexport const initConfig = (state: any) => ({\n  ...defaultState,\n  ...state,\n});\n\nconst setRuleWithDataStatus = (\n  state: RulesWithData,\n  payload: {\n    ruleName: \"outlineMatching\" | \"translationMatching\";\n    ruleStatus: RuleStatus;\n  }\n) => {\n  return {\n    ...state,\n    [payload.ruleName]: payload.ruleStatus,\n  };\n};\n\nconst setRegexRuleData = (\n  state: RulesWithData,\n  payload: {\n    entryPart: \"outline\" | \"translation\";\n    regexText: string;\n  }\n) => {\n  return {\n    ...state,\n    [`${payload.entryPart}RegexText`]: payload.regexText,\n  };\n};\n\nexport const rulesWithDataReducer = (state: RulesWithData, action: any) => {\n  switch (action?.type) {\n    case actions.setRuleWithDataStatus:\n      return setRuleWithDataStatus(state, action.payload);\n\n    case actions.setRegexRuleData:\n      return setRegexRuleData(state, action.payload);\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\n\ntype Props = {\n  ruleName: any;\n  prettyName: any;\n  onChangeRuleStatus: any;\n  rulesState: any;\n};\n\nconst RuleOptions = ({\n  ruleName,\n  prettyName,\n  onChangeRuleStatus,\n  rulesState,\n}: Props) => (\n  <p className=\"mb1 flex items-center\">\n    <select\n      id={ruleName}\n      name={ruleName}\n      value={rulesState[ruleName]}\n      onChange={onChangeRuleStatus}\n      data-rule-status={rulesState[ruleName]}\n      className=\"rule-select text-small form-control w-80 mr1\"\n    >\n      <option value=\"on\">On</option>\n      <option value=\"off\">Off</option>\n      <option value=\"ignored\">Ignored</option>\n    </select>\n    <label className=\"dib lh-single\" htmlFor={ruleName}>\n      {prettyName}\n    </label>\n  </p>\n);\n\nexport default RuleOptions;\n","import React from \"react\";\n\nimport type { RuleStatus } from \"../types\";\n\ntype Props = {\n  regexRuleName: \"outlineMatching\" | \"translationMatching\";\n  regexRuleStatus: RuleStatus;\n  regexRuleDataValue: string;\n  entryPart: \"outline\" | \"translation\";\n  onChangeEntryRegexStatus: any;\n  onChangeEntryRegexData: any;\n  placeholder: string;\n};\n\nconst RegexRuleSettings = ({\n  regexRuleName,\n  regexRuleStatus,\n  regexRuleDataValue,\n  entryPart,\n  onChangeEntryRegexStatus,\n  onChangeEntryRegexData,\n  placeholder,\n}: Props) => (\n  <div className=\"flex flex-wrap gap-4\">\n    <p className=\"mb1 flex items-center\">\n      <select\n        id={regexRuleName}\n        name={regexRuleName} // translationMatching\n        value={regexRuleStatus} // \"on\"\n        onChange={onChangeEntryRegexStatus}\n        data-rule-status={regexRuleStatus}\n        className=\"rule-select text-small form-control w-80 mr1\"\n      >\n        <option value=\"on\">On</option>\n        <option value=\"off\">Off</option>\n        <option value=\"ignored\">Ignored</option>\n      </select>\n      <label className=\"dib lh-single\" htmlFor={regexRuleName}>\n        has {entryPart} matching\n      </label>\n    </p>\n    <p className=\"flex flex-wrap items-center gap-4 mb1\">\n      <label htmlFor={`${entryPart}-regex`}>{entryPart} regex:</label>\n      <input\n        id={`${entryPart}-regex`}\n        className=\"caret-color bg-white dark:bg-coolgrey-1000 input-textarea underline overflow-hidden w-336\"\n        autoCapitalize=\"off\"\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        onChange={onChangeEntryRegexData}\n        placeholder={placeholder}\n        spellCheck={false}\n        type=\"text\"\n        value={regexRuleDataValue} // \"(tion|cean)\"\n      ></input>\n    </p>\n  </div>\n);\n\nexport default RegexRuleSettings;\n","const availableRulePrettyNames = [\n  { ruleName: \"isOneSyllable\", prettyName: \"is one syllable\" },\n  { ruleName: \"moreThanOneSyllable\", prettyName: \"has more than one syllable\" },\n  { ruleName: \"moreThanTwoCharacters\", prettyName: \"has more than two characters\" },\n  { ruleName: \"fewerThanFiveCharacters\", prettyName: \"has fewer than five characters\" },\n  { ruleName: \"isSingleStroke\", prettyName: \"is single-stroke\" },\n  { ruleName: \"isMultiStroke\", prettyName: \"is multi-stroke\" },\n  { ruleName: \"isBrief\", prettyName: \"is a brief\" },\n  { ruleName: \"hasStar\", prettyName: \"has star key\" },\n  { ruleName: \"hasOneSpace\", prettyName: \"has one space\" },\n  { ruleName: \"hasOneOrMoreSpaces\", prettyName: \"has one or more spaces\" },\n  { ruleName: \"hasNumbers\", prettyName: \"has numbers\" },\n  { ruleName: \"isRomanNumeral\", prettyName: \"is a Roman numeral\" },\n  { ruleName: \"hasApostrophes\", prettyName: \"has apostrophes\" },\n  { ruleName: \"hasPunctuation\", prettyName: \"has punctuation\" },\n  { ruleName: \"hasCapitalLetter\", prettyName: \"has a capital letter\" },\n  { ruleName: \"isUppercase\", prettyName: \"is entirely uppercase\" },\n  { ruleName: \"hasSimpleStenoKeys\", prettyName: \"has simple steno keys\" },\n  { ruleName: \"hasOneKeyPerFinger\", prettyName: \"has one key per finger\" },\n  { ruleName: \"hasAnyVowelKey\", prettyName: \"has any vowel key\" },\n  { ruleName: \"hasAnyLongVowel\", prettyName: \"has any long vowel\" },\n  { ruleName: \"hasAnyShortVowel\", prettyName: \"has any short vowel\" },\n  { ruleName: \"hasOnlyShortIVowel\", prettyName: \"has only short I vowel\" },\n  { ruleName: \"hasOnlyOneVowelKey\", prettyName: \"has only one vowel key\" },\n  { ruleName: \"hasUnstressedVowels\", prettyName: \"has unstressed vowels\" },\n  { ruleName: \"hasDoubleVowels\", prettyName: \"has double vowels\" },\n  { ruleName: \"hasDoubleLetters\", prettyName: \"has double letters\" },\n  { ruleName: \"hasDoubleConsonants\", prettyName: \"has double consonants\" },\n  { ruleName: \"hasSomeConsonants\", prettyName: \"has some consonants\" },\n  { ruleName: \"hasOneConsonantOnEachSide\", prettyName: \"has one consonant on each side\" },\n  { ruleName: \"hasLhsConsonantWithMultipleKeys\", prettyName: \"has left-side, multi-key consonant\" },\n  { ruleName: \"hasRhsConsonantWithMultipleKeys\", prettyName: \"has right-side, multi-key consonant\" },\n  { ruleName: \"hasDiphthong\", prettyName: \"has a diphthong like AU, OU, or OEU\" },\n  { ruleName: \"hasVowelDisambiguator\", prettyName: \"has a vowel disambiguator like AE or AO\" },\n  { ruleName: \"hasDigraphs\", prettyName: \"has digraphs like “ch” or “ng”\" },\n  { ruleName: \"hasCompoundClusters\", prettyName: \"has compound clusters like BGS\" },\n  { ruleName: \"hasContractionsPluralsOrPossessives\", prettyName: \"has contractions or possessives\" },\n  { ruleName: \"hasInversion\", prettyName: \"has inversion\" },\n  { ruleName: \"hasEfAsVeeOrEss\", prettyName: \"has “F” as “V” or “S”\" },\n  { ruleName: \"hasShortTranslations\", prettyName: \"has short translations\" },\n  { ruleName: \"hasLongTranslations\", prettyName: \"has long translations\" },\n  { ruleName: \"hasLongWords\", prettyName: \"has long words (no spaces or dashes)\" },\n  { ruleName: \"startsWithPrefix\", prettyName: \"starts with a prefix\" },\n  { ruleName: \"endsWithSuffix\", prettyName: \"ends with a suffix\" },\n  { ruleName: \"isSuperlative\", prettyName: \"is superlative (other than “er” endings)\" },\n  { ruleName: \"outlineIsTranslation\", prettyName: \"outline is the same as translation\" },\n  { ruleName: \"hasStretchKeys\", prettyName: \"has stretch keys D or Z\" },\n  { ruleName: \"isFingerspelled\", prettyName: \"is fingerspelled\" },\n  { ruleName: \"hasDisambiguatingBrief\", prettyName: \"has disambiguating brief like HEURD\" },\n  { ruleName: \"hasSuppressedSpaceStroke\", prettyName: \"has suppressed space stroke, TK-LS\" },\n  { ruleName: \"hasPhillyShift\", prettyName: \"has Philly shift like TDZ\" },\n  { ruleName: \"hasCoding\", prettyName: \"has coding terms\" },\n  { ruleName: \"hasMedical\", prettyName: \"has medical terms\" },\n  { ruleName: \"hasForcedWordEnding\", prettyName: \"has /SP-S forced word ending\" },\n  { ruleName: \"hasDictionaryFormatting\", prettyName: \"has dictionary formatting\" },\n];\n\nexport default availableRulePrettyNames;\n","import React from \"react\";\n\ntype Props = {\n  containerId: string;\n  hideHelp: boolean;\n};\n\ntype RuleHeadingProps = {\n  children: React.ReactNode;\n};\nconst RuleHeading = ({ children }: RuleHeadingProps) => (\n  <h4 className=\"mb0 mt0 pt2 pb1 px3 h5 fw7\">{children}</h4>\n);\n\ntype RuleBlurbProps = {\n  children: React.ReactNode;\n};\nconst RuleBlurb = ({ children }: RuleBlurbProps) => (\n  <div className=\"mb0 pt0 pb1 px3 bb b--brand-primary-tint\">{children}</div>\n);\n\ntype StrokeProps = {\n  children: React.ReactNode;\n};\nconst Stroke = ({ children }: StrokeProps) => (\n  <span className=\"steno-stroke steno-stroke--subtle px05\">{children}</span>\n);\n\nconst GeneratorHelp = ({ hideHelp, containerId }: Props) => (\n  <div\n    id={containerId}\n    className={`mh-page mw-744 overflow-y-scroll bg-slat dark:bg-coolgrey-1100 bl b--brand-primary-tint--60 dark:border-coolgrey-800 ${\n      hideHelp ? \" hide\" : \"\"\n    }`}\n    style={{ flexGrow: 100, maxHeight: \"2632px\" }}\n    aria-hidden={hideHelp}\n  >\n    <div className=\"mw100 type-face--sans-serif\">\n      <h3 className=\"mb1 px3 mt3 pt3\">Lesson generator help</h3>\n\n      <p className=\"mb0 pt2 pb1 px3\">To use the lesson generator:</p>\n      <div className=\"mb0 pt2 px3\">\n        <ol>\n          <li>Select some rules</li>\n          <li>Press “Build lesson”</li>\n          <li>Press “Start generated lesson”</li>\n        </ol>\n      </div>\n\n      <p className=\"mb0 pt2 pb1 px3\">Here are some details about the rules:</p>\n\n      <div className=\"mb0 pt2 px3\">\n        <ul>\n          <li>\n            Setting a rule to “On” will build a lesson only containing entries\n            that meet that rule.\n          </li>\n          <li>\n            Setting a rule to “Off” will build a lesson only containing entries\n            that do NOT meet that rule.\n          </li>\n          <li>\n            Setting a rule to “Ignored” will include both words that do meet the\n            rule and words that do NOT meet the rule; the rule is ignored.\n          </li>\n        </ul>\n      </div>\n\n      <p className=\"mb0 pt1 pb1 px3 bb b--brand-primary-tint\">\n        Some rules don’t make sense to turn on at the same time, such as “is one\n        syllable” and “has more than one syllable”, and will result in no words.\n      </p>\n\n      <RuleHeading>“is one syllable”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule guesses the syllable count and only includes words that are\n          1 syllable long. Anything with a space and some particular terms like\n          “mysql” are automatically considered more than one syllable.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes “one”, “course”, “through”, “branch”.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes “city”, “desire”, “something”, “is it”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has more than one syllable”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule guesses the syllable count and only includes words that are\n          more than 1 syllable long. Some particular terms like “genre” are\n          automatically considered more than one syllable.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“is a brief”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for skeleton briefs (no vowel keys), single vowel key\n          briefs, and left-side or right-side only briefs. It also looks for\n          specific extras like <Stroke>SURG</Stroke> for “surgeon”.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>P-B</Stroke> for “peanut butter”,{\" \"}\n          <Stroke>SEPS</Stroke> for “accepts”, and <Stroke>OEB</Stroke> for\n          “observe”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has star key”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for <Stroke>*</Stroke>.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>PWO*T</Stroke> for “both”. E.g. excludes{\" \"}\n          <Stroke>PWOT</Stroke> for “bot”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has one space”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for dictionary translations with exactly 1 space.\n        </p>\n        <p className=\"mb0\">E.g. includes “is it”.</p>\n        <p className=\"mb0\">E.g. excludes “in real life” and “world”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has one or more spaces”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for dictionary translations with 1 or more spaces.\n        </p>\n        <p className=\"mb0\">E.g. includes “is it” and “in real life”.</p>\n        <p className=\"mb0\">E.g. excludes “world” and “%”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has numbers”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for dictionary translations with any digits.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes “7-zip” and “100 Years of Solitude”.\n        </p>\n        <p className=\"mb0\">E.g. excludes “factor VII”, “seven”, and “%”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“is a Roman numeral”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for Roman numerals from I to XII (1 to 12) using the{\" \"}\n          <Stroke>R</Stroke> key.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>1-R</Stroke> for “I”.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes “1” and <Stroke>EU</Stroke> for “I”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has apostrophes”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">This rule looks for “'”.</p>\n        <p className=\"mb0\">E.g. includes “I'll”.</p>\n        <p className=\"mb0\">E.g. excludes “ill”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has punctuation”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for any punctuation and symbols, including emoji.\n        </p>\n        {/* eslint-disable-next-line jsx-a11y/accessible-emoji */}\n        <p className=\"mb0\">\n          E.g. includes “I'll”, “£”, “©”, “💯”, and{\" \"}\n          <code>&#123;&amp;%&#125;</code>.\n        </p>\n        <p className=\"mb0\">E.g. excludes “ill”, “is it”, and “1”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has a capital letter”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">This rule looks for any capital letter.</p>\n        <p className=\"mb0\">E.g. includes “A”, “iPhone”, and “HTML”.</p>\n        <p className=\"mb0\">E.g. excludes “a”, “phone”, and “.html”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“is entirely uppercase”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for dictionary translations entirely made of uppercase\n          letters.\n        </p>\n        <p className=\"mb0\">E.g. includes “A”, “ASCII”, and “HTML”.</p>\n        <p className=\"mb0\">E.g. excludes “a”, “iPhone”, and “Harry”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has simple steno keys”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for beginner-friendly steno keys, such as those that\n          only need one 1 finger to press, plus star key and number bar. It\n          includes multi-stroke entries.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>KAB</Stroke> for “cab”.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes <Stroke>TKAB</Stroke> for “dab”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has one key per finger”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for outlines that contain no two-key combinations that\n          must be pressed with a single finger. It also excludes multi-stroke\n          entries.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>TEFT</Stroke> and <Stroke>SKES</Stroke>.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes outlines with <Stroke>TS</Stroke>, <Stroke>TD</Stroke>,\n          or <Stroke>*F</Stroke>.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has any vowel key”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for any vowel key: <Stroke>A</Stroke>,{\" \"}\n          <Stroke>O</Stroke>, <Stroke>E</Stroke>, or <Stroke>U</Stroke>.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has any long vowel”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for outlines with any combinations of keys used for\n          long vowels (as opposed to short vowels).\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>AOEU</Stroke> for “eye”, <Stroke>AEU</Stroke>{\" \"}\n          for “a”, and <Stroke>OE</Stroke> for “owe”.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes <Stroke>EU</Stroke> for “I”, <Stroke>A</Stroke> for the\n          prefix “a”, and <Stroke>SEUTS</Stroke> for “sits”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has any short vowel”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for outlines with any short vowel key combinations.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>EU</Stroke> for “I” and <Stroke>SAT</Stroke>{\" \"}\n          “sat”.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes <Stroke>AOEU</Stroke> for “eye” and{\" \"}\n          <Stroke>SAOEUT</Stroke> for “sight”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has only short I vowel”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for outlines containing <Stroke>EU</Stroke> and no\n          other vowels. It also excludes <Stroke>STREUF</Stroke> for “strive”,\n          which is using the short “i” keys only to avoid conflict with\n          “strife”.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>SEUBGS</Stroke> for “six”.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes <Stroke>RUPB</Stroke> for “run”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has only one vowel key”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for <Stroke>A</Stroke>, <Stroke>O</Stroke>,{\" \"}\n          <Stroke>E</Stroke>, or <Stroke>U</Stroke> without other surrounding\n          vowel keys.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>THAT</Stroke> for “that”.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes <Stroke>SRAOU</Stroke> for “view”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has unstressed vowels”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for entries with dropped unstressed vowels.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>TEPD</Stroke> for “tepid”.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes <Stroke>TEFT</Stroke> for “test”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has double vowels”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">This rule looks for exactly two vowels in a row.</p>\n        <p className=\"mb0\">E.g. includes “look”.</p>\n        <p className=\"mb0\">E.g. excludes “yaaaaaaay”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has double letters”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for any duplicate letters, but not triple letters.\n        </p>\n        <p className=\"mb0\">E.g. includes “letter”.</p>\n        <p className=\"mb0\">E.g. excludes “III”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has double consonants”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for exactly two consonants” in a row.\n        </p>\n        <p className=\"mb0\">E.g. includes “Harry”.</p>\n        <p className=\"mb0\">E.g. excludes “best”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has some consonants”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for outlines containing two or more consonant keys.\n        </p>\n        <p className=\"mb0\">E.g. includes “world”.</p>\n        <p className=\"mb0\">E.g. excludes “cat”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has one consonant on each side”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for one consonant from the left side of the steno\n          board and one consonant from the right.\n        </p>\n        <p className=\"mb0\">E.g. includes “sap”.</p>\n        <p className=\"mb0\">E.g. excludes “art”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has left-side, multi-key consonant”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for multi-key consonants on the left-hand side of the\n          board.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has right-side, multi-key consonant”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for multi-key consonants on the right-hand side of the\n          board.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has a diphthong like AU, OU, or OEU”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for outlines containing a diphthong:{\" \"}\n          <Stroke>AU</Stroke>, <Stroke>OU</Stroke>, or <Stroke>OEU</Stroke>.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has a vowel disambiguator like AE or AO”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for outlines containing <Stroke>AE</Stroke> or{\" \"}\n          <Stroke>AO</Stroke> without other surrounding vowel keys.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has digraphs like “ch” or “ng””</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for entries with a matching digraph outline and\n          translation like <Stroke>KH</Stroke> and “ch”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has compound clusters like BGS”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for compound clusters outlines with matching\n          translations like <Stroke>BGS</Stroke> and “ction”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has contractions or possessives”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for apostrophes in lower case words or with the word\n          “I”.\n        </p>\n        <p className=\"mb0\">E.g. includes “aren't” and “I'll”.</p>\n        <p className=\"mb0\">E.g. excludes “L'Oreal”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has inversion”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for entries with matching outlines and words with\n          sounds out of steno order, such as <Stroke>FL</Stroke> and “lf” or\n          “lv”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has “F” as “V” or “S””</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for <Stroke>F</Stroke> to write a word with a vowel\n          (or “y”) and a “s” or “v”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has short translations”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for dictionary translations shorter than 6 characters.\n          Note, it can have surprising results with emoji.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has long translations”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for dictionary translations longer than 16 characters,\n          which may include spaces or hyphenated compound words. Note, it can\n          have surprising results with emoji.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has long words (no spaces or dashes)”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for whole words longer than 10 characters. It excludes\n          translations with hyphens or spaces.\n        </p>\n        <p className=\"mb0\">E.g. includes “immeasurable” and “distributes”.</p>\n        <p className=\"mb0\">\n          E.g. excludes “alarm clock”, “United Nations”, “in real life” and\n          “eastbound traffic”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“starts with a prefix”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for outlines starting with a prefix stroke with a\n          matching translation starting with the same prefix’s text.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“ends with a suffix”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for outlines ending with a suffix stroke with a\n          matching translation ending with the same suffix’s text.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“is superlative (other than “er” endings)”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for probable superlatives ending with “ier” or “est”,\n          or starting with “most ” or “least ” and ending in “ly”. Ideally it\n          would include words ending with “er” but they are hard to distinguish\n          from other words like “fear”.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes “simpler”, “happiest”, and “most loyal”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“outline is the same as translation”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for entries where the outline uses the same letters as\n          the translation.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>THAT</Stroke> for “that” and{\" \"}\n          <Stroke>WAS</Stroke> for “was”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has stretch keys D or Z”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for <Stroke>D</Stroke> or <Stroke>Z</Stroke>.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“is fingerspelled”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for entries where every stroke is a fingerspelling\n          outline.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>*E/KP*/T*/O*/R*/T*</Stroke>.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes <Stroke>HAPBD/SO*PL/TK-LS/S*/T*</Stroke>.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has disambiguating brief like HEURD”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule checks for specific outlines that do not match the\n          translation phonetically and are instead adjusted to avoid a conflict\n          with a similar entry.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>WEUFS</Stroke> for “wives” and{\" \"}\n          <Stroke>STREUF</Stroke> for “strive”.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes <Stroke>HAOEURD</Stroke> for “hydro^” and{\" \"}\n          <Stroke>STRAOEUF</Stroke> for “strife”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has suppressed space stroke, TK-LS”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule checks for <Stroke>TK-LS</Stroke>.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has Philly shift like TDZ”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for <Stroke>TDZ</Stroke>, <Stroke>TSD</Stroke>,{\" \"}\n          <Stroke>TSZ</Stroke>, or <Stroke>SDZ</Stroke>.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has coding terms”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule checks a list of coding terms like “TypeScript”, “def”,\n          “rm”, and “http://”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has medical terms”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule checks a list of medical terms like “carpal tunnel”, “ACE\n          inhibitor”, “red blood cell”, or “cardinal veins”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has /SP-S forced word ending”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for <Stroke>SP-S</Stroke> strokes.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has dictionary formatting”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for dictionary formatting text in outlines used by the\n          Plover steno engine to transform results, such as{\" \"}\n          <code>&#123;PLOVER:TOGGLE&#125;</code> or{\" \"}\n          <code>&#123;MODE:SNAKE&#125;</code>.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has outline matching”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for entries where the outline or strokes match the\n          regular expression provided. This{\" \"}\n          <a\n            href=\"https://www.sitepoint.com/learn-regex/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            external link to learn more regular expressions opens in a new tab\n          </a>\n          .\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has translation matching”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for entries where the translation or words match the\n          regular expression provided. This{\" \"}\n          <a\n            href=\"https://www.sitepoint.com/learn-regex/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            external link to learn more regular expressions opens in a new tab\n          </a>\n          .\n        </p>\n      </RuleBlurb>\n    </div>\n  </div>\n);\n\nexport default GeneratorHelp;\n","import React, { useEffect, useReducer, useRef, useState } from \"react\";\nimport GoogleAnalytics from \"react-ga4\";\nimport { actions } from \"./generator/rulesActions\";\nimport { actions as rulesWithDataActions } from \"./generator/rulesWithDataActions\";\nimport Subheader from \"../../../components/Subheader\";\nimport { useLocalStorage } from \"usehooks-ts\";\nimport {\n  defaultState as defaultRules,\n  rulesReducer,\n} from \"./generator/rulesReducer\";\nimport {\n  defaultState as defaultRulesWithData,\n  rulesWithDataReducer,\n} from \"./generator/rulesWithDataReducer\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport RuleOptions from \"./generator/components/RuleOptions\";\nimport RegexRuleSetting from \"./generator/components/RegexRuleSetting\";\nimport availableRulePrettyNames from \"./generator/utilities/availableRulePrettyNames\";\nimport maxItems from \"./generator/constants/maxItems\";\nimport GeneratorHelp from \"./GeneratorHelp\";\n\nimport type {\n  CustomLesson,\n  LookupDictWithNamespacedDicts,\n} from \"../../../types\";\nimport type { RegexRules } from \"./generator/utilities/generateCustomLesson\";\nimport type { CustomLessonMaterialValidationState } from \"./components/CustomLessonIntro\";\nimport { useAppMethods } from \"../../../states/legacy/AppMethodsContext\";\n\ntype Props = {\n  customLesson: CustomLesson;\n  customLessonMaterialValidationState: CustomLessonMaterialValidationState;\n  globalLookupDictionary: LookupDictWithNamespacedDicts;\n};\n\nconst numberOfVisibleOptions = 16;\n\nconst containerId = \"collapsible-help\";\n\nconst CustomLessonGenerator = ({\n  customLesson,\n  customLessonMaterialValidationState,\n  globalLookupDictionary,\n}: Props) => {\n  const {\n    appFetchAndSetupGlobalDict,\n    generateCustomLesson,\n  } = useAppMethods();\n  const mainHeading = useRef<HTMLHeadingElement>(null);\n\n  const [hideHelp, setHideHelp] = useState(true);\n  const [regexRuleIgnoredButHasText, setRegexRuleIgnoredButHasText] =\n    useState(false);\n\n  const toggleHideHelp = () => {\n    setHideHelp(!hideHelp);\n  };\n\n  useEffect(() => {\n    appFetchAndSetupGlobalDict(false, null).catch((error: Error) => {\n      console.error(error);\n    });\n    // }, [appFetchAndSetupGlobalDict]);\n    // Excluding fetchAndSetupGlobalDict…\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    mainHeading.current?.focus();\n  }, []);\n\n  const onChangeEntryRegexRule: React.ChangeEventHandler<HTMLSelectElement> = (\n    event\n  ) => {\n    setRegexRuleIgnoredButHasText(false);\n    dispatchRulesWithData({\n      type: rulesWithDataActions.setRuleWithDataStatus,\n      payload: {\n        ruleName: event.target.name,\n        ruleStatus: event.target.value,\n      },\n    });\n  };\n\n  const onChangeEntryRegex: React.ChangeEventHandler<HTMLInputElement> = (\n    event\n  ) => {\n    setRegexRuleIgnoredButHasText(false);\n    dispatchRulesWithData({\n      type: rulesWithDataActions.setRegexRuleData,\n      payload: {\n        entryPart: event.target.id.replace(\"-regex\", \"\"),\n        regexText: event.target.value,\n      },\n    });\n  };\n\n  const [rulesWithDataSettings, setRulesWithDataSettings] = useLocalStorage(\n    \"rules-with-data\",\n    defaultRulesWithData\n  );\n\n  const [rulesWithDataState, dispatchRulesWithData] = useReducer(\n    rulesWithDataReducer,\n    {}, // init state\n    () => rulesWithDataSettings\n  );\n\n  const [rulesSettings, setRulesSettings] = useLocalStorage(\n    \"rules\",\n    defaultRules\n  );\n\n  const [rulesState, dispatchRules] = useReducer(\n    rulesReducer,\n    {}, // init state\n    () => rulesSettings\n  );\n\n  const onRules = Object.fromEntries(\n    Object.entries(rulesState).filter(([_ruleName, value]) => value)\n  );\n\n  const regexRules: RegexRules = {\n    outlineMatching: rulesWithDataState.outlineMatching,\n    outlineRegexText: rulesWithDataState.outlineRegexText,\n    translationMatching: rulesWithDataState.translationMatching,\n    translationRegexText: rulesWithDataState.translationRegexText,\n  };\n\n  const buildLesson = () => {\n    generateCustomLesson(globalLookupDictionary, onRules, regexRules);\n    if (\n      (rulesWithDataState.translationRegexText.length > 0 &&\n        rulesWithDataState.translationMatching === \"ignored\") ||\n      (rulesWithDataState.outlineRegexText.length > 0 &&\n        rulesWithDataState.outlineMatching === \"ignored\")\n    ) {\n      setRegexRuleIgnoredButHasText(true);\n    }\n    setRulesSettings(rulesState);\n    setRulesWithDataSettings(rulesWithDataState);\n  };\n\n  const onChangeRuleStatus: React.ChangeEventHandler<HTMLSelectElement> = (\n    event\n  ) => {\n    dispatchRules({\n      type: actions.setRuleStatus,\n      payload: { ruleName: event.target.name, ruleStatus: event.target.value },\n    });\n\n    setRulesSettings(rulesState);\n    setRulesWithDataSettings(rulesWithDataState);\n\n    GoogleAnalytics.event({\n      category: \"Lesson generator\",\n      action: \"Change rule setting\",\n      label: `${event.target.name}: ${event.target.value}`,\n    });\n  };\n\n  const match = useRouteMatch({\n    path: \"/lessons\",\n    strict: true,\n    sensitive: true,\n  });\n  const url = match?.url ?? \"\";\n\n  return (\n    <main id=\"main\">\n      <Subheader>\n        <div className=\"flex mr1 self-center\">\n          <header className=\"flex items-center min-h-40\">\n            <h2\n              ref={mainHeading}\n              tabIndex={-1}\n              id=\"typey-type-for-stenographers-lesson-generator\"\n            >\n              Lesson generator\n            </h2>\n          </header>\n        </div>\n        <div className=\"flex flex-wrap mxn2\">\n          <Link\n            to={`${url}/custom/setup`.replace(/\\/{2,}/g, \"/\")}\n            className=\"link-button link-button-ghost table-cell mr1\"\n            style={{ lineHeight: 2 }}\n            id=\"ga--lesson-index--create-a-custom-lesson\"\n          >\n            Create a custom lesson\n          </Link>\n        </div>\n      </Subheader>\n\n      <div className=\"bg-info dark:bg-coolgrey-1100\">\n        <div className=\"mx-auto mw-1920\">\n          <div className=\"flex-grow mx-auto mw-1440 min-w-0\">\n            <div className=\"flex flex-wrap justify-between\">\n              <div className=\"flex-grow\" style={{ \"flexBasis\": \"648px\" }}>\n                <div className=\"p3 mx-auto mw-1024\">\n                  <div className=\"mt3 flex justify-between\">\n                    <h3 className=\"mt0\">Build lesson</h3>\n                    <p>\n                      <button\n                        className={`button button--secondary mb0 text-center${\n                          hideHelp ? \" collapsed\" : \"\"\n                        }`}\n                        onClick={toggleHideHelp}\n                        onKeyPress={toggleHideHelp}\n                        aria-expanded={!hideHelp}\n                        aria-controls={containerId}\n                      >\n                        {hideHelp ? \"Show help\" : \"Hide help\"}\n                      </button>\n                    </p>\n                  </div>\n                  <div>\n                    <p>\n                      This page lets you generate custom lessons using\n                      Typey&nbsp;Type dictionaries and personal dictionaries.\n                    </p>\n                    <p>\n                      <span role=\"img\" aria-label=\"Warning!\">\n                        ⚠️{\" \"}\n                      </span>\n                      Language is messy. These rules use heuristics and make\n                      imperfect guesses.\n                    </p>\n                    <div className=\"pb1 columns-2 columns-xs gap-4\">\n                      {availableRulePrettyNames\n                        .slice(0, numberOfVisibleOptions)\n                        .map((rule) => (\n                          <RuleOptions\n                            key={rule.ruleName}\n                            ruleName={rule.ruleName}\n                            prettyName={rule.prettyName}\n                            rulesState={rulesState}\n                            onChangeRuleStatus={onChangeRuleStatus}\n                          />\n                        ))}\n                    </div>\n                    <details>\n                      <summary>\n                        <p className=\"cursor-pointer color-interactive\">\n                          More options…\n                        </p>\n                      </summary>\n                      <div>\n                        <div className=\"columns-2 columns-xs gap-4 pb1\">\n                          {availableRulePrettyNames\n                            .slice(numberOfVisibleOptions)\n                            .map((rule) => (\n                              <RuleOptions\n                                key={rule.ruleName}\n                                ruleName={rule.ruleName}\n                                prettyName={rule.prettyName}\n                                rulesState={rulesState}\n                                onChangeRuleStatus={onChangeRuleStatus}\n                              />\n                            ))}\n                        </div>\n                        <p className=\"mb1 flex items-center\">Advanced:</p>\n                        <div className=\"pb3\">\n                          <RegexRuleSetting\n                            regexRuleName={\"translationMatching\"}\n                            regexRuleStatus={\n                              rulesWithDataState.translationMatching\n                            }\n                            regexRuleDataValue={\n                              rulesWithDataState.translationRegexText\n                            }\n                            entryPart={\"translation\"}\n                            onChangeEntryRegexStatus={onChangeEntryRegexRule}\n                            onChangeEntryRegexData={onChangeEntryRegex}\n                            placeholder={\".*(ation|cean)$\"}\n                          />\n                          <RegexRuleSetting\n                            regexRuleName={\"outlineMatching\"}\n                            regexRuleStatus={rulesWithDataState.outlineMatching}\n                            regexRuleDataValue={\n                              rulesWithDataState.outlineRegexText\n                            }\n                            entryPart={\"outline\"}\n                            onChangeEntryRegexStatus={onChangeEntryRegexRule}\n                            onChangeEntryRegexData={onChangeEntryRegex}\n                            placeholder={\".*[DZ]$\"}\n                          />\n                        </div>\n                      </div>\n                    </details>\n                    <p>\n                      <button\n                        className=\"link-button dib mr1\"\n                        style={{ lineHeight: 2 }}\n                        onClick={buildLesson}\n                        type=\"button\"\n                      >\n                        Build lesson\n                      </button>\n                      <Link\n                        to=\"/lessons/custom?study=practice&newWords=1&seenWords=1&retainedWords=1&startFromWord=1\"\n                        className=\"link-button dib button button--secondary\"\n                        style={{ lineHeight: 2 }}\n                      >\n                        Start generated lesson\n                      </Link>\n                    </p>\n                    {regexRuleIgnoredButHasText && (\n                      <p>\n                        Note: an advanced setting is set to “ignored” but has\n                        text. You can change the setting to “on” or “off” or\n                        delete the text to hide this message.\n                      </p>\n                    )}\n                    <p>\n                      {customLessonMaterialValidationState === \"fail\" && (\n                        <>\n                          That combination of rule settings results in no\n                          material. Try setting some rules to “ignored”.\n                          {rulesState.isOneSyllable ===\n                            rulesState.moreThanOneSyllable &&\n                          rulesState.isOneSyllable !== \"ignored\"\n                            ? \" Change one of the syllable count settings.\"\n                            : \"\"}\n                          {(rulesState.isOneSyllable ===\n                            rulesState.hasLongWords ||\n                            rulesState.isOneSyllable ===\n                              rulesState.hasLongTranslations) &&\n                          rulesState.isOneSyllable !== \"ignored\"\n                            ? \" Change the one syllable or long words/translations settings.\"\n                            : \"\"}\n                          {rulesState.isSingleStroke ===\n                            rulesState.isMultiStroke &&\n                          rulesState.isSingleStroke !== \"ignored\"\n                            ? \" Change one of the stroke count settings.\"\n                            : \"\"}\n                        </>\n                      )}\n                      {customLessonMaterialValidationState === \"unvalidated\" &&\n                        \"Preview generated lesson here after building.\"}\n                      {customLessonMaterialValidationState === \"success\" &&\n                        `Preview generated lesson with ${\n                          customLesson.presentedMaterial.length === maxItems\n                            ? \"max \"\n                            : \"\"\n                        }${customLesson.presentedMaterial.length} item${\n                          customLesson.presentedMaterial.length === 1 ? \"\" : \"s\"\n                        }:`}\n                    </p>\n                    <div>\n                      <ul>\n                        {customLessonMaterialValidationState === \"fail\" ||\n                        customLessonMaterialValidationState === \"unvalidated\"\n                          ? undefined\n                          : customLesson.presentedMaterial.map(\n                              (materialItem, index: number) => (\n                                <li\n                                  key={`${index}-${materialItem.phrase}-${materialItem.stroke}`}\n                                  className=\"wrap\"\n                                >\n                                  {materialItem.phrase}{\" \"}\n                                  <kbd className=\"steno-stroke steno-stroke--subtle\">\n                                    {materialItem.stroke}\n                                  </kbd>\n                                </li>\n                              )\n                            )}\n                      </ul>\n                    </div>\n                    {customLessonMaterialValidationState === \"success\" && (\n                      <Link\n                        to=\"/lessons/custom/setup\"\n                        className=\"link-button dib button button--secondary\"\n                        style={{ lineHeight: 2 }}\n                      >\n                        Edit generated lesson\n                      </Link>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <GeneratorHelp hideHelp={hideHelp} containerId={containerId} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default CustomLessonGenerator;\n"],"names":["actions","defaultState","endsWithSuffix","fewerThanFiveCharacters","hasAnyLongVowel","hasAnyShortVowel","hasAnyVowelKey","hasApostrophes","hasCapitalLetter","hasCoding","hasCompoundClusters","hasContractionsPluralsOrPossessives","hasDictionaryFormatting","hasDigraphs","hasDiphthong","hasDisambiguatingBrief","hasDoubleConsonants","hasDoubleLetters","hasDoubleVowels","hasEfAsVeeOrEss","hasForcedWordEnding","hasInversion","hasLhsConsonantWithMultipleKeys","hasLongTranslations","hasLongWords","hasMedical","hasNumbers","hasOneConsonantOnEachSide","hasOneKeyPerFinger","hasOneOrMoreSpaces","hasOneSpace","hasOnlyOneVowelKey","hasOnlyShortIVowel","hasPhillyShift","hasPunctuation","hasRhsConsonantWithMultipleKeys","hasShortTranslations","hasSimpleStenoKeys","hasSomeConsonants","hasStar","hasStretchKeys","hasSuppressedSpaceStroke","hasUnstressedVowels","hasVowelDisambiguator","isBrief","isFingerspelled","isMultiStroke","isOneSyllable","isRomanNumeral","isSingleStroke","isSuperlative","isUppercase","moreThanOneSyllable","moreThanTwoCharacters","outlineIsTranslation","startsWithPrefix","rulesReducer","state","action","type","setRuleStatus","payload","ruleName","ruleStatus","outlineRegexText","outlineMatching","translationRegexText","translationMatching","rulesWithDataReducer","setRuleWithDataStatus","setRegexRuleData","entryPart","regexText","_ref","prettyName","onChangeRuleStatus","rulesState","_jsxs","className","children","id","name","value","onChange","_jsx","htmlFor","regexRuleName","regexRuleStatus","regexRuleDataValue","onChangeEntryRegexStatus","onChangeEntryRegexData","placeholder","autoCapitalize","autoComplete","autoCorrect","spellCheck","RuleHeading","RuleBlurb","_ref2","Stroke","_ref3","_ref4","hideHelp","containerId","style","flexGrow","maxHeight","href","target","rel","_match$url","customLesson","customLessonMaterialValidationState","globalLookupDictionary","appFetchAndSetupGlobalDict","generateCustomLesson","useAppMethods","mainHeading","useRef","setHideHelp","useState","regexRuleIgnoredButHasText","setRegexRuleIgnoredButHasText","toggleHideHelp","useEffect","catch","error","console","_mainHeading$current","current","focus","onChangeEntryRegexRule","event","dispatchRulesWithData","rulesWithDataActions","onChangeEntryRegex","replace","rulesWithDataSettings","setRulesWithDataSettings","useLocalStorage","defaultRulesWithData","rulesWithDataState","useReducer","rulesSettings","setRulesSettings","defaultRules","dispatchRules","onRules","Object","fromEntries","entries","filter","_ruleName","regexRules","GoogleAnalytics","category","label","match","useRouteMatch","path","strict","sensitive","url","Subheader","ref","tabIndex","Link","to","lineHeight","onClick","onKeyPress","role","availableRulePrettyNames","slice","map","rule","RuleOptions","RegexRuleSetting","buildLesson","length","_Fragment","presentedMaterial","maxItems","undefined","materialItem","index","phrase","stroke","GeneratorHelp"],"sourceRoot":""}