{"version":3,"file":"static/js/356.9086d289.chunk.js","mappings":"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","sources":["images/RaverRobot.svg","utils/dictEntryPredicates.js","pages/games/SHUFL/utilities.js","pages/games/SHUFL/gameReducer.js","pages/games/SHUFL/Puzzle.jsx","pages/games/SHUFL/Game.jsx","pages/games/SHUFL/Index.jsx","pages/games/SHUFL/gameActions.js","pages/games/TPEUBGSZ/gameActions.js","pages/games/components/Completed.jsx","pages/games/components/GameProgress.tsx","pages/games/components/Hint.jsx","pages/games/components/Input.jsx","pages/games/components/Intro.jsx","pages/games/utilities/LevelCompleted.jsx","pages/games/utilities/gameActions.js","../node_modules/d3-array/src/shuffle.js"],"sourcesContent":["var _path, _g, _path2, _path3, _path4, _rect, _rect2, _rect3, _rect4, _rect5, _rect6, _rect7, _rect8, _rect9, _rect10, _rect11, _rect12, _rect13, _rect14, _rect15, _rect16, _rect17, _rect18, _rect19, _rect20, _rect21, _rect22, _rect23, _rect24, _path5, _circle, _circle2, _path6, _path7, _path8, _path9, _path10;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgRaverRobot(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 77 124\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId || \"raver-robot-title\"\n  }, \"Raver robot\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId || \"raver-robot-title\"\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.999999 72.3913C1.00002 58 10.5002 54 24.1304 54L24.1304 58C6.50023 58.4873 6.21739 66.9873 6.21739 72.3913C6.21739 75.8696 0.999995 75.8696 0.999999 72.3913Z\",\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 1.73913\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"RaverRobotLeftLeg\",\n    fill: \"#202630\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25 94H32V115H25z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.5 109C23.8056 109 19.9999 114.5 20 117.5C20.0001 120.5 37 120.5 37 117.5C37 114.5 33.1944 109 28.5 109Z\"\n  }))), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76.1305 72.3913C76.1305 58 66.6303 54 53.0001 54L53.0001 58C70.6303 58.4873 70.9131 66.9873 70.9131 72.3913C70.9131 75.8696 76.1305 75.8696 76.1305 72.3913Z\",\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 1.73913\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#202630\",\n    d: \"M45 98H52V119H45zM30 45H47V50H30z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18 60C18 54.4772 22.4772 50 28 50H49C54.5228 50 59 54.4772 59 60V89C59 94.5228 54.5228 99 49 99H28C22.4772 99 18 94.5228 18 89V60Z\",\n    fill: \"#E8686A\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 51.47,\n    y: 66.8552,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 51.47,\n    y: 63.4045,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 48.8883,\n    y: 66.8552,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 48.8883,\n    y: 63.4045,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 46.3075,\n    y: 66.8552,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 46.3075,\n    y: 63.4045,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 43.7255,\n    y: 66.8552,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 43.7255,\n    y: 63.4045,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect9 || (_rect9 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 41.1438,\n    y: 66.8552,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect10 || (_rect10 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 41.1438,\n    y: 63.4045,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect11 || (_rect11 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 42.4958,\n    y: 70.3042,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect12 || (_rect12 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 39.9149,\n    y: 70.3042,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect13 || (_rect13 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 37.825,\n    y: 63.4045,\n    width: 2.45848,\n    height: 6.28387,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect14 || (_rect14 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 36.2264,\n    y: 70.3042,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect15 || (_rect15 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 33.646,\n    y: 70.3042,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect16 || (_rect16 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 34.9985,\n    y: 66.8552,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect17 || (_rect17 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 34.9985,\n    y: 63.4045,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect18 || (_rect18 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 32.4164,\n    y: 66.8552,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect19 || (_rect19 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 32.4164,\n    y: 63.4045,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect20 || (_rect20 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 29.8356,\n    y: 66.8552,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect21 || (_rect21 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 29.8356,\n    y: 63.4045,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect22 || (_rect22 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 27.2535,\n    y: 66.8552,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect23 || (_rect23 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 27.2535,\n    y: 63.4045,\n    width: 1.96678,\n    height: 2.8339,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _rect24 || (_rect24 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 27.2534,\n    y: 60.9414,\n    width: 26.1828,\n    height: 1.8482,\n    rx: 0.462772,\n    fill: \"#202630\",\n    stroke: \"#202630\",\n    strokeWidth: 0.115693\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47 3C39 3 37 8.5 37 14H40C40.2152 5 45 6 47 6V3Z\",\n    fill: \"#202630\",\n    stroke: \"#202630\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 49,\n    cy: 4,\n    r: 4,\n    fill: \"#E8686A\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 50.5,\n    cy: 2.5,\n    r: 1.5,\n    fill: \"#fff\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.5 113C43.8056 113 39.9999 118.5 40 121.5 40.0001 124.5 57 124.5 57 121.5 57 118.5 53.1944 113 48.5 113ZM62 33C64.2091 33 66 31.2091 66 29 66 26.7909 64.2091 25 62 25V33ZM11 29C11 31.2091 12.7909 33 15 33V25C12.7909 25 11 26.7909 11 29Z\",\n    fill: \"#202630\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14 25.0954C14 18.9676 18.9676 14 25.0954 14H51.9046C58.0324 14 63 18.9676 63 25.0954V25.0954V33C63 39.6274 57.6274 45 51 45H26C19.3726 45 14 39.6274 14 33V25.0954V25.0954Z\",\n    fill: \"#E8686A\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20 25.224C20 22.3389 22.3389 20 25.224 20H51.776C54.6611 20 57 22.3389 57 25.224V25.224V31C57 35.4183 53.4183 39 49 39H28C23.5817 39 20 35.4183 20 31V25.224V25.224Z\",\n    fill: \"#fff\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45 27H49M29 27H33\",\n    stroke: \"#202630\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.1923 33L35.7434 33C35.3132 33 34.9638 33.3488 34.9647 33.779C34.9689 35.6012 37.0261 37 38.9644 37C40.9027 37 42.9644 35.6665 42.9644 33.7721C42.9644 33.3457 42.6187 33 42.1923 33Z\",\n    fill: \"#202630\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgRaverRobot);\nexport default __webpack_public_path__ + \"static/media/RaverRobot.053c4d432605a718c0dc0b21c6bf2672.svg\";\nexport { ForwardRef as ReactComponent };","export const hasFewerThan7Letters = (translation) => {\n  // if (process.env.NODE_ENV === 'development') {return translation.trim().length < 5;}\n  return translation.trim().length < 7;\n};\n\nexport const hasMoreThan2Letters = (translation) => {\n  return translation.trim().length > 2;\n};\n\nexport const hasNoRepeatLetters = (translation) => {\n  const uniqLetters = new Set(Array.from(translation));\n  return uniqLetters.size === translation.length;\n};\n\nexport const hasOnlyLowercaseLetters = (translation) => {\n  const regexp = /^[a-z]+$/;\n  return regexp.test(translation.trim());\n};\n","import { shuffle } from \"d3-array\";\n\nimport trimAndSumUniqMetWords from '../../../utils/trimAndSumUniqMetWords';\n\nimport {\n  hasFewerThan7Letters,\n  hasMoreThan2Letters,\n  hasNoRepeatLetters,\n  hasOnlyLowercaseLetters,\n} from \"../../../utils/dictEntryPredicates\";\n\nexport const getLevelMaterial = (material, level) =>\n  material[level + 2] || material[3];\n\nexport const getRightAnswers = (levelMaterial, pickedWord) =>\n  levelMaterial.reduce((prevArr, currentWord) => {\n    return [...currentWord.trim()].sort().join(\"\") ===\n      [...pickedWord.trim()].sort().join(\"\")\n      ? [currentWord.trim(), ...prevArr]\n      : prevArr;\n  }, []);\n\nexport const pickAWord = (levelMaterial) =>\n  shuffle(levelMaterial.slice()).slice(0, 1)[0].trim();\n\nconst defaultWords = {\n  3: [\"was\", \"her\", \"out\"],\n  4: [\"them\", \"when\", \"more\", \"your\", \"than\", \"time\"],\n  5: [\"their\", \"might\", \"place\"],\n  6: [\"course\", \"turned\", \"friend\"],\n};\n\nexport const selectMaterial = (startingMetWordsToday) => {\n  if (!startingMetWordsToday) return defaultWords;\n  const result = Object.keys(trimAndSumUniqMetWords(startingMetWordsToday))\n    .filter(\n      (translation) =>\n        hasFewerThan7Letters(translation) &&\n        hasMoreThan2Letters(translation) &&\n        hasNoRepeatLetters(translation) &&\n        hasOnlyLowercaseLetters(translation)\n    )\n    .reduce(\n      (previous, currentWord) => {\n        if (currentWord.length >= 3 && currentWord.length <= 6) {\n          previous[currentWord.length].push(currentWord);\n        }\n\n        return previous;\n      },\n      { 3: [], 4: [], 5: [], 6: [] }\n    );\n\n  [3, 4, 5, 6].forEach((wordLength) => {\n    if (result[wordLength].length < 3) {\n      result[wordLength].push(...defaultWords[wordLength]);\n    }\n  });\n\n  return result;\n};\n\nconst shuffleLetters = (word) => shuffle(Array.from(word)).join(\"\");\n\nexport const shuffleWord = (pickedWord, rightAnswers) => {\n  let shuffleWord = shuffleLetters(pickedWord);\n  if (rightAnswers.includes(shuffleWord)) {\n    shuffleWord = shuffleLetters(pickedWord);\n  }\n  return shuffleWord;\n};\n","import { actions } from \"./gameActions\";\nimport {\n  getLevelMaterial,\n  getRightAnswers,\n  pickAWord,\n  selectMaterial,\n  shuffleWord,\n} from \"./utilities\";\nimport createStrokeHintForPhrase from \"../../../utils/transformingDictionaries/createStrokeHintForPhrase\";\n\nexport const roundToWin = 3;\nexport const levelToWin = 4;\n\nconst initialProgress = {\n  gameComplete: false,\n  levelComplete: false,\n  level: 1,\n  roundIndex: 0,\n};\n\nconst defaultState = {\n  ...initialProgress,\n  currentHint: \"\",\n  globalLookupDictionary: new Map(),\n  material: {},\n  puzzleText: \"\",\n  rightAnswers: [],\n};\n\nexport const initConfig = (state) => ({\n  ...defaultState,\n  ...state,\n});\n\nconst getGameStartedState = (state, action) => {\n  const material = selectMaterial(action.payload.startingMetWordsToday);\n  const firstPickedWord = pickAWord(getLevelMaterial(material, 1));\n  const rightAnswers = getRightAnswers(\n    getLevelMaterial(material, 1),\n    firstPickedWord\n  );\n  return {\n    ...state,\n    ...initialProgress,\n    globalLookupDictionary: action.payload.globalLookupDictionary,\n    material,\n    currentHint: createStrokeHintForPhrase(\n      firstPickedWord.trim(),\n      state.globalLookupDictionary\n    ),\n    puzzleText: shuffleWord(firstPickedWord, rightAnswers),\n    rightAnswers,\n  };\n};\n\nconst getGameRestartedState = (state) => {\n  const pickedWord = pickAWord(getLevelMaterial(state.material, 1));\n  const rightAnswers = getRightAnswers(\n    getLevelMaterial(state.material, 1),\n    pickedWord\n  );\n  return {\n    ...state,\n    ...initialProgress,\n    currentHint: createStrokeHintForPhrase(\n      pickedWord.trim(),\n      state.globalLookupDictionary\n    ),\n    puzzleText: shuffleWord(pickedWord, rightAnswers),\n    rightAnswers,\n  };\n};\n\nconst getAllLevelsCompletedState = (state) => {\n  const roundCompletedPickedWord = pickAWord(\n    getLevelMaterial(state.material, 1)\n  );\n  const rightAnswers = getRightAnswers(\n    getLevelMaterial(state.material, 1),\n    roundCompletedPickedWord\n  );\n  return {\n    ...state,\n    ...initialProgress,\n    gameComplete: true,\n    currentHint: createStrokeHintForPhrase(\n      roundCompletedPickedWord.trim(),\n      state.globalLookupDictionary\n    ),\n    rightAnswers,\n    puzzleText: shuffleWord(roundCompletedPickedWord, rightAnswers),\n  };\n};\n\nconst getEarlyLevelCompletedState = (state) => {\n  const increasedLevel = state.level + 1;\n  const roundCompletedPickedWord = pickAWord(\n    getLevelMaterial(state.material, increasedLevel)\n  );\n  const rightAnswers = getRightAnswers(\n    getLevelMaterial(state.material, increasedLevel),\n    roundCompletedPickedWord\n  );\n  return {\n    ...state,\n    level: increasedLevel,\n    levelComplete: true,\n    roundIndex: 0,\n    currentHint: createStrokeHintForPhrase(\n      roundCompletedPickedWord.trim(),\n      state.globalLookupDictionary\n    ),\n    rightAnswers,\n    puzzleText: shuffleWord(roundCompletedPickedWord, rightAnswers),\n  };\n};\n\nconst getEarlyRoundCompletedState = (state) => {\n  const roundCompletedPickedWord = pickAWord(\n    getLevelMaterial(state.material, state.level)\n  );\n  const rightAnswers = getRightAnswers(\n    getLevelMaterial(state.material, state.level),\n    roundCompletedPickedWord\n  );\n  return {\n    ...state,\n    roundIndex: state.roundIndex + 1,\n    currentHint: createStrokeHintForPhrase(\n      roundCompletedPickedWord.trim(),\n      state.globalLookupDictionary\n    ),\n    rightAnswers,\n    puzzleText: shuffleWord(roundCompletedPickedWord, rightAnswers),\n  };\n};\n\nexport const gameReducer = (state, action) => {\n  switch (action?.type) {\n    case actions.gameStarted:\n      return getGameStartedState(state, action);\n\n    case actions.gameRestarted:\n      return getGameRestartedState(state, action);\n\n    case actions.levelRestarted:\n      return { ...state, levelComplete: false };\n\n    case actions.roundCompleted:\n      return state.roundIndex + 1 === roundToWin && state.level === levelToWin\n        ? getAllLevelsCompletedState(state)\n        : state.roundIndex + 1 === roundToWin\n        ? getEarlyLevelCompletedState(state)\n        : getEarlyRoundCompletedState(state);\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\n\nexport default function Puzzle({ puzzleText }) {\n  return (\n    <p className=\"text-center\" data-chromatic=\"ignore\">\n      <strong>{[...puzzleText].join(\" \")}</strong>\n    </p>\n  );\n}\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { actions } from \"./gameActions\";\nimport { initConfig, gameReducer, roundToWin, levelToWin } from \"./gameReducer\";\nimport Completed from \"../components/Completed\";\nimport Hint from \"../components/Hint\";\nimport Input from \"../components/Input\";\nimport Intro from \"../components/Intro\";\nimport GameProgress from \"../components/GameProgress\";\nimport LevelCompleted from \"../utilities/LevelCompleted\";\nimport Puzzle from \"./Puzzle\";\nimport { ReactComponent as RaverRobot } from \"../../../images/RaverRobot.svg\";\n\nconst gameName = \"SHUFL\";\nconst introText =\n  \"The steno robots have been dancing too much and shuffled all the letters! You need to type the correct word to get them all back in order.\";\n\nexport default function Game({\n  globalLookupDictionary,\n  globalLookupDictionaryLoaded,\n  startingMetWordsToday,\n  updateMetWords,\n}) {\n  const [typedText, setTypedText] = useState(\"\");\n  const [previousCompletedPhraseAsTyped, setPreviousCompletedPhraseAsTyped] =\n    useState(\"\");\n  const [showHint, setShowHint] = useState(false);\n\n  const [gameState, dispatch] = useReducer(\n    gameReducer,\n    undefined, // init state\n    initConfig\n  );\n\n  useEffect(() => {\n    dispatch({\n      type: actions.gameStarted,\n      payload: { startingMetWordsToday, globalLookupDictionary },\n    });\n    setShowHint(false);\n  }, [startingMetWordsToday, globalLookupDictionary]);\n\n  const onChangeSHUFLInput = (inputText) => {\n    setTypedText(inputText);\n    if (gameState.rightAnswers.includes(inputText.trim().toLowerCase())) {\n      updateMetWords(inputText.trim());\n      setTypedText(\"\");\n      setPreviousCompletedPhraseAsTyped(inputText);\n      setShowHint(false);\n      dispatch({ type: actions.roundCompleted });\n    }\n\n    if (process.env.NODE_ENV === \"development\")\n      console.log(gameState.rightAnswers);\n  };\n\n  return (\n    <div className=\"flex flex-wrap justify-between\">\n      <div className=\"mx-auto mw-1024 min-width-320 w-100\">\n        <h3 id=\"typey-type-SHUFL-game\" className=\"text-center mb3\">\n          SHUFL game\n        </h3>\n        {gameState.gameComplete ? (\n          <Completed gameName={gameName} dispatch={dispatch} />\n        ) : (\n          <>\n            <div className=\"flex flex-wrap\">\n              <Intro\n                introText={introText}\n                robot={\n                  <RaverRobot\n                    id=\"raver-robot-SHUFL\"\n                    role=\"img\"\n                    aria-labelledby=\"raver-robot-title\"\n                  />\n                }\n              />\n              <GameProgress\n                level={gameState.level}\n                levelToWin={levelToWin}\n                round={gameState.roundIndex + 1}\n                roundToWin={roundToWin}\n              />\n            </div>\n            {!globalLookupDictionaryLoaded ? (\n              <p className=\"text-center de-emphasized pt6\">\n                Loading dictionaries…\n              </p>\n            ) : gameState.levelComplete ? (\n              <LevelCompleted\n                dispatch={dispatch}\n                gameName={gameName}\n                level={gameState.level}\n              />\n            ) : (\n              <>\n                <Puzzle puzzleText={gameState.puzzleText} />\n                <Input\n                  onChangeInput={onChangeSHUFLInput}\n                  previousCompletedPhraseAsTyped={\n                    previousCompletedPhraseAsTyped\n                  }\n                  round={gameState.roundIndex + 1}\n                  typedText={typedText}\n                  gameName={gameName}\n                />\n                <Hint\n                  currentStroke={gameState.currentHint}\n                  gameName={gameName}\n                  setShowHint={setShowHint}\n                  showHint={showHint}\n                />\n              </>\n            )}\n          </>\n        )}\n        <p className=\"text-center mt10 text-small\">\n          Got a suggestion?{\" \"}\n          <a\n            href=\"https://forms.gle/wtU8phNLPpDsGdCZ7\"\n            className=\"mt0\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            id=\"ga--SHUFL--give-feedback\"\n          >\n            Give feedback (form opens in new tab)\n          </a>\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport Game from \"./Game\";\nimport Subheader from \"../../../components/Subheader\";\nimport { useAppMethods } from \"../../../states/legacy/AppMethodsContext\";\n\nexport default function Index({\n  globalLookupDictionary,\n  globalLookupDictionaryLoaded,\n  startingMetWordsToday,\n}) {\n  const {\n    appFetchAndSetupGlobalDict,\n    updateMetWords\n  } = useAppMethods();\n  const mainHeading = useRef(null);\n  useEffect(() => {\n    if (mainHeading) {\n      mainHeading.current.focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    appFetchAndSetupGlobalDict(false, null).catch((error) => {\n      console.error(error);\n    });\n  }, [appFetchAndSetupGlobalDict]);\n\n  return (\n    <main id=\"main\">\n      <Subheader>\n        <div className=\"flex mr1 self-center\">\n          <header className=\"flex items-center min-h-40\">\n            <h2 ref={mainHeading} tabIndex={-1}>\n              SHUFL\n            </h2>\n          </header>\n        </div>\n      </Subheader>\n      <div className=\"p3 mx-auto mw-1024\">\n        <Game\n          globalLookupDictionary={globalLookupDictionary}\n          globalLookupDictionaryLoaded={globalLookupDictionaryLoaded}\n          startingMetWordsToday={startingMetWordsToday}\n          updateMetWords={updateMetWords}\n        />\n      </div>\n    </main>\n  );\n}\n","export const actions = {\n  gameRestarted: \"gameRestarted\",\n  gameStarted: \"gameStarted\",\n  levelRestarted: \"levelRestarted\",\n  roundCompleted: \"roundCompleted\",\n};\n","export const actions = {\n  gameRestarted: \"gameRestarted\",\n  gameStarted: \"gameStarted\",\n  levelRestarted: \"levelRestarted\",\n  roundCompleted: \"roundCompleted\",\n};\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport GoogleAnalytics from \"react-ga4\";\nimport { Link } from \"react-router-dom\";\nimport { actions } from \"../utilities/gameActions\";\nimport { ReactComponent as HappyRobot } from \"../../../images/HappyRobot.svg\";\nimport * as Confetti from \"../../../utils/confetti.js\";\n\nconst particles = [];\n\nconst handlePlayAgainClick = (event, gameName, dispatch) => {\n  event.preventDefault();\n\n  if (dispatch) {\n    dispatch({ type: actions.gameRestarted });\n  }\n\n  GoogleAnalytics.event({\n    category: gameName,\n    action: \"Click\",\n    label: \"Play again\",\n  });\n};\n\nexport default React.memo(function Completed({ gameName, dispatch }) {\n  const playAgainButton = useRef(null);\n  const canvasRef = useRef(null);\n  const canvasWidth = Math.floor(window.innerWidth);\n  const canvasHeight = Math.floor(window.innerHeight);\n\n  useEffect(() => {\n    if (playAgainButton) {\n      playAgainButton.current.focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    Confetti.setupCanvas({ sparsity: 960, colors: 5 }, \"you-win\", particles);\n    if (canvasRef.current) {\n      Confetti.restartAnimation(\n        particles,\n        canvasRef.current,\n        canvasWidth,\n        canvasHeight\n      );\n    }\n    return function cleanup() {\n      Confetti.cancelAnimation();\n    };\n  }, [canvasRef, canvasWidth, canvasHeight]);\n\n  const restartConfetti = useCallback(\n    (event) => {\n      if (\n        event &&\n        ((event.keyCode && event.keyCode === 13) || event.type === \"click\")\n      ) {\n        particles.splice(0);\n        Confetti.cancelAnimation();\n        Confetti.setupCanvas(\n          { sparsity: 170, colors: 4 },\n          \"you-win\",\n          particles\n        );\n        Confetti.restartAnimation(\n          particles,\n          canvasRef.current,\n          canvasWidth,\n          canvasHeight\n        );\n      }\n    },\n    [canvasRef, canvasWidth, canvasHeight]\n  );\n\n  return (\n    <>\n      <canvas\n        ref={canvasRef}\n        width={canvasWidth}\n        height={canvasHeight}\n        className=\"fixed celebration-canvas top-0 left-0 pointer-none\"\n      />\n      <div\n        id=\"you-win\"\n        tabIndex={0}\n        onClick={restartConfetti}\n        onKeyDown={restartConfetti}\n        className=\"w-100 pt1\"\n      >\n        <div className=\"w-100 mw-48 mx-auto\">\n          <HappyRobot />\n        </div>\n        <p className=\"text-center w-100\">You win!</p>\n      </div>\n      <p className=\"mx-auto text-center\">\n        <button\n          ref={playAgainButton}\n          className=\"button\"\n          onClick={(event) => handlePlayAgainClick(event, gameName, dispatch)}\n        >\n          Play again\n        </button>\n      </p>\n      <p className=\"mx-auto text-center mt3\">\n        <Link to=\"/games\" className=\"text-center py1\">Games</Link>\n      </p>\n    </>\n  );\n});\n","import React, { FC } from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\ntype RoundProps = {\n  round: number;\n  roundToWin: number;\n};\n\nconst Round: FC<RoundProps> = ({ round, roundToWin }) => (\n  <>\n    Round:{\" \"}\n    <TransitionGroup className={\"dib\"} component={\"span\"} key={round}>\n      <CSSTransition timeout={500} classNames=\"bloop\" appear={true}>\n        <strong className=\"dib\">{round < 1 ? \"∞\" : round}</strong>\n      </CSSTransition>\n    </TransitionGroup>{\" \"}\n    of {roundToWin}\n    <br />\n  </>\n);\n\ntype LevelProps = {\n  level?: number;\n  levelToWin?: number;\n};\n\nconst Level: FC<LevelProps> = ({ level, levelToWin }) => {\n  return level ? (\n    <>\n      Level: <strong>{level || 1}</strong> of {levelToWin || 1}\n    </>\n  ) : null;\n};\n\ntype Props = {\n  round: number;\n  roundToWin: number;\n  level?: number;\n  levelToWin?: number;\n};\n\nconst GameProgress: FC<Props> = ({ level, levelToWin, round, roundToWin }) => (\n  <div className=\"flex flex-grow\">\n    <p className=\"text-center w-100\">\n      <Round round={round} roundToWin={roundToWin} />\n      <Level level={level} levelToWin={levelToWin} />\n    </p>\n  </div>\n);\n\nexport default GameProgress;\n","import React from \"react\";\nimport GoogleAnalytics from \"react-ga4\";\n\nconst handleHintClick = (event, setShowHint, gameName) => {\n  event.preventDefault();\n\n  const yourInput = document.getElementById(`${gameName}-input`);\n  if (yourInput) {\n    yourInput.focus();\n  }\n\n  setShowHint(true);\n\n  GoogleAnalytics.event({\n    category: gameName,\n    action: \"Click\",\n    label: \"Hint\",\n  });\n};\n\nexport default function Hint({\n  currentStroke,\n  setShowHint,\n  showHint,\n  gameName,\n}) {\n  return (\n    <>\n      {!showHint && (\n        <p className=\"mt3 text-center\">\n          <a\n            href=\"#hint\"\n            className=\"dib\"\n            onClick={(event) => handleHintClick(event, setShowHint, gameName)}\n            onKeyPress={(event) =>\n              handleHintClick(event, setShowHint, gameName)\n            }\n          >\n            Hint?\n          </a>\n        </p>\n      )}\n      <div\n        className={`flex justify-center${showHint ? \" mt3\" : \"\"}`}\n        id=\"hint\"\n        tabIndex={-1}\n      >\n        <pre\n          className={`overflow-auto mw-408 my05 text-small flex${\n            showHint ? \"\" : \" hide\"\n          }`}\n          aria-hidden={!showHint}\n        >\n          <span\n            className=\"steno-stroke pa05 text-small\"\n            role=\"note\"\n            aria-label={[...currentStroke].join(\" \").replace(\"-\", \"dash\")}\n          >\n            {currentStroke}\n          </span>\n        </pre>\n      </div>\n    </>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nexport default function Input({\n  onChangeInput,\n  previousCompletedPhraseAsTyped,\n  round,\n  typedText,\n  gameName,\n}) {\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    if (inputRef) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  const onChangeTypedText = (event) => {\n    const inputText = event?.target?.value || \"\";\n    onChangeInput(inputText);\n  };\n\n  return (\n    <>\n      <label\n        htmlFor={`${gameName}-input`}\n        className=\"inline-block mb05 visually-hidden\"\n      >\n        Enter the correct text:\n      </label>\n      <div className=\"relative\">\n        <samp className=\"pointer-none absolute absolute--fill w-100\">\n          <TransitionGroup\n            className={\"dib flex justify-center\"}\n            component={\"span\"}\n            key={round}\n          >\n            <CSSTransition timeout={5000} classNames=\"dissolve\" appear={true}>\n              <kbd\n                className={\n                  \"text-green-700 successfully-typed-text typed-text-input-positioning pre relative text-center\"\n                }\n                aria-hidden=\"true\"\n              >\n                {round > 1 ? previousCompletedPhraseAsTyped : \"\"}\n              </kbd>\n            </CSSTransition>\n          </TransitionGroup>\n        </samp>\n        <textarea\n          ref={inputRef}\n          autoCapitalize=\"off\"\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n          className=\"input-textarea w-100 typed-text-input-textarea text-center mx-auto overflow-hidden\"\n          id={`${gameName}-input`}\n          onChange={onChangeTypedText}\n          rows={1}\n          style={{ textDecoration: \"none\" }}\n          spellCheck={false}\n          value={typedText}\n          wrap=\"off\"\n        ></textarea>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Intro({ introText, robot }) {\n  return (\n    <div className=\"mw-824 mr3 flex-grow\">\n      <div className=\"flex\">\n        <div className=\"w-100 mw-48 mr3 game-robot\">{robot}</div>\n        <p>{introText}</p>\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport GoogleAnalytics from \"react-ga4\";\nimport { actions as SHUFLactions } from \"../SHUFL/gameActions\";\nimport { actions as TPEUBGSZactions } from \"../TPEUBGSZ/gameActions\";\nimport { ReactComponent as AlertRobot } from \"../../../images/AlertRobot.svg\";\nimport * as Confetti from \"../../../utils/confetti.js\";\n\nconst particles = [];\nconst ConfettiConfig = { sparsity: 480, colors: 2 };\n\nconst handleActionClick = (event, gameName, dispatch) => {\n  event.preventDefault();\n\n  if (dispatch) {\n    dispatch({\n      type:\n        gameName === \"SHUFL\"\n          ? SHUFLactions.levelRestarted\n          : TPEUBGSZactions.levelRestarted,\n    });\n  }\n\n  GoogleAnalytics.event({\n    category: gameName,\n    action: \"Click\",\n    label: \"Play again\",\n  });\n};\n\nexport default React.memo(function LevelCompleted({\n  gameName,\n  level,\n  dispatch,\n}) {\n  const actionbutton = useRef(null);\n  const canvasRef = useRef(null);\n  const canvasWidth = Math.floor(window.innerWidth);\n  const canvasHeight = Math.floor(window.innerHeight);\n\n  useEffect(() => {\n    if (actionbutton) {\n      actionbutton.current.focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    Confetti.setupCanvas(ConfettiConfig, \"level-completed\", particles);\n    if (canvasRef.current) {\n      Confetti.restartAnimation(\n        particles,\n        canvasRef.current,\n        canvasWidth,\n        canvasHeight\n      );\n    }\n    return function cleanup() {\n      Confetti.cancelAnimation();\n    };\n  }, [canvasRef, canvasWidth, canvasHeight]);\n\n  const restartConfetti = useCallback(\n    (event) => {\n      if (\n        event &&\n        ((event.keyCode && event.keyCode === 13) || event.type === \"click\")\n      ) {\n        particles.splice(0);\n        Confetti.cancelAnimation();\n        Confetti.setupCanvas(ConfettiConfig, \"level-completed\", particles);\n        Confetti.restartAnimation(\n          particles,\n          canvasRef.current,\n          canvasWidth,\n          canvasHeight\n        );\n      }\n    },\n    [canvasRef, canvasWidth, canvasHeight]\n  );\n\n  return (\n    <>\n      <canvas\n        ref={canvasRef}\n        width={canvasWidth}\n        height={canvasHeight}\n        className=\"fixed celebration-canvas top-0 left-0 pointer-none\"\n      />\n      <div\n        tabIndex=\"0\"\n        onClick={restartConfetti}\n        onKeyDown={restartConfetti}\n        className=\"w-100\"\n      >\n        <div className=\"w-100 mw-48 mx-auto\" id=\"level-completed\">\n          <AlertRobot />\n        </div>\n        <p className=\"text-center w-100\">\n          <strong>Level {level - 1} complete!</strong>\n        </p>\n      </div>\n      <p className=\"mx-auto text-center\">\n        <button\n          ref={actionbutton}\n          className=\"button\"\n          onClick={(event) => handleActionClick(event, gameName, dispatch)}\n        >\n          Next level\n        </button>\n      </p>\n    </>\n  );\n});\n","export const actions = {\n  gameRestarted: \"gameRestarted\",\n  roundCompleted: \"roundCompleted\",\n  makeGuess: \"makeGuess\"\n};\n","export default shuffler(Math.random);\n\nexport function shuffler(random) {\n  return function shuffle(array, i0 = 0, i1 = array.length) {\n    let m = i1 - (i0 = +i0);\n    while (m) {\n      const i = random() * m-- | 0, t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n    return array;\n  };\n}\n"],"names":["_path","_g","_path2","_path3","_path4","_rect","_rect2","_rect3","_rect4","_rect5","_rect6","_rect7","_rect8","_rect9","_rect10","_rect11","_rect12","_rect13","_rect14","_rect15","_rect16","_rect17","_rect18","_rect19","_rect20","_rect21","_rect22","_rect23","_rect24","_path5","_circle","_circle2","_path6","_path7","_path8","_path9","_path10","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgRaverRobot","_ref","svgRef","title","titleId","props","viewBox","fill","xmlns","ref","undefined","id","d","stroke","strokeWidth","x","y","width","height","rx","cx","cy","strokeLinecap","ForwardRef","getLevelMaterial","material","level","getRightAnswers","levelMaterial","pickedWord","reduce","prevArr","currentWord","trim","sort","join","pickAWord","shuffle","slice","defaultWords","selectMaterial","startingMetWordsToday","result","keys","trimAndSumUniqMetWords","filter","translation","hasFewerThan7Letters","hasMoreThan2Letters","Set","Array","from","size","hasNoRepeatLetters","test","hasOnlyLowercaseLetters","previous","push","forEach","wordLength","shuffleLetters","word","shuffleWord","rightAnswers","includes","roundToWin","levelToWin","initialProgress","gameComplete","levelComplete","roundIndex","defaultState","currentHint","globalLookupDictionary","Map","puzzleText","initConfig","state","gameReducer","action","type","actions","gameStarted","getGameStartedState","payload","firstPickedWord","createStrokeHintForPhrase","gameRestarted","getGameRestartedState","levelRestarted","roundCompleted","roundCompletedPickedWord","getAllLevelsCompletedState","increasedLevel","getEarlyLevelCompletedState","getEarlyRoundCompletedState","Puzzle","_jsx","className","children","gameName","introText","Game","globalLookupDictionaryLoaded","updateMetWords","typedText","setTypedText","useState","previousCompletedPhraseAsTyped","setPreviousCompletedPhraseAsTyped","showHint","setShowHint","gameState","dispatch","useReducer","useEffect","_jsxs","Completed","_Fragment","Intro","robot","RaverRobot","role","GameProgress","round","LevelCompleted","Input","onChangeInput","inputText","toLowerCase","console","Hint","currentStroke","href","target","rel","Index","appFetchAndSetupGlobalDict","useAppMethods","mainHeading","useRef","current","focus","catch","error","Subheader","tabIndex","particles","React","playAgainButton","canvasRef","canvasWidth","Math","floor","window","innerWidth","canvasHeight","innerHeight","Confetti","sparsity","colors","restartConfetti","useCallback","event","keyCode","splice","onClick","onKeyDown","HappyRobot","handlePlayAgainClick","preventDefault","GoogleAnalytics","category","label","Link","to","Round","TransitionGroup","component","CSSTransition","timeout","classNames","appear","Level","_ref2","_ref3","handleHintClick","yourInput","document","getElementById","onKeyPress","replace","inputRef","htmlFor","autoCapitalize","autoComplete","autoCorrect","onChange","_event$target","value","rows","style","textDecoration","spellCheck","wrap","ConfettiConfig","actionbutton","AlertRobot","handleActionClick","SHUFLactions","TPEUBGSZactions","makeGuess","random","array","i0","m","i"],"sourceRoot":""}