{"version":3,"file":"static/js/835.9622e558.chunk.js","mappings":"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","sources":["pages/dictionaries/DictionariesIndex.tsx","pages/dictionaries/Dictionaries.tsx","pages/lessons/components/UserSettings/updateGlobalUserSetting.js","states/dictionaryIndexState.ts"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport OutboundLink from \"../../components/OutboundLink\";\nimport StrokesForWords from \"../../components/StrokesForWords\";\nimport Subheader from \"../../components/Subheader\";\n\nimport type {\n  FetchAndSetupGlobalDict,\n  ImportedPersonalDictionaries,\n  LookupDictWithNamespacedDictsAndConfig,\n  StenoDictionary,\n  UserSettings,\n} from \"../../types\";\nimport { useAtomValue } from \"jotai\";\nimport { dictionaryIndexState } from \"../../states/dictionaryIndexState\";\n\ntype Props = {\n  fetchAndSetupGlobalDict: FetchAndSetupGlobalDict;\n  globalLookupDictionary: LookupDictWithNamespacedDictsAndConfig;\n  globalLookupDictionaryLoaded: boolean;\n  personalDictionaries?: ImportedPersonalDictionaries;\n  userSettings: UserSettings;\n};\n\nconst DictionariesIndex = ({\n  fetchAndSetupGlobalDict,\n  globalLookupDictionary,\n  globalLookupDictionaryLoaded,\n  personalDictionaries,\n  userSettings,\n}: Props) => {\n  const dictionaryIndex = useAtomValue(dictionaryIndexState);\n  const mainHeading = useRef<HTMLHeadingElement>(null);\n\n  useEffect(() => {\n    if (mainHeading) {\n      mainHeading.current?.focus();\n    }\n  }, []);\n\n  const linkList = dictionaryIndex.map((dictionary: StenoDictionary) => {\n    const author =\n      dictionary.author && dictionary.author.length > 0\n        ? dictionary.author\n        : \"Typey Type\";\n\n    const subtitle =\n      dictionary.subtitle && dictionary.subtitle.length > 0\n        ? \": \" + dictionary.subtitle\n        : \"\";\n\n    const dictionarypath = dictionary.path\n      .replace(/lesson.txt/, \"lesson/\") // This is deprecated\n      .replace(/.json/, \"/\");\n\n    return (\n      <li className=\"unstyled-list-item mb1\" key={dictionary.path}>\n        <Link\n          to={`${dictionarypath}`\n            .replace(/path\\.txt$/, \"\")\n            .replace(/\\/{2,}/g, \"/\")}\n          id={\"ga--dictionary-index-\" + dictionarypath.replace(/[/.]/g, \"-\")}\n        >\n          {author}’s {dictionary.title}\n          {subtitle}\n        </Link>\n      </li>\n    );\n  });\n\n  return (\n    <main id=\"main\">\n      <Subheader>\n        <div className=\"flex mr1 self-center\">\n          <header className=\"flex items-center min-h-40\">\n            <h2 ref={mainHeading} tabIndex={-1}>\n              Dictionaries\n            </h2>\n          </header>\n        </div>\n      </Subheader>\n      <div className=\"p3 mx-auto mw-1024\">\n        <div className=\"flex flex-wrap justify-between\">\n          <div>\n            <div className=\"mw-584\">\n              <h3 id=\"typey-type-dictionary\">Typey&nbsp;Type dictionary</h3>\n              <p>\n                <Link to=\"/dictionaries/typey-type/typey-type/\">\n                  Typey&nbsp;Type’s dictionary\n                </Link>{\" \"}\n                removes many misstrokes and mimics the{\" \"}\n                <strong>Plover version 4 dictionary</strong>.\n              </p>\n              <p>\n                You can use Plover’s dictionary or you can use use Di’s\n                dictionaries that power Typey Type’s stroke suggestions from{\" \"}\n                <OutboundLink\n                  eventLabel=\"Di’s Steno Dictionaries repo\"\n                  newTabAndIUnderstandTheAccessibilityImplications={true}\n                  to=\"https://github.com/didoesdigital/steno-dictionaries\"\n                >\n                  Di’s Steno Dictionaries repo (opens in new tab)\n                </OutboundLink>\n                .\n              </p>\n              <h4>Stroke hints</h4>\n              <p>\n                Typey&nbsp;Type’s stroke hints look for the shortest briefs with\n                penalties for briefs using multiple strokes, the star (\n                <code>*</code>) key, and non-standard prefix or suffix strokes.\n              </p>\n\n              <h4>British English spelling</h4>\n              <p>\n                The{\" \"}\n                <Link to=\"/lessons/drills/top-10000-project-gutenberg-words/\">\n                  Top 10000 Project Gutenberg words lesson\n                </Link>{\" \"}\n                and stories lessons like Aesop’s Fables use British English\n                spellings for words such as “neighbour”. For these you can use\n                the{\" \"}\n                <Link to=\"/dictionaries/didoesdigital/dict-en-AU-with-extra-stroke/\">\n                  Australian English with extra strokes\n                </Link>{\" \"}\n                dictionary. Typey&nbsp;Type’s dictionary uses these entries when\n                Plover has no entry for a word. Otherwise, you can fingerspell.\n              </p>\n\n              <h4>Corrections</h4>\n              <p>\n                If you notice any odd strokes,{\" \"}\n                <OutboundLink\n                  eventLabel=\"post to the feedback form\"\n                  newTabAndIUnderstandTheAccessibilityImplications={true}\n                  to=\"https://docs.google.com/forms/d/e/1FAIpQLSeevsX2oYEvnDHd3y8weg5_7-T8QZsF93ElAo28JO9Tmog-7Q/viewform?usp=sf_link\"\n                >\n                  use the feedback form to let Di know (opens in new tab)\n                </OutboundLink>\n                .\n              </p>\n            </div>\n\n            <div className=\"mw-584\">\n              <h3>Useful dictionaries</h3>\n              <ul className=\"unstyled-list\">{linkList}</ul>\n\n              <p>\n                Want to add another dictionary to this list?{\" \"}\n                <OutboundLink\n                  eventLabel=\"Typey Type for Stenographers dictionary feedback form\"\n                  newTabAndIUnderstandTheAccessibilityImplications={true}\n                  to=\"https://docs.google.com/spreadsheets/d/1w-9GciR8D7sWuLVxw9ATstF1tcyCjCe7UtIn7l80cXk/edit?usp=sharing\"\n                >\n                  Share your dictionary (opens in a new tab)\n                </OutboundLink>\n                .\n              </p>\n\n              <p>\n                For lesson-specific dictionaries, you can now “Download lesson\n                hints as a dictionary” from individual lesson pages. For\n                example, see the bottom of the{\" \"}\n                <Link to=\"/lessons/drills/top-10000-project-gutenberg-words/\">\n                  Top 10000 Project Gutenberg words lesson\n                </Link>\n                .\n              </p>\n            </div>\n          </div>\n          <div className=\"mt1 mw-336 flex-grow\">\n            <h3 className=\"mt3\">Custom dictionaries</h3>\n            <p>\n              To see your own stroke hints in lessons,{\" \"}\n              <Link to=\"/dictionaries/management\">add your dictionaries</Link>.\n            </p>\n            <p>\n              <Link\n                to=\"/dictionaries/management\"\n                className=\"link-button dib mt1\"\n                style={{ lineHeight: 2 }}\n                id=\"ga--dictionaries-index--add-dictionaries\"\n              >\n                Add your dictionaries\n              </Link>\n            </p>\n\n            <h4>Use custom lessons</h4>\n            <p>\n              To use a different dictionary or steno theory, upload your words\n              and strokes to a <Link to=\"/lessons/custom\">custom lesson</Link>.\n              The briefs shown will match whatever strokes you provide.\n            </p>\n\n            <h4>Share your dictionaries</h4>\n            <p>\n              To help the open steno community and Typey&nbsp;Type grow even\n              faster, add your custom dictionaries to the{\" \"}\n              <OutboundLink\n                eventLabel=\"community’s dictionaries\"\n                newTabAndIUnderstandTheAccessibilityImplications={true}\n                to=\"https://docs.google.com/spreadsheets/d/1w-9GciR8D7sWuLVxw9ATstF1tcyCjCe7UtIn7l80cXk/edit?usp=sharing\"\n              >\n                community’s dictionaries (opens in new tab)\n              </OutboundLink>\n              .\n            </p>\n            <StrokesForWords\n              fetchAndSetupGlobalDict={fetchAndSetupGlobalDict}\n              globalLookupDictionary={globalLookupDictionary}\n              globalLookupDictionaryLoaded={globalLookupDictionaryLoaded}\n              personalDictionaries={personalDictionaries}\n              userSettings={userSettings}\n            />\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default DictionariesIndex;\n","import React, { Suspense } from \"react\";\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport Loadable from \"react-loadable\";\nimport DictionariesIndex from \"./DictionariesIndex\";\nimport PageLoading from \"../../components/PageLoading\";\n\nimport type {\n  ImportedPersonalDictionaries,\n  LookupDictWithNamespacedDictsAndConfig,\n} from \"../../types\";\nimport { useAppMethods } from \"../../states/legacy/AppMethodsContext\";\nimport { useAtomValue } from \"jotai\";\nimport { userSettingsState } from \"../../states/userSettingsState\";\nimport { useToggleExperiment } from \"../lessons/components/UserSettings/updateGlobalUserSetting\";\n\nconst AsyncDictionary = Loadable({\n  loader: () => import(\"./Dictionary\"),\n  loading: PageLoading,\n  delay: 300,\n});\n\nconst AsyncDictionaryManagement = Loadable({\n  loader: () => import(\"./DictionaryManagement\"),\n  loading: PageLoading,\n  delay: 300,\n});\n\ntype Props = {\n  globalLookupDictionary: LookupDictWithNamespacedDictsAndConfig;\n  globalLookupDictionaryLoaded: boolean;\n  personalDictionaries?: ImportedPersonalDictionaries;\n  [restProps: string]: any;\n};\n\nconst Dictionaries = ({\n  globalLookupDictionaryLoaded,\n  globalLookupDictionary,\n  personalDictionaries,\n  ...dictionaryProps\n}: Props) => {\n  const userSettings = useAtomValue(userSettingsState);\n  const { updatePersonalDictionaries, appFetchAndSetupGlobalDict } =\n    useAppMethods();\n  const toggleExperiment = useToggleExperiment();\n  const match = useRouteMatch({\n    path: \"/dictionaries\",\n    strict: true,\n    sensitive: true,\n  });\n  const url = match?.url ?? \"\";\n\n  return (\n    <div>\n      <Switch>\n        <Route\n          path={[\n            `${url}/lessons/:category/:subcategory/:dictionaryPath`,\n            `${url}/lessons/fundamentals/:dictionaryPath`,\n            `${url}/lessons/drills/:dictionaryPath`,\n            `${url}/typey-type/:dictionaryPath`,\n            `${url}/individual/:dictionaryPath`,\n            `${url}/didoesdigital/:dictionaryPath`,\n            `${url}/plover/:dictionaryPath`,\n          ]}\n        >\n          <Suspense fallback={<PageLoading />}>\n            <AsyncDictionary />\n          </Suspense>\n        </Route>\n        <Route exact={true} path={`${url}/management`}>\n          <AsyncDictionaryManagement\n            fetchAndSetupGlobalDict={appFetchAndSetupGlobalDict}\n            globalLookupDictionary={globalLookupDictionary}\n            toggleExperiment={toggleExperiment}\n            updatePersonalDictionaries={updatePersonalDictionaries}\n            {...dictionaryProps}\n          />\n        </Route>\n        <Route exact={true} path={url}>\n          <Suspense fallback={<PageLoading />}>\n            <DictionariesIndex\n              userSettings={userSettings}\n              globalLookupDictionary={globalLookupDictionary}\n              globalLookupDictionaryLoaded={globalLookupDictionaryLoaded}\n              personalDictionaries={personalDictionaries}\n              fetchAndSetupGlobalDict={appFetchAndSetupGlobalDict}\n              {...dictionaryProps}\n            />\n          </Suspense>\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default Dictionaries;\n","import GoogleAnalytics from \"react-ga4\";\nimport { useSetAtom } from \"jotai\";\nimport {\n  backupBannerDismissedTime,\n  experimentsState,\n  inputForKAOESState,\n  writerInputState\n} from \"../../../../states/globalUserSettingsState\";\n\n// (event: SyntheticInputEvent<HTMLInputElement>) => void\nexport function useChangeWriterInput() {\n  const setState = useSetAtom(writerInputState);\n  return (event) => {\n    let name = \"BAD_INPUT\";\n\n    if (event && event.target && event.target.name) {\n      setState(event.target.name);\n      name = event.target.name;\n    }\n\n    let labelString = name;\n    if (!name) {\n      labelString = \"BAD_INPUT\";\n    }\n\n    GoogleAnalytics.event({\n      category: \"Global user settings\",\n      action: \"Change writer input\",\n      label: labelString,\n    });\n  }\n}\n\nexport function useChangeInputForKAOES() {\n  const setState = useSetAtom(inputForKAOESState);\n  return (event) => {\n    let name = \"BAD_INPUT\";\n\n    if (event && event.target && event.target.name) {\n      setState(event.target.name);\n      name = event.target.name;\n    }\n\n    let labelString = name;\n    if (!name) {\n      labelString = \"BAD_INPUT\";\n    }\n\n    GoogleAnalytics.event({\n      category: \"Global user settings\",\n      action: \"Change input for KAOES\",\n      label: labelString,\n    });\n  }\n}\n\nexport function useToggleExperiment() {\n  const setState = useSetAtom(experimentsState);\n  return (event) => {\n    const target = event.target;\n    const value = target.checked;\n    const name = target.name;\n\n    setState(name, value);\n\n    let labelString = value;\n    if (value === undefined) {\n      labelString = \"BAD_INPUT\";\n    } else {\n      labelString.toString();\n    }\n\n    GoogleAnalytics.event({\n      category: \"Global user settings\",\n      action: \"Change \" + name,\n      label: labelString,\n    });\n  }\n}\n\nexport function useDismissBackupBanner() {\n  const setState = useSetAtom(backupBannerDismissedTime);\n  return () => {\n    setState(Date.now());\n\n    let labelString = \"Dismiss\";\n\n    GoogleAnalytics.event({\n      category: \"Global user settings\",\n      action: \"Dismiss backup banner\",\n      label: labelString,\n    });\n  }\n}\n","import { atomWithLazy } from \"jotai/utils\";\nimport { fetchDictionaryIndex } from \"../utils/getData\";\nimport { StenoDictionary } from \"../types\";\n\nexport const dictionaryIndexState = atomWithLazy<Promise<StenoDictionary[]>>(fetchDictionaryIndex);\n"],"names":["_ref","fetchAndSetupGlobalDict","globalLookupDictionary","globalLookupDictionaryLoaded","personalDictionaries","userSettings","dictionaryIndex","useAtomValue","dictionaryIndexState","mainHeading","useRef","useEffect","_mainHeading$current","current","focus","linkList","map","dictionary","author","length","subtitle","dictionarypath","path","replace","_jsx","className","children","_jsxs","Link","to","id","title","Subheader","ref","tabIndex","OutboundLink","eventLabel","newTabAndIUnderstandTheAccessibilityImplications","style","lineHeight","StrokesForWords","AsyncDictionary","Loadable","loader","loading","PageLoading","delay","AsyncDictionaryManagement","_match$url","dictionaryProps","userSettingsState","updatePersonalDictionaries","appFetchAndSetupGlobalDict","useAppMethods","toggleExperiment","useToggleExperiment","match","useRouteMatch","strict","sensitive","url","Switch","Route","Suspense","fallback","exact","DictionariesIndex","useChangeWriterInput","setState","useSetAtom","writerInputState","event","name","target","labelString","GoogleAnalytics","category","action","label","useChangeInputForKAOES","inputForKAOESState","experimentsState","value","checked","undefined","toString","useDismissBackupBanner","backupBannerDismissedTime","Date","now","atomWithLazy","fetchDictionaryIndex"],"sourceRoot":""}