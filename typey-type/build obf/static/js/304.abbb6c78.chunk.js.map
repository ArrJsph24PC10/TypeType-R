{"version":3,"file":"static/js/304.abbb6c78.chunk.js","mappings":"kOAQA,MAsEA,EAnE2BA,KACzB,MAAMC,GAAcC,EAAAA,EAAAA,QAA2B,MACzCC,GAAWC,EAAAA,EAAAA,MAuBjB,OArBAC,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAAc,qBACdH,GAAYA,EAASI,WACvBD,EAAcH,EAASI,UAGzBC,EAAAA,GAAgBC,MAAM,CACpBC,SAAU,uBACVC,OAAQ,UACRC,MAAON,IAGTO,EAAAA,GAAwB,uBAAuB,GAC9C,CAACV,KAEJE,EAAAA,EAAAA,YAAU,KACU,IAADS,EAAbb,IACiB,QAAnBa,EAAAb,EAAYc,eAAO,IAAAD,GAAnBA,EAAqBE,QACvB,GACC,KAGDC,EAAAA,EAAAA,KAACC,IAAa,CAACC,MAAO,kCAAkCC,UACtDC,EAAAA,EAAAA,MAAA,QAAMC,GAAG,OAAMF,SAAA,EACbH,EAAAA,EAAAA,KAACM,EAAAA,EAAS,CAAAH,UACRH,EAAAA,EAAAA,KAAA,OAAKO,UAAU,uBAAsBJ,UACnCH,EAAAA,EAAAA,KAAA,UAAQO,UAAU,6BAA4BJ,UAC5CH,EAAAA,EAAAA,KAAA,MAAIQ,IAAKxB,EAAauB,UAAU,iBAAiBE,UAAW,EAAEN,SAAC,8BAMrEH,EAAAA,EAAAA,KAAA,OAAKO,UAAU,qBAAoBJ,UACjCC,EAAAA,EAAAA,MAAA,OAAKG,UAAU,SAAQJ,SAAA,EACrBH,EAAAA,EAAAA,KAAA,KAAGO,UAAU,MAAKJ,SAAC,0DAGnBH,EAAAA,EAAAA,KAAA,MAAAG,UACEH,EAAAA,EAAAA,KAAA,MAAAG,UACEH,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAG,gBAAeR,SAAC,0BAG7BC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,KACE,KACHH,EAAAA,EAAAA,KAAA,KACEY,KApDd,mIAqDgCC,oBAA2B,OAAR3B,QAAQ,IAARA,OAAQ,EAARA,EAAUI,WAAY,IAE3DwB,OAAO,SACPC,IAAI,sBACJV,GAAG,gCAA+BF,SACnC,sDAOK,E,qDC3DpB,MAGMa,EAAkB,IAKlBC,EAAsBC,GAC1BA,EAASC,WAAW,gBACpBD,EAASC,WAAW,mBACpBD,EAASC,WAAW,cACpBD,EAASC,WAAW,YAsQtB,EAnNmBC,KACjB,MAAMC,GAAkBC,EAAAA,EAAAA,IAAaC,EAAAA,GAC/BvC,GAAcC,EAAAA,EAAAA,QAA2B,OACzC,cAAEuC,IAAkBC,EAAAA,EAAAA,MAEnBC,EAA2BC,IAChCC,EAAAA,EAAAA,WAAS,IACJC,EAAUC,IAAeF,EAAAA,EAAAA,WAAS,IAClCG,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,CAC3CK,OAAQ,aACR/B,MAAO,2BACPgC,SAAU,GACVzC,SAAU,aACV0C,YAAa,GACbC,QAAS,gBACTC,KAAMC,4CACNC,KAAM,uCACNC,SAAU,CACR,KAAM,MACN,KAAM,KACN,IAAO,MACP,GAAM,KACN,IAAO,IACP,IAAO,KACP,KAAQ,MACR,EAAK,KACL,IAAO,KACP,IAAO,UAILtD,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KACU,IAADS,EAAbb,IACiB,QAAnBa,EAAAb,EAAYc,eAAO,IAAAD,GAAnBA,EAAqBE,QACvB,GACC,KAEHX,EAAAA,EAAAA,YAAU,MAELF,EAASI,SAAS6B,WAAW,yBAC9BjC,EAASI,SAAS6B,WAAW,kBAE7BsB,MACEH,cAAyBpD,EAASI,SAASoD,QAAQ,MAAO,SAC1D,CACEC,OAAQ,MACRC,YAAa,gBAGdC,MAAMC,IACL,MAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEzC,GAAIF,IAA4D,IAA7CA,EAAYG,QAAQ,oBACrC,OAAOJ,EAASK,OAAON,MAAMO,IAC3B,MAIMC,EAAiB,KAJAC,EAAAA,EAAAA,IACrBhB,cAAyBpD,EAASI,SAClC+B,GAIAmB,SAAUY,GAGZpB,EAAcqB,GACd7B,EAAc,qBAAuB6B,EAAenD,OACpDyB,GAA6B,EAAM,IAGrC,MAAM,IAAI4B,MAAM,4BAClB,IAEDC,OAAOC,IACNC,QAAQC,IAAI,4BAA6BF,GACzCjC,EAAc,6BACdM,GAAY,EAAK,GAEvB,GAGC,CAAC5C,IAEJ,MAAM0E,EAA0BA,KAC9BrE,EAAAA,GAAgBC,MAAM,CACpBC,SAAU,YACVC,OAAQ,QACRC,MACY,OAAVoC,QAAU,IAAVA,GAAAA,EAAYQ,MACQ,yCAApBR,EAAWQ,KACPR,EAAWQ,KACX,sBACN,EAGJ,GAAIV,EACF,OAAO7B,EAAAA,EAAAA,KAACjB,EAAkB,IAG5B,GAAIgD,EAAY,CACd,MAAOS,EAAUqB,GAzHnBC,KAEA,IAAItB,EAAW,GACfA,EAAWuB,KAAKC,UAAUF,GAAcG,MAAM,MAAMC,KAAK,QACzD1B,EAAW,MAAQA,EAAS2B,MAAM,EAAG3B,EAAS4B,QAE9C,MAAMC,EAAgB7B,EAASyB,MAAM,MAC/BJ,EAAsBQ,EAAcD,OAC1C,GAAIP,EAAsB7C,EAAiB,CACzC,IAAIsD,EAAcD,EAAcF,MAAM,EAAGnD,GACzCsD,EAAYtD,KAAuBsD,EAAYtD,KAAqBmD,MAClE,GACC,GAEHG,EAAYC,KAAK,KACjB/B,EAAW8B,EAAYJ,KAAK,KAC9B,CAEA,MAAO,CAAC1B,EAAUqB,EAAoB,EAuGIW,CACtCzC,EAAWS,UAGPiC,EACJZ,EAAsB7C,GACpBZ,EAAAA,EAAAA,MAAA,KAAGG,UAAU,mCAAkCJ,SAAA,CAAC,+EAEvCa,EAAgB,eAGzB,GAGE0D,GAnKexD,EAmKgBa,EAAWM,KAlKlDpB,EAAmBC,GAAY,MAC7BlB,EAAAA,EAAAA,KAAA,KAAGO,UAAU,MAAKJ,UAChBH,EAAAA,EAAAA,KAAA,KAAGY,KAAMM,EAAUJ,OAAO,SAASC,IAAI,sBAAqBZ,SAAC,qCAiKzDwE,EA3JcC,EAAC1D,EAAoB2D,IAC3C5D,EAAmBC,GACjB,cAA4BA,IAAWC,WACrCmB,wBAEAtC,EAAAA,EAAAA,KAAA,KAAAG,UACEC,EAAAA,EAAAA,MAACM,EAAAA,GAAI,CAACC,GAAIO,EAASf,SAAA,CAAC,WAAS0E,QAG/B7E,EAAAA,EAAAA,KAAA,KAAAG,UACEH,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAIO,EAASf,SAAC,iBAGtB,KA8ImByE,CAAgB7C,EAAWM,KAAMN,EAAW7B,OAEjE,OACEF,EAAAA,EAAAA,KAACC,IAAa,CAACC,MAAO,4BAA8B6B,EAAW7B,MAAMC,UACnEC,EAAAA,EAAAA,MAAA,QAAMC,GAAG,OAAMF,SAAA,EACbC,EAAAA,EAAAA,MAACE,EAAAA,EAAS,CAAAH,SAAA,EACRH,EAAAA,EAAAA,KAAA,OAAKO,UAAU,uBAAsBJ,UACnCH,EAAAA,EAAAA,KAAA,UAAQO,UAAU,6BAA4BJ,UAC5CC,EAAAA,EAAAA,MAAA,MAAIG,UAAU,iBAAiBC,IAAKxB,EAAayB,UAAW,EAAEN,SAAA,CAC3DuB,GACC1B,EAAAA,EAAAA,KAAA,QAAAG,SAAM,6BAEN4B,EAAW7B,MAEZ2B,IAAY7B,EAAAA,EAAAA,KAAA,QAAAG,SAAM,4BAIzBC,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWJ,SAAA,EACxBH,EAAAA,EAAAA,KAAA,KACEY,KAAM0B,cAAyBP,EAAWQ,KAC1CuC,SAAS,GACTC,QAASnB,EACTrD,UAAU,+CAA8CJ,SACzD,cAGDH,EAAAA,EAAAA,KAACgF,EAAAA,EAAmB,CAClBzE,UAAU,gFACV0E,MAAO,CAAEC,WAAY,GACrBC,oBAAoB,0BAAyBhF,SAC9C,6BAKLC,EAAAA,EAAAA,MAAA,OAAKG,UAAU,qBAAoBJ,SAAA,EACjCC,EAAAA,EAAAA,MAAA,OAAKG,UAAU,SAAQJ,SAAA,CACpB4B,EAAWE,SAAWF,EAAWK,QAAQgD,SAAS,aACjDhF,EAAAA,EAAAA,MAAA,KAAGG,UAAU,8CAA6CJ,SAAA,CAAC,gBAC3C4B,EAAWE,UAI5BF,EAAWK,UACTL,EAAWK,QAAQgD,SAAS,aAC3BpF,EAAAA,EAAAA,KAAA,KAAAG,SAAI4B,EAAWK,UAGlBL,EAAWM,OACTN,EAAWM,KAAK+C,SAAS,wBAC1BT,EACD5C,EAAWM,MAAQqC,GAEpB1E,EAAAA,EAAAA,KAAA,MAAAG,SAAI,mBACH0B,IAAY7B,EAAAA,EAAAA,KAAA,KAAAG,SAAG,qBACduB,GAA6B+C,EAC9B/C,GACC1B,EAAAA,EAAAA,KAAA,KAAAG,SAAG,mBAEHH,EAAAA,EAAAA,KAAA,OACEO,UAAU,6CACVF,GAAG,yBACHI,SAAU,EAAEN,UAEZH,EAAAA,EAAAA,KAAA,QAAAG,SAAOqC,UAIbxC,EAAAA,EAAAA,KAAA,KAAAG,UACEH,EAAAA,EAAAA,KAAA,KACEY,KAxPd,mIAyPgCC,oBAA2B,OAAR3B,QAAQ,IAARA,OAAQ,EAARA,EAAUI,WAAY,IAE3DwB,OAAO,SACPC,IAAI,sBACJV,GAAG,gCAA+BF,SACnC,wEAQb,CACE,OACEH,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAAA,MAAIQ,IAAKxB,EAAayB,UAAW,EAAEN,SAAC,kCA5PnBe,KAiQvB,C","sources":["pages/dictionaries/DictionaryNotFound.tsx","pages/dictionaries/Dictionary.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport GoogleAnalytics from \"react-ga4\";\nimport * as Sentry from \"@sentry/browser\";\nimport DocumentTitle from \"react-document-title\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Subheader from \"../../components/Subheader\";\n\n// fullURL = \"https://docs.google.com/forms/d/e/1FAIpQLSfqBBEs5Fl8vgay03fEXzSU7Ey_pms6Y6Nt2Yk8gFftGhAWQA/viewform?usp=pp_url&entry.1884511690=Example\";\nconst googleFormURL =\n  \"https://docs.google.com/forms/d/e/1FAIpQLSfqBBEs5Fl8vgay03fEXzSU7Ey_pms6Y6Nt2Yk8gFftGhAWQA/viewform?usp=pp_url&entry.1884511690=\";\n\nconst DictionaryNotFound = () => {\n  const mainHeading = useRef<HTMLHeadingElement>(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    let labelString = \"Missing dictionary\";\n    if (location && location.pathname) {\n      labelString = location.pathname;\n    }\n\n    GoogleAnalytics.event({\n      category: \"Dictionary not found\",\n      action: \"Visited\",\n      label: labelString,\n    });\n\n    Sentry.captureException(\"Dictionary not found\");\n  }, [location]);\n\n  useEffect(() => {\n    if (mainHeading) {\n      mainHeading.current?.focus();\n    }\n  }, []);\n\n  return (\n    <DocumentTitle title={\"Typey Type | Missing dictionary\"}>\n      <main id=\"main\">\n        <Subheader>\n          <div className=\"flex mr1 self-center\">\n            <header className=\"flex items-center min-h-40\">\n              <h2 ref={mainHeading} className=\"table-cell mr2\" tabIndex={-1}>\n                Missing dictionary\n              </h2>\n            </header>\n          </div>\n        </Subheader>\n        <div className=\"mx-auto mw-1024 p3\">\n          <div className=\"mw-568\">\n            <p className=\"mt3\">\n              That dictionary couldnâ€™t be found. Try another:\n            </p>\n            <ul>\n              <li>\n                <Link to=\"/dictionaries\">All dictionaries</Link>\n              </li>\n            </ul>\n            <p>\n              Or{\" \"}\n              <a\n                href={\n                  googleFormURL + encodeURIComponent(location?.pathname || \"\")\n                }\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                id=\"ga--dictionary--give-feedback\"\n              >\n                let me know (form opens in a new tab)\n              </a>\n            </p>\n          </div>\n        </div>\n      </main>\n    </DocumentTitle>\n  );\n};\n\nexport default DictionaryNotFound;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport DocumentTitle from \"react-document-title\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport DictionaryNotFound from \"./DictionaryNotFound\";\nimport GoogleAnalytics from \"react-ga4\";\nimport PseudoContentButton from \"../../components/PseudoContentButton\";\nimport { lookUpDictionaryInIndex } from \"../../utils/typey-type\";\nimport Subheader from \"../../components/Subheader\";\nimport { useAnnouncerApi } from \"../../components/Announcer/useAnnouncer\";\n\nimport type { PrettyLessonTitle, StenoDictionary } from \"../../types\";\nimport { useAtomValue } from \"jotai\";\nimport { dictionaryIndexState } from \"../../states/dictionaryIndexState\";\n\n// fullURL = \"https://docs.google.com/forms/d/e/1FAIpQLSfqBBEs5Fl8vgay03fEXzSU7Ey_pms6Y6Nt2Yk8gFftGhAWQA/viewform?usp=pp_url&entry.1884511690=Example\";\nconst googleFormURL =\n  \"https://docs.google.com/forms/d/e/1FAIpQLSfqBBEs5Fl8vgay03fEXzSU7Ey_pms6Y6Nt2Yk8gFftGhAWQA/viewform?usp=pp_url&entry.1884511690=\";\n\nconst truncationLimit = 1000;\n\n/** Example: \"/lessons/collections/tech/react/\" */\ntype DictLink = string;\n\nconst isInternalDictLink = (dictLink: DictLink) =>\n  dictLink.startsWith(\"/typey-type\") ||\n  dictLink.startsWith(\"/dictionaries/\") ||\n  dictLink.startsWith(\"/lessons/\") ||\n  dictLink.startsWith(\"/support\");\n\nconst getExternalLink = (dictLink: DictLink) =>\n  isInternalDictLink(dictLink) ? null : (\n    <p className=\"mt3\">\n      <a href={dictLink} target=\"_blank\" rel=\"noopener noreferrer\">\n        Learn more (opens in new tab)\n      </a>\n    </p>\n  );\n\nconst getInternalLink = (dictLink: DictLink, dictTitle: PrettyLessonTitle) =>\n  isInternalDictLink(dictLink) ? (\n    `${process.env.PUBLIC_URL}${dictLink}`.startsWith(\n      process.env.PUBLIC_URL + \"/lessons\"\n    ) ? (\n      <p>\n        <Link to={dictLink}>Lesson: {dictTitle}</Link>\n      </p>\n    ) : (\n      <p>\n        <Link to={dictLink}>Learn more</Link>\n      </p>\n    )\n  ) : null;\n\ntype FormattedDictContents = string;\ntype NumberOfDictionaryLines = number;\n\nconst getDictionaryContentsString = (\n  dictContents: StenoDictionary\n): [FormattedDictContents, NumberOfDictionaryLines] => {\n  let contents = \"\";\n  contents = JSON.stringify(dictContents).split('\",').join('\",\\n');\n  contents = \"{\\n\" + contents.slice(1, contents.length); // split first line {\"STROKE\": \"TRANSLATION\", on {\"\n\n  const contentsArray = contents.split(\"\\n\");\n  const contentsArrayLength = contentsArray.length;\n  if (contentsArrayLength > truncationLimit) {\n    let newContents = contentsArray.slice(0, truncationLimit);\n    newContents[truncationLimit - 1] = newContents[truncationLimit - 1].slice(\n      0,\n      -1\n    ); // removing trailing comma\n    newContents.push(\"}\");\n    contents = newContents.join(\"\\n\");\n  }\n\n  return [contents, contentsArrayLength];\n};\n\nconst Dictionary = () => {\n  const dictionaryIndex = useAtomValue(dictionaryIndexState);\n  const mainHeading = useRef<HTMLHeadingElement>(null);\n  const { updateMessage } = useAnnouncerApi();\n\n  const [loadingDictionaryContents, setLoadingDictionaryContents] =\n    useState(true);\n  const [hasError, setHasError] = useState(false);\n  const [dictionary, setDictionary] = useState({\n    author: \"Typey Type\",\n    title: \"Loading dictionaryâ€¦\",\n    subtitle: \"\",\n    category: \"Typey Type\",\n    subcategory: \"\",\n    tagline: \"Loadingâ€¦\",\n    link: process.env.PUBLIC_URL + \"/support#typey-type-dictionary\",\n    path: \"/dictionaries/typey-type/top-10.json\",\n    contents: {\n      \"-T\": \"the\",\n      \"-F\": \"of\",\n      \"SKP\": \"and\",\n      \"TO\": \"to\",\n      \"AEU\": \"a\",\n      \"TPH\": \"in\",\n      \"TPOR\": \"for\",\n      \"S\": \"is\",\n      \"OPB\": \"on\",\n      \"THA\": \"that\",\n    },\n  });\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (mainHeading) {\n      mainHeading.current?.focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (\n      !location.pathname.startsWith(\"/dictionaries/custom\") &&\n      location.pathname.startsWith(\"/dictionaries\")\n    ) {\n      fetch(\n        process.env.PUBLIC_URL + location.pathname.replace(/\\/$/, \".json\"),\n        {\n          method: \"GET\",\n          credentials: \"same-origin\",\n        }\n      )\n        .then((response) => {\n          const contentType = response.headers.get(\"content-type\");\n\n          if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n            return response.json().then((dictionaryContents) => {\n              const dictIndexEntry = lookUpDictionaryInIndex(\n                process.env.PUBLIC_URL + location.pathname,\n                dictionaryIndex\n              );\n              const dictionaryData = {\n                ...dictIndexEntry,\n                contents: dictionaryContents,\n              };\n\n              setDictionary(dictionaryData);\n              updateMessage(\"Finished loading: \" + dictionaryData.title);\n              setLoadingDictionaryContents(false);\n            });\n          } else {\n            throw new Error(\"Unable to load dictionary\");\n          }\n        })\n        .catch((error) => {\n          console.log(\"Unable to load dictionary\", error);\n          updateMessage(\"Unable to load dictionary\");\n          setHasError(true);\n        });\n    }\n    // FIXME: updateMessage in dependency array\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location]);\n\n  const trackDownloadDictionary = () => {\n    GoogleAnalytics.event({\n      category: \"Downloads\",\n      action: \"Click\",\n      label:\n        dictionary?.path &&\n        dictionary.path !== \"/dictionaries/typey-type/top-10.json\"\n          ? dictionary.path\n          : \"No dictionary path\",\n    });\n  };\n\n  if (hasError) {\n    return <DictionaryNotFound />;\n  }\n\n  if (dictionary) {\n    const [contents, contentsArrayLength] = getDictionaryContentsString(\n      dictionary.contents\n    );\n\n    const truncatedMessage =\n      contentsArrayLength > truncationLimit ? (\n        <p className=\"bg-danger dark:text-coolgrey-900\">\n          The dictionary is too large to display in full so this only shows the\n          first {truncationLimit} entries.\n        </p>\n      ) : (\n        \"\"\n      );\n\n    const externalLink = getExternalLink(dictionary.link);\n    const internalLink = getInternalLink(dictionary.link, dictionary.title);\n\n    return (\n      <DocumentTitle title={\"Typey Type | Dictionary: \" + dictionary.title}>\n        <main id=\"main\">\n          <Subheader>\n            <div className=\"flex mr1 self-center\">\n              <header className=\"flex items-center min-h-40\">\n                <h2 className=\"table-cell mr2\" ref={mainHeading} tabIndex={-1}>\n                  {loadingDictionaryContents ? (\n                    <span>Loading dictionaryâ€¦</span>\n                  ) : (\n                    dictionary.title\n                  )}\n                  {hasError && <span>Loading failed.</span>}\n                </h2>\n              </header>\n            </div>\n            <div className=\"flex mxn2\">\n              <a\n                href={process.env.PUBLIC_URL + dictionary.path}\n                download=\"\"\n                onClick={trackDownloadDictionary}\n                className=\"link-button link-button-ghost table-cell mr1\"\n              >\n                Download\n              </a>\n              <PseudoContentButton\n                className=\"js-clipboard-button button button--secondary table-cell mr1 copy-to-clipboard\"\n                style={{ lineHeight: 2 }}\n                dataClipboardTarget=\"#js-dictionary-json-pre\"\n              >\n                Copy to clipboard\n              </PseudoContentButton>\n            </div>\n          </Subheader>\n          <div className=\"p3 mx-auto mw-1024\">\n            <div className=\"mw-568\">\n              {dictionary.author && !dictionary.tagline.includes(\"Loading\") && (\n                <p className=\"text-small text-uppercase de-emphasized mt3\">\n                  Contributor: {dictionary.author}\n                </p>\n              )}\n\n              {dictionary.tagline &&\n                !dictionary.tagline.includes(\"Loading\") && (\n                  <p>{dictionary.tagline}</p>\n                )}\n\n              {dictionary.link &&\n                !dictionary.link.includes(\"/typey-type/support\") &&\n                internalLink}\n              {dictionary.link && externalLink}\n\n              <h3>The dictionary</h3>\n              {hasError && <p>Loading failed.</p>}\n              {!loadingDictionaryContents && truncatedMessage}\n              {loadingDictionaryContents ? (\n                <p>Loadingâ€¦</p>\n              ) : (\n                <pre\n                  className=\"quote h-168 overflow-scroll mw-384 mt1 mb3\"\n                  id=\"js-dictionary-json-pre\"\n                  tabIndex={0}\n                >\n                  <code>{contents}</code>\n                </pre>\n              )}\n            </div>\n            <p>\n              <a\n                href={\n                  googleFormURL + encodeURIComponent(location?.pathname || \"\")\n                }\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                id=\"ga--dictionary--give-feedback\"\n              >\n                Give feedback on this dictionary (form opens in a new tab)\n              </a>\n            </p>\n          </div>\n        </main>\n      </DocumentTitle>\n    );\n  } else {\n    return (\n      <div>\n        <h2 ref={mainHeading} tabIndex={-1}>\n          That dictionary is missing.\n        </h2>\n      </div>\n    );\n  }\n};\n\nexport default Dictionary;\n"],"names":["DictionaryNotFound","mainHeading","useRef","location","useLocation","useEffect","labelString","pathname","GoogleAnalytics","event","category","action","label","Sentry","_mainHeading$current","current","focus","_jsx","DocumentTitle","title","children","_jsxs","id","Subheader","className","ref","tabIndex","Link","to","href","encodeURIComponent","target","rel","truncationLimit","isInternalDictLink","dictLink","startsWith","Dictionary","dictionaryIndex","useAtomValue","dictionaryIndexState","updateMessage","useAnnouncerApi","loadingDictionaryContents","setLoadingDictionaryContents","useState","hasError","setHasError","dictionary","setDictionary","author","subtitle","subcategory","tagline","link","process","path","contents","fetch","replace","method","credentials","then","response","contentType","headers","get","indexOf","json","dictionaryContents","dictionaryData","lookUpDictionaryInIndex","Error","catch","error","console","log","trackDownloadDictionary","contentsArrayLength","dictContents","JSON","stringify","split","join","slice","length","contentsArray","newContents","push","getDictionaryContentsString","truncatedMessage","externalLink","internalLink","getInternalLink","dictTitle","download","onClick","PseudoContentButton","style","lineHeight","dataClipboardTarget","includes"],"sourceRoot":""}