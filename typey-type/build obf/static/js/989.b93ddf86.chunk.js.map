{"version":3,"file":"static/js/989.b93ddf86.chunk.js","mappings":"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","sources":["pages/lookup/utilities/getWordFamilyGroup.ts","pages/lookup/Lookup.tsx"],"sourcesContent":["import type { LookupDictWithNamespacedDicts } from \"../../../types\";\n\nconst getWordFamilyGroup = (\n  trimmedWord: string,\n  globalLookupDictionary: LookupDictWithNamespacedDicts\n) => {\n  const commonFamilyGroupEndings = [\n    \"ing\",\n    \"ed\",\n    \"ment\",\n    \"'s\",\n    \"ly\",\n    \"ion\",\n    \"s\",\n    \"er\",\n  ];\n\n  const familyGroup: string[] = [];\n  commonFamilyGroupEndings.forEach((ending) => {\n    const trimmedWordPlusEnding = trimmedWord + ending;\n    if (globalLookupDictionary.get(trimmedWordPlusEnding)) {\n      familyGroup.push(trimmedWordPlusEnding);\n    }\n  });\n\n  if (trimmedWord.endsWith(\"e\")) {\n    if (globalLookupDictionary.get(trimmedWord.slice(0, -1) + \"ing\")) {\n      familyGroup.push(trimmedWord.slice(0, -1) + \"ing\");\n    }\n  }\n\n  return familyGroup;\n};\n\nexport default getWordFamilyGroup;\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport StrokesForWords from \"../../components/StrokesForWords\";\nimport PseudoContentButton from \"../../components/PseudoContentButton\";\nimport Subheader from \"../../components/Subheader\";\nimport getWordFamilyGroup from \"./utilities/getWordFamilyGroup\";\n\nimport type { ImportedPersonalDictionaries, MaterialItem } from \"../../types\";\nimport { useAppMethods } from \"../../states/legacy/AppMethodsContext\";\nimport { useAtomValue } from \"jotai\";\nimport { userSettingsState } from \"../../states/userSettingsState\";\nimport debounce from \"../../utils/debounce\";\n\ntype Props = {\n  globalLookupDictionary: any;\n  globalLookupDictionaryLoaded: boolean;\n  personalDictionaries: ImportedPersonalDictionaries;\n};\n\nconst Lookup = ({\n  globalLookupDictionary,\n  globalLookupDictionaryLoaded,\n  personalDictionaries,\n}: Props) => {\n  const location = useLocation();\n  const history = useHistory();\n\n  const [lookupTerm, setLookupTerm] = useState(\n    () => new URLSearchParams(location.search).get(\"q\") ?? \"\"\n  );\n\n  const updateSearchParams = useMemo(\n    () =>\n      debounce((q: string) => {\n        const search = q === \"\" ? undefined : `?q=${q}`;\n        history.replace({ search, hash: history.location.hash });\n      }, 100),\n    [history]\n  );\n\n  const userSettings = useAtomValue(userSettingsState);\n  const { appFetchAndSetupGlobalDict, setCustomLessonContent } =\n    useAppMethods();\n  const [bookmarkURL, setBookmarkURL] = useState(\n    process.env.PUBLIC_URL + \"/lookup\"\n  );\n  const mainHeading = useRef<HTMLHeadingElement>(null);\n  const [trackedPhrase, setTrackPhrase] = useState(\"\");\n  const [wordFamilyGroup, setWordFamilyGroup] = useState<string[]>([]);\n\n  useEffect(() => {\n    mainHeading.current?.focus();\n  }, []);\n\n  useEffect(() => {\n    updateSearchParams(encodeURIComponent(lookupTerm));\n  }, [lookupTerm, updateSearchParams]);\n\n  useEffect(() => {\n    if (trackedPhrase.length > 0) {\n      setWordFamilyGroup(\n        getWordFamilyGroup(trackedPhrase, globalLookupDictionary)\n      );\n    } else {\n      setWordFamilyGroup([]);\n    }\n  }, [trackedPhrase, globalLookupDictionary]);\n\n  const strokesForWordsChange = (phrase: string) => {\n    setLookupTerm(phrase);\n    const encodedPhrase = encodeURIComponent(phrase);\n    setBookmarkURL(process.env.PUBLIC_URL + \"/lookup?q=\" + encodedPhrase);\n  };\n\n  const setUpCustomLesson = () => {\n    const words = wordFamilyGroup.slice();\n    words.unshift(trackedPhrase);\n\n    const maybeMaterial: (undefined | MaterialItem)[] = words\n      .map((word) => {\n        if (globalLookupDictionary.get(word)) {\n          return {\n            phrase: word,\n            stroke: globalLookupDictionary.get(word)[0][0],\n          };\n        } else {\n          return undefined;\n        }\n      })\n      .filter((notUndefined) => !!notUndefined);\n\n    const material: MaterialItem[] = maybeMaterial as MaterialItem[];\n\n    setCustomLessonContent(material);\n  };\n\n  const enabledCustomLessonLink = trackedPhrase.length > 0;\n\n  return (\n    <main id=\"main\">\n      <Subheader>\n        <div className=\"flex mr1 self-center\">\n          <header className=\"flex items-center min-h-40\">\n            <h2 ref={mainHeading} tabIndex={-1}>\n              Lookup\n            </h2>\n          </header>\n        </div>\n        <div className=\"flex mxn2\">\n          <Link\n            to={enabledCustomLessonLink ? \"/lessons/custom/setup\" : \"#\"}\n            onClick={enabledCustomLessonLink ? setUpCustomLesson : undefined}\n            className={`link-button link-button-ghost table-cell mr1${\n              enabledCustomLessonLink ? \"\" : \" o-30\"\n            }`}\n          >\n            Set up custom lesson\n          </Link>\n        </div>\n      </Subheader>\n      <div\n        className=\"p3 mx-auto mw-1024 mh-page\"\n        data-testid=\"lookup-page-contents\"\n      >\n        <div className=\"flex flex-wrap justify-between\">\n          <div className=\"mw-584 w-100 flex-grow mr3 min-h-384\">\n            <div>\n              <StrokesForWords\n                fetchAndSetupGlobalDict={appFetchAndSetupGlobalDict}\n                globalLookupDictionary={globalLookupDictionary}\n                globalLookupDictionaryLoaded={globalLookupDictionaryLoaded}\n                lookupTerm={lookupTerm}\n                onChange={strokesForWordsChange}\n                personalDictionaries={personalDictionaries}\n                trackPhrase={setTrackPhrase}\n                userSettings={userSettings}\n              />\n            </div>\n            <div className=\"\">\n              <div className=\"mt0\">\n                <h3 className=\"h4\">Share link</h3>\n                <p className=\"mb0 truncate\">\n                  <span className=\"py05 dib\" id=\"js-bookmark-url\">\n                    https://didoesdigital.com{bookmarkURL}\n                  </span>\n                </p>\n              </div>\n              <PseudoContentButton\n                className=\"js-clipboard-button button button--secondary table-cell mr2 copy-to-clipboard\"\n                style={{ lineHeight: 2 }}\n                dataClipboardTarget=\"#js-bookmark-url\"\n              >\n                Copy link to clipboard\n              </PseudoContentButton>\n            </div>\n          </div>\n          <div className=\"mt18 mw-336 flex-grow\">\n            <div>\n              <p className=\"mb1 de-emphasized\">Some related words:</p>\n              {wordFamilyGroup.length > 0 && (\n                <pre className=\"fw4\">{wordFamilyGroup.join(\"\\n\")}</pre>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Lookup;\n"],"names":["getWordFamilyGroup","trimmedWord","globalLookupDictionary","familyGroup","forEach","ending","trimmedWordPlusEnding","get","push","endsWith","slice","_ref","globalLookupDictionaryLoaded","personalDictionaries","location","useLocation","history","useHistory","lookupTerm","setLookupTerm","useState","_URLSearchParams$get","URLSearchParams","search","updateSearchParams","useMemo","debounce","q","undefined","replace","hash","userSettings","useAtomValue","userSettingsState","appFetchAndSetupGlobalDict","setCustomLessonContent","useAppMethods","bookmarkURL","setBookmarkURL","process","mainHeading","useRef","trackedPhrase","setTrackPhrase","wordFamilyGroup","setWordFamilyGroup","useEffect","_mainHeading$current","current","focus","encodeURIComponent","length","enabledCustomLessonLink","_jsxs","id","children","Subheader","_jsx","className","ref","tabIndex","Link","to","onClick","setUpCustomLesson","words","unshift","maybeMaterial","map","word","phrase","stroke","filter","notUndefined","StrokesForWords","fetchAndSetupGlobalDict","onChange","encodedPhrase","trackPhrase","PseudoContentButton","style","lineHeight","dataClipboardTarget","join"],"sourceRoot":""}