{"version":3,"file":"static/js/634.bd431393.chunk.js","mappings":"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","sources":["pages/lessons/custom/generator/rulesActions.ts","pages/lessons/custom/generator/rulesWithDataActions.ts","pages/lessons/custom/generator/rulesReducer.ts","pages/lessons/custom/generator/rulesWithDataReducer.ts","pages/lessons/custom/generator/components/RuleOptions.tsx","pages/lessons/custom/generator/components/RegexRuleSetting.tsx","pages/lessons/custom/generator/utilities/availableRulePrettyNames.ts","pages/lessons/custom/GeneratorHelp.tsx","pages/lessons/custom/CustomLessonGenerator.tsx"],"sourcesContent":["export const actions = {\n  setRuleStatus: \"setRuleStatus\",\n};\n","export const actions = {\n  setRuleWithDataStatus: \"setRuleWithDataStatus\",\n  setRegexRuleData: \"setRegexRuleData\",\n};\n","import { actions } from \"./rulesActions\";\nimport type { Rules, RuleStatus } from \"./types\";\n\nexport const defaultState: Rules = {\n  endsWithSuffix: \"ignored\",\n  fewerThanFiveCharacters: \"off\",\n  hasAnyLongVowel: \"ignored\",\n  hasAnyShortVowel: \"ignored\",\n  hasAnyVowelKey: \"ignored\",\n  hasApostrophes: \"off\",\n  hasCapitalLetter: \"off\",\n  hasCoding: \"off\",\n  hasCompoundClusters: \"ignored\",\n  hasContractionsPluralsOrPossessives: \"ignored\",\n  hasDictionaryFormatting: \"off\",\n  hasDigraphs: \"ignored\",\n  hasDiphthong: \"ignored\",\n  hasDisambiguatingBrief: \"off\",\n  hasDoubleConsonants: \"ignored\",\n  hasDoubleLetters: \"ignored\",\n  hasDoubleVowels: \"ignored\",\n  hasEfAsVeeOrEss: \"ignored\",\n  hasForcedWordEnding: \"off\",\n  hasInversion: \"ignored\",\n  hasLhsConsonantWithMultipleKeys: \"ignored\",\n  hasLongTranslations: \"ignored\",\n  hasLongWords: \"ignored\",\n  hasMedical: \"off\",\n  hasNumbers: \"off\",\n  hasOneConsonantOnEachSide: \"ignored\",\n  hasOneKeyPerFinger: \"ignored\",\n  hasOneOrMoreSpaces: \"ignored\",\n  hasOneSpace: \"ignored\",\n  hasOnlyOneVowelKey: \"ignored\",\n  hasOnlyShortIVowel: \"ignored\",\n  hasPhillyShift: \"off\",\n  hasPunctuation: \"off\",\n  hasRhsConsonantWithMultipleKeys: \"ignored\",\n  hasShortTranslations: \"ignored\",\n  hasSimpleStenoKeys: \"ignored\",\n  hasSomeConsonants: \"ignored\",\n  hasStar: \"off\",\n  hasStretchKeys: \"ignored\",\n  hasSuppressedSpaceStroke: \"off\",\n  hasUnstressedVowels: \"ignored\",\n  hasVowelDisambiguator: \"ignored\",\n  isBrief: \"off\",\n  isFingerspelled: \"off\",\n  isMultiStroke: \"ignored\",\n  isOneSyllable: \"on\",\n  isRomanNumeral: \"off\",\n  isSingleStroke: \"ignored\",\n  isSuperlative: \"ignored\",\n  isUppercase: \"off\",\n  moreThanOneSyllable: \"ignored\",\n  moreThanTwoCharacters: \"ignored\",\n  outlineIsTranslation: \"ignored\",\n  startsWithPrefix: \"ignored\",\n};\n\nexport const initConfig = (state: Rules) => ({\n  ...defaultState,\n  ...state,\n});\n\nconst setRuleStatus = (\n  state: Rules,\n  payload: { ruleName: keyof Rules; ruleStatus: RuleStatus }\n) => {\n  return {\n    ...state,\n    [payload.ruleName]: payload.ruleStatus,\n  };\n};\n\nexport const rulesReducer = (state: Rules, action: any) => {\n  switch (action?.type) {\n    case actions.setRuleStatus:\n      return setRuleStatus(state, action.payload);\n\n    default:\n      return state;\n  }\n};\n","import { actions } from \"./rulesWithDataActions\";\nimport type { RuleStatus } from \"./types\";\n\nexport type RulesWithData = {\n  outlineRegexText: string;\n  outlineMatching: RuleStatus;\n  translationRegexText: string;\n  translationMatching: RuleStatus;\n};\n\nexport const defaultState: RulesWithData = {\n  outlineRegexText: \"\",\n  outlineMatching: \"ignored\",\n  translationRegexText: \"\",\n  translationMatching: \"ignored\",\n};\n\nexport const initConfig = (state: any) => ({\n  ...defaultState,\n  ...state,\n});\n\nconst setRuleWithDataStatus = (\n  state: RulesWithData,\n  payload: {\n    ruleName: \"outlineMatching\" | \"translationMatching\";\n    ruleStatus: RuleStatus;\n  }\n) => {\n  return {\n    ...state,\n    [payload.ruleName]: payload.ruleStatus,\n  };\n};\n\nconst setRegexRuleData = (\n  state: RulesWithData,\n  payload: {\n    entryPart: \"outline\" | \"translation\";\n    regexText: string;\n  }\n) => {\n  return {\n    ...state,\n    [`${payload.entryPart}RegexText`]: payload.regexText,\n  };\n};\n\nexport const rulesWithDataReducer = (state: RulesWithData, action: any) => {\n  switch (action?.type) {\n    case actions.setRuleWithDataStatus:\n      return setRuleWithDataStatus(state, action.payload);\n\n    case actions.setRegexRuleData:\n      return setRegexRuleData(state, action.payload);\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\n\ntype Props = {\n  ruleName: any;\n  prettyName: any;\n  onChangeRuleStatus: any;\n  rulesState: any;\n};\n\nconst RuleOptions = ({\n  ruleName,\n  prettyName,\n  onChangeRuleStatus,\n  rulesState,\n}: Props) => (\n  <p className=\"mb1 flex items-center\">\n    <select\n      id={ruleName}\n      name={ruleName}\n      value={rulesState[ruleName]}\n      onChange={onChangeRuleStatus}\n      data-rule-status={rulesState[ruleName]}\n      className=\"rule-select text-small form-control w-80 mr1\"\n    >\n      <option value=\"on\">On</option>\n      <option value=\"off\">Off</option>\n      <option value=\"ignored\">Ignored</option>\n    </select>\n    <label className=\"dib lh-single\" htmlFor={ruleName}>\n      {prettyName}\n    </label>\n  </p>\n);\n\nexport default RuleOptions;\n","import React from \"react\";\n\nimport type { RuleStatus } from \"../types\";\n\ntype Props = {\n  regexRuleName: \"outlineMatching\" | \"translationMatching\";\n  regexRuleStatus: RuleStatus;\n  regexRuleDataValue: string;\n  entryPart: \"outline\" | \"translation\";\n  onChangeEntryRegexStatus: any;\n  onChangeEntryRegexData: any;\n  placeholder: string;\n};\n\nconst RegexRuleSettings = ({\n  regexRuleName,\n  regexRuleStatus,\n  regexRuleDataValue,\n  entryPart,\n  onChangeEntryRegexStatus,\n  onChangeEntryRegexData,\n  placeholder,\n}: Props) => (\n  <div className=\"flex flex-wrap gap-4\">\n    <p className=\"mb1 flex items-center\">\n      <select\n        id={regexRuleName}\n        name={regexRuleName} // translationMatching\n        value={regexRuleStatus} // \"on\"\n        onChange={onChangeEntryRegexStatus}\n        data-rule-status={regexRuleStatus}\n        className=\"rule-select text-small form-control w-80 mr1\"\n      >\n        <option value=\"on\">On</option>\n        <option value=\"off\">Off</option>\n        <option value=\"ignored\">Ignored</option>\n      </select>\n      <label className=\"dib lh-single\" htmlFor={regexRuleName}>\n        has {entryPart} matching\n      </label>\n    </p>\n    <p className=\"flex flex-wrap items-center gap-4 mb1\">\n      <label htmlFor={`${entryPart}-regex`}>{entryPart} regex:</label>\n      <input\n        id={`${entryPart}-regex`}\n        className=\"caret-color bg-white dark:bg-coolgrey-1000 input-textarea underline overflow-hidden w-336\"\n        autoCapitalize=\"off\"\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        onChange={onChangeEntryRegexData}\n        placeholder={placeholder}\n        spellCheck={false}\n        type=\"text\"\n        value={regexRuleDataValue} // \"(tion|cean)\"\n      ></input>\n    </p>\n  </div>\n);\n\nexport default RegexRuleSettings;\n","const availableRulePrettyNames = [\n  { ruleName: \"isOneSyllable\", prettyName: \"is one syllable\" },\n  { ruleName: \"moreThanOneSyllable\", prettyName: \"has more than one syllable\" },\n  { ruleName: \"moreThanTwoCharacters\", prettyName: \"has more than two characters\" },\n  { ruleName: \"fewerThanFiveCharacters\", prettyName: \"has fewer than five characters\" },\n  { ruleName: \"isSingleStroke\", prettyName: \"is single-stroke\" },\n  { ruleName: \"isMultiStroke\", prettyName: \"is multi-stroke\" },\n  { ruleName: \"isBrief\", prettyName: \"is a brief\" },\n  { ruleName: \"hasStar\", prettyName: \"has star key\" },\n  { ruleName: \"hasOneSpace\", prettyName: \"has one space\" },\n  { ruleName: \"hasOneOrMoreSpaces\", prettyName: \"has one or more spaces\" },\n  { ruleName: \"hasNumbers\", prettyName: \"has numbers\" },\n  { ruleName: \"isRomanNumeral\", prettyName: \"is a Roman numeral\" },\n  { ruleName: \"hasApostrophes\", prettyName: \"has apostrophes\" },\n  { ruleName: \"hasPunctuation\", prettyName: \"has punctuation\" },\n  { ruleName: \"hasCapitalLetter\", prettyName: \"has a capital letter\" },\n  { ruleName: \"isUppercase\", prettyName: \"is entirely uppercase\" },\n  { ruleName: \"hasSimpleStenoKeys\", prettyName: \"has simple steno keys\" },\n  { ruleName: \"hasOneKeyPerFinger\", prettyName: \"has one key per finger\" },\n  { ruleName: \"hasAnyVowelKey\", prettyName: \"has any vowel key\" },\n  { ruleName: \"hasAnyLongVowel\", prettyName: \"has any long vowel\" },\n  { ruleName: \"hasAnyShortVowel\", prettyName: \"has any short vowel\" },\n  { ruleName: \"hasOnlyShortIVowel\", prettyName: \"has only short I vowel\" },\n  { ruleName: \"hasOnlyOneVowelKey\", prettyName: \"has only one vowel key\" },\n  { ruleName: \"hasUnstressedVowels\", prettyName: \"has unstressed vowels\" },\n  { ruleName: \"hasDoubleVowels\", prettyName: \"has double vowels\" },\n  { ruleName: \"hasDoubleLetters\", prettyName: \"has double letters\" },\n  { ruleName: \"hasDoubleConsonants\", prettyName: \"has double consonants\" },\n  { ruleName: \"hasSomeConsonants\", prettyName: \"has some consonants\" },\n  { ruleName: \"hasOneConsonantOnEachSide\", prettyName: \"has one consonant on each side\" },\n  { ruleName: \"hasLhsConsonantWithMultipleKeys\", prettyName: \"has left-side, multi-key consonant\" },\n  { ruleName: \"hasRhsConsonantWithMultipleKeys\", prettyName: \"has right-side, multi-key consonant\" },\n  { ruleName: \"hasDiphthong\", prettyName: \"has a diphthong like AU, OU, or OEU\" },\n  { ruleName: \"hasVowelDisambiguator\", prettyName: \"has a vowel disambiguator like AE or AO\" },\n  { ruleName: \"hasDigraphs\", prettyName: \"has digraphs like “ch” or “ng”\" },\n  { ruleName: \"hasCompoundClusters\", prettyName: \"has compound clusters like BGS\" },\n  { ruleName: \"hasContractionsPluralsOrPossessives\", prettyName: \"has contractions or possessives\" },\n  { ruleName: \"hasInversion\", prettyName: \"has inversion\" },\n  { ruleName: \"hasEfAsVeeOrEss\", prettyName: \"has “F” as “V” or “S”\" },\n  { ruleName: \"hasShortTranslations\", prettyName: \"has short translations\" },\n  { ruleName: \"hasLongTranslations\", prettyName: \"has long translations\" },\n  { ruleName: \"hasLongWords\", prettyName: \"has long words (no spaces or dashes)\" },\n  { ruleName: \"startsWithPrefix\", prettyName: \"starts with a prefix\" },\n  { ruleName: \"endsWithSuffix\", prettyName: \"ends with a suffix\" },\n  { ruleName: \"isSuperlative\", prettyName: \"is superlative (other than “er” endings)\" },\n  { ruleName: \"outlineIsTranslation\", prettyName: \"outline is the same as translation\" },\n  { ruleName: \"hasStretchKeys\", prettyName: \"has stretch keys D or Z\" },\n  { ruleName: \"isFingerspelled\", prettyName: \"is fingerspelled\" },\n  { ruleName: \"hasDisambiguatingBrief\", prettyName: \"has disambiguating brief like HEURD\" },\n  { ruleName: \"hasSuppressedSpaceStroke\", prettyName: \"has suppressed space stroke, TK-LS\" },\n  { ruleName: \"hasPhillyShift\", prettyName: \"has Philly shift like TDZ\" },\n  { ruleName: \"hasCoding\", prettyName: \"has coding terms\" },\n  { ruleName: \"hasMedical\", prettyName: \"has medical terms\" },\n  { ruleName: \"hasForcedWordEnding\", prettyName: \"has /SP-S forced word ending\" },\n  { ruleName: \"hasDictionaryFormatting\", prettyName: \"has dictionary formatting\" },\n];\n\nexport default availableRulePrettyNames;\n","import React from \"react\";\n\ntype Props = {\n  containerId: string;\n  hideHelp: boolean;\n};\n\ntype RuleHeadingProps = {\n  children: React.ReactNode;\n};\nconst RuleHeading = ({ children }: RuleHeadingProps) => (\n  <h4 className=\"mb0 mt0 pt2 pb1 px3 h5 fw7\">{children}</h4>\n);\n\ntype RuleBlurbProps = {\n  children: React.ReactNode;\n};\nconst RuleBlurb = ({ children }: RuleBlurbProps) => (\n  <div className=\"mb0 pt0 pb1 px3 bb b--brand-primary-tint\">{children}</div>\n);\n\ntype StrokeProps = {\n  children: React.ReactNode;\n};\nconst Stroke = ({ children }: StrokeProps) => (\n  <span className=\"steno-stroke steno-stroke--subtle px05\">{children}</span>\n);\n\nconst GeneratorHelp = ({ hideHelp, containerId }: Props) => (\n  <div\n    id={containerId}\n    className={`mh-page mw-744 overflow-y-scroll bg-slat dark:bg-coolgrey-1100 bl b--brand-primary-tint--60 dark:border-coolgrey-800 ${\n      hideHelp ? \" hide\" : \"\"\n    }`}\n    style={{ flexGrow: 100, maxHeight: \"2632px\" }}\n    aria-hidden={hideHelp}\n  >\n    <div className=\"mw100 type-face--sans-serif\">\n      <h3 className=\"mb1 px3 mt3 pt3\">Lesson generator help</h3>\n\n      <p className=\"mb0 pt2 pb1 px3\">To use the lesson generator:</p>\n      <div className=\"mb0 pt2 px3\">\n        <ol>\n          <li>Select some rules</li>\n          <li>Press “Build lesson”</li>\n          <li>Press “Start generated lesson”</li>\n        </ol>\n      </div>\n\n      <p className=\"mb0 pt2 pb1 px3\">Here are some details about the rules:</p>\n\n      <div className=\"mb0 pt2 px3\">\n        <ul>\n          <li>\n            Setting a rule to “On” will build a lesson only containing entries\n            that meet that rule.\n          </li>\n          <li>\n            Setting a rule to “Off” will build a lesson only containing entries\n            that do NOT meet that rule.\n          </li>\n          <li>\n            Setting a rule to “Ignored” will include both words that do meet the\n            rule and words that do NOT meet the rule; the rule is ignored.\n          </li>\n        </ul>\n      </div>\n\n      <p className=\"mb0 pt1 pb1 px3 bb b--brand-primary-tint\">\n        Some rules don’t make sense to turn on at the same time, such as “is one\n        syllable” and “has more than one syllable”, and will result in no words.\n      </p>\n\n      <RuleHeading>“is one syllable”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule guesses the syllable count and only includes words that are\n          1 syllable long. Anything with a space and some particular terms like\n          “mysql” are automatically considered more than one syllable.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes “one”, “course”, “through”, “branch”.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes “city”, “desire”, “something”, “is it”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has more than one syllable”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule guesses the syllable count and only includes words that are\n          more than 1 syllable long. Some particular terms like “genre” are\n          automatically considered more than one syllable.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“is a brief”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for skeleton briefs (no vowel keys), single vowel key\n          briefs, and left-side or right-side only briefs. It also looks for\n          specific extras like <Stroke>SURG</Stroke> for “surgeon”.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>P-B</Stroke> for “peanut butter”,{\" \"}\n          <Stroke>SEPS</Stroke> for “accepts”, and <Stroke>OEB</Stroke> for\n          “observe”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has star key”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for <Stroke>*</Stroke>.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>PWO*T</Stroke> for “both”. E.g. excludes{\" \"}\n          <Stroke>PWOT</Stroke> for “bot”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has one space”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for dictionary translations with exactly 1 space.\n        </p>\n        <p className=\"mb0\">E.g. includes “is it”.</p>\n        <p className=\"mb0\">E.g. excludes “in real life” and “world”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has one or more spaces”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for dictionary translations with 1 or more spaces.\n        </p>\n        <p className=\"mb0\">E.g. includes “is it” and “in real life”.</p>\n        <p className=\"mb0\">E.g. excludes “world” and “%”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has numbers”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for dictionary translations with any digits.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes “7-zip” and “100 Years of Solitude”.\n        </p>\n        <p className=\"mb0\">E.g. excludes “factor VII”, “seven”, and “%”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“is a Roman numeral”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for Roman numerals from I to XII (1 to 12) using the{\" \"}\n          <Stroke>R</Stroke> key.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>1-R</Stroke> for “I”.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes “1” and <Stroke>EU</Stroke> for “I”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has apostrophes”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">This rule looks for “'”.</p>\n        <p className=\"mb0\">E.g. includes “I'll”.</p>\n        <p className=\"mb0\">E.g. excludes “ill”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has punctuation”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for any punctuation and symbols, including emoji.\n        </p>\n        {/* eslint-disable-next-line jsx-a11y/accessible-emoji */}\n        <p className=\"mb0\">\n          E.g. includes “I'll”, “£”, “©”, “💯”, and{\" \"}\n          <code>&#123;&amp;%&#125;</code>.\n        </p>\n        <p className=\"mb0\">E.g. excludes “ill”, “is it”, and “1”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has a capital letter”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">This rule looks for any capital letter.</p>\n        <p className=\"mb0\">E.g. includes “A”, “iPhone”, and “HTML”.</p>\n        <p className=\"mb0\">E.g. excludes “a”, “phone”, and “.html”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“is entirely uppercase”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for dictionary translations entirely made of uppercase\n          letters.\n        </p>\n        <p className=\"mb0\">E.g. includes “A”, “ASCII”, and “HTML”.</p>\n        <p className=\"mb0\">E.g. excludes “a”, “iPhone”, and “Harry”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has simple steno keys”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for beginner-friendly steno keys, such as those that\n          only need one 1 finger to press, plus star key and number bar. It\n          includes multi-stroke entries.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>KAB</Stroke> for “cab”.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes <Stroke>TKAB</Stroke> for “dab”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has one key per finger”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for outlines that contain no two-key combinations that\n          must be pressed with a single finger. It also excludes multi-stroke\n          entries.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>TEFT</Stroke> and <Stroke>SKES</Stroke>.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes outlines with <Stroke>TS</Stroke>, <Stroke>TD</Stroke>,\n          or <Stroke>*F</Stroke>.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has any vowel key”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for any vowel key: <Stroke>A</Stroke>,{\" \"}\n          <Stroke>O</Stroke>, <Stroke>E</Stroke>, or <Stroke>U</Stroke>.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has any long vowel”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for outlines with any combinations of keys used for\n          long vowels (as opposed to short vowels).\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>AOEU</Stroke> for “eye”, <Stroke>AEU</Stroke>{\" \"}\n          for “a”, and <Stroke>OE</Stroke> for “owe”.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes <Stroke>EU</Stroke> for “I”, <Stroke>A</Stroke> for the\n          prefix “a”, and <Stroke>SEUTS</Stroke> for “sits”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has any short vowel”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for outlines with any short vowel key combinations.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>EU</Stroke> for “I” and <Stroke>SAT</Stroke>{\" \"}\n          “sat”.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes <Stroke>AOEU</Stroke> for “eye” and{\" \"}\n          <Stroke>SAOEUT</Stroke> for “sight”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has only short I vowel”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for outlines containing <Stroke>EU</Stroke> and no\n          other vowels. It also excludes <Stroke>STREUF</Stroke> for “strive”,\n          which is using the short “i” keys only to avoid conflict with\n          “strife”.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>SEUBGS</Stroke> for “six”.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes <Stroke>RUPB</Stroke> for “run”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has only one vowel key”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for <Stroke>A</Stroke>, <Stroke>O</Stroke>,{\" \"}\n          <Stroke>E</Stroke>, or <Stroke>U</Stroke> without other surrounding\n          vowel keys.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>THAT</Stroke> for “that”.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes <Stroke>SRAOU</Stroke> for “view”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has unstressed vowels”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for entries with dropped unstressed vowels.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>TEPD</Stroke> for “tepid”.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes <Stroke>TEFT</Stroke> for “test”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has double vowels”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">This rule looks for exactly two vowels in a row.</p>\n        <p className=\"mb0\">E.g. includes “look”.</p>\n        <p className=\"mb0\">E.g. excludes “yaaaaaaay”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has double letters”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for any duplicate letters, but not triple letters.\n        </p>\n        <p className=\"mb0\">E.g. includes “letter”.</p>\n        <p className=\"mb0\">E.g. excludes “III”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has double consonants”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for exactly two consonants” in a row.\n        </p>\n        <p className=\"mb0\">E.g. includes “Harry”.</p>\n        <p className=\"mb0\">E.g. excludes “best”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has some consonants”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for outlines containing two or more consonant keys.\n        </p>\n        <p className=\"mb0\">E.g. includes “world”.</p>\n        <p className=\"mb0\">E.g. excludes “cat”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has one consonant on each side”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for one consonant from the left side of the steno\n          board and one consonant from the right.\n        </p>\n        <p className=\"mb0\">E.g. includes “sap”.</p>\n        <p className=\"mb0\">E.g. excludes “art”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has left-side, multi-key consonant”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for multi-key consonants on the left-hand side of the\n          board.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has right-side, multi-key consonant”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for multi-key consonants on the right-hand side of the\n          board.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has a diphthong like AU, OU, or OEU”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for outlines containing a diphthong:{\" \"}\n          <Stroke>AU</Stroke>, <Stroke>OU</Stroke>, or <Stroke>OEU</Stroke>.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has a vowel disambiguator like AE or AO”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for outlines containing <Stroke>AE</Stroke> or{\" \"}\n          <Stroke>AO</Stroke> without other surrounding vowel keys.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has digraphs like “ch” or “ng””</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for entries with a matching digraph outline and\n          translation like <Stroke>KH</Stroke> and “ch”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has compound clusters like BGS”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for compound clusters outlines with matching\n          translations like <Stroke>BGS</Stroke> and “ction”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has contractions or possessives”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for apostrophes in lower case words or with the word\n          “I”.\n        </p>\n        <p className=\"mb0\">E.g. includes “aren't” and “I'll”.</p>\n        <p className=\"mb0\">E.g. excludes “L'Oreal”.</p>\n      </RuleBlurb>\n\n      <RuleHeading>“has inversion”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for entries with matching outlines and words with\n          sounds out of steno order, such as <Stroke>FL</Stroke> and “lf” or\n          “lv”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has “F” as “V” or “S””</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for <Stroke>F</Stroke> to write a word with a vowel\n          (or “y”) and a “s” or “v”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has short translations”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for dictionary translations shorter than 6 characters.\n          Note, it can have surprising results with emoji.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has long translations”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for dictionary translations longer than 16 characters,\n          which may include spaces or hyphenated compound words. Note, it can\n          have surprising results with emoji.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has long words (no spaces or dashes)”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for whole words longer than 10 characters. It excludes\n          translations with hyphens or spaces.\n        </p>\n        <p className=\"mb0\">E.g. includes “immeasurable” and “distributes”.</p>\n        <p className=\"mb0\">\n          E.g. excludes “alarm clock”, “United Nations”, “in real life” and\n          “eastbound traffic”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“starts with a prefix”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for outlines starting with a prefix stroke with a\n          matching translation starting with the same prefix’s text.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“ends with a suffix”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for outlines ending with a suffix stroke with a\n          matching translation ending with the same suffix’s text.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“is superlative (other than “er” endings)”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for probable superlatives ending with “ier” or “est”,\n          or starting with “most ” or “least ” and ending in “ly”. Ideally it\n          would include words ending with “er” but they are hard to distinguish\n          from other words like “fear”.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes “simpler”, “happiest”, and “most loyal”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“outline is the same as translation”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for entries where the outline uses the same letters as\n          the translation.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>THAT</Stroke> for “that” and{\" \"}\n          <Stroke>WAS</Stroke> for “was”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has stretch keys D or Z”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for <Stroke>D</Stroke> or <Stroke>Z</Stroke>.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“is fingerspelled”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for entries where every stroke is a fingerspelling\n          outline.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>*E/KP*/T*/O*/R*/T*</Stroke>.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes <Stroke>HAPBD/SO*PL/TK-LS/S*/T*</Stroke>.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has disambiguating brief like HEURD”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule checks for specific outlines that do not match the\n          translation phonetically and are instead adjusted to avoid a conflict\n          with a similar entry.\n        </p>\n        <p className=\"mb0\">\n          E.g. includes <Stroke>WEUFS</Stroke> for “wives” and{\" \"}\n          <Stroke>STREUF</Stroke> for “strive”.\n        </p>\n        <p className=\"mb0\">\n          E.g. excludes <Stroke>HAOEURD</Stroke> for “hydro^” and{\" \"}\n          <Stroke>STRAOEUF</Stroke> for “strife”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has suppressed space stroke, TK-LS”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule checks for <Stroke>TK-LS</Stroke>.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has Philly shift like TDZ”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for <Stroke>TDZ</Stroke>, <Stroke>TSD</Stroke>,{\" \"}\n          <Stroke>TSZ</Stroke>, or <Stroke>SDZ</Stroke>.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has coding terms”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule checks a list of coding terms like “TypeScript”, “def”,\n          “rm”, and “http://”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has medical terms”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule checks a list of medical terms like “carpal tunnel”, “ACE\n          inhibitor”, “red blood cell”, or “cardinal veins”.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has /SP-S forced word ending”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for <Stroke>SP-S</Stroke> strokes.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has dictionary formatting”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for dictionary formatting text in outlines used by the\n          Plover steno engine to transform results, such as{\" \"}\n          <code>&#123;PLOVER:TOGGLE&#125;</code> or{\" \"}\n          <code>&#123;MODE:SNAKE&#125;</code>.\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has outline matching”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for entries where the outline or strokes match the\n          regular expression provided. This{\" \"}\n          <a\n            href=\"https://www.sitepoint.com/learn-regex/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            external link to learn more regular expressions opens in a new tab\n          </a>\n          .\n        </p>\n      </RuleBlurb>\n\n      <RuleHeading>“has translation matching”</RuleHeading>\n      <RuleBlurb>\n        <p className=\"mb0\">\n          This rule looks for entries where the translation or words match the\n          regular expression provided. This{\" \"}\n          <a\n            href=\"https://www.sitepoint.com/learn-regex/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            external link to learn more regular expressions opens in a new tab\n          </a>\n          .\n        </p>\n      </RuleBlurb>\n    </div>\n  </div>\n);\n\nexport default GeneratorHelp;\n","import React, { useEffect, useReducer, useRef, useState } from \"react\";\nimport GoogleAnalytics from \"react-ga4\";\nimport { actions } from \"./generator/rulesActions\";\nimport { actions as rulesWithDataActions } from \"./generator/rulesWithDataActions\";\nimport Subheader from \"../../../components/Subheader\";\nimport { useLocalStorage } from \"usehooks-ts\";\nimport {\n  defaultState as defaultRules,\n  rulesReducer,\n} from \"./generator/rulesReducer\";\nimport {\n  defaultState as defaultRulesWithData,\n  rulesWithDataReducer,\n} from \"./generator/rulesWithDataReducer\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport RuleOptions from \"./generator/components/RuleOptions\";\nimport RegexRuleSetting from \"./generator/components/RegexRuleSetting\";\nimport availableRulePrettyNames from \"./generator/utilities/availableRulePrettyNames\";\nimport maxItems from \"./generator/constants/maxItems\";\nimport GeneratorHelp from \"./GeneratorHelp\";\n\nimport type {\n  CustomLesson,\n  LookupDictWithNamespacedDicts,\n} from \"../../../types\";\nimport type { RegexRules } from \"./generator/utilities/generateCustomLesson\";\nimport type { CustomLessonMaterialValidationState } from \"./components/CustomLessonIntro\";\nimport { useAppMethods } from \"../../../states/legacy/AppMethodsContext\";\n\ntype Props = {\n  customLesson: CustomLesson;\n  customLessonMaterialValidationState: CustomLessonMaterialValidationState;\n  globalLookupDictionary: LookupDictWithNamespacedDicts;\n};\n\nconst numberOfVisibleOptions = 16;\n\nconst containerId = \"collapsible-help\";\n\nconst CustomLessonGenerator = ({\n  customLesson,\n  customLessonMaterialValidationState,\n  globalLookupDictionary,\n}: Props) => {\n  const {\n    appFetchAndSetupGlobalDict,\n    generateCustomLesson,\n  } = useAppMethods();\n  const mainHeading = useRef<HTMLHeadingElement>(null);\n\n  const [hideHelp, setHideHelp] = useState(true);\n  const [regexRuleIgnoredButHasText, setRegexRuleIgnoredButHasText] =\n    useState(false);\n\n  const toggleHideHelp = () => {\n    setHideHelp(!hideHelp);\n  };\n\n  useEffect(() => {\n    appFetchAndSetupGlobalDict(false, null).catch((error: Error) => {\n      console.error(error);\n    });\n    // }, [appFetchAndSetupGlobalDict]);\n    // Excluding fetchAndSetupGlobalDict…\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    mainHeading.current?.focus();\n  }, []);\n\n  const onChangeEntryRegexRule: React.ChangeEventHandler<HTMLSelectElement> = (\n    event\n  ) => {\n    setRegexRuleIgnoredButHasText(false);\n    dispatchRulesWithData({\n      type: rulesWithDataActions.setRuleWithDataStatus,\n      payload: {\n        ruleName: event.target.name,\n        ruleStatus: event.target.value,\n      },\n    });\n  };\n\n  const onChangeEntryRegex: React.ChangeEventHandler<HTMLInputElement> = (\n    event\n  ) => {\n    setRegexRuleIgnoredButHasText(false);\n    dispatchRulesWithData({\n      type: rulesWithDataActions.setRegexRuleData,\n      payload: {\n        entryPart: event.target.id.replace(\"-regex\", \"\"),\n        regexText: event.target.value,\n      },\n    });\n  };\n\n  const [rulesWithDataSettings, setRulesWithDataSettings] = useLocalStorage(\n    \"rules-with-data\",\n    defaultRulesWithData\n  );\n\n  const [rulesWithDataState, dispatchRulesWithData] = useReducer(\n    rulesWithDataReducer,\n    {}, // init state\n    () => rulesWithDataSettings\n  );\n\n  const [rulesSettings, setRulesSettings] = useLocalStorage(\n    \"rules\",\n    defaultRules\n  );\n\n  const [rulesState, dispatchRules] = useReducer(\n    rulesReducer,\n    {}, // init state\n    () => rulesSettings\n  );\n\n  const onRules = Object.fromEntries(\n    Object.entries(rulesState).filter(([_ruleName, value]) => value)\n  );\n\n  const regexRules: RegexRules = {\n    outlineMatching: rulesWithDataState.outlineMatching,\n    outlineRegexText: rulesWithDataState.outlineRegexText,\n    translationMatching: rulesWithDataState.translationMatching,\n    translationRegexText: rulesWithDataState.translationRegexText,\n  };\n\n  const buildLesson = () => {\n    generateCustomLesson(globalLookupDictionary, onRules, regexRules);\n    if (\n      (rulesWithDataState.translationRegexText.length > 0 &&\n        rulesWithDataState.translationMatching === \"ignored\") ||\n      (rulesWithDataState.outlineRegexText.length > 0 &&\n        rulesWithDataState.outlineMatching === \"ignored\")\n    ) {\n      setRegexRuleIgnoredButHasText(true);\n    }\n    setRulesSettings(rulesState);\n    setRulesWithDataSettings(rulesWithDataState);\n  };\n\n  const onChangeRuleStatus: React.ChangeEventHandler<HTMLSelectElement> = (\n    event\n  ) => {\n    dispatchRules({\n      type: actions.setRuleStatus,\n      payload: { ruleName: event.target.name, ruleStatus: event.target.value },\n    });\n\n    setRulesSettings(rulesState);\n    setRulesWithDataSettings(rulesWithDataState);\n\n    GoogleAnalytics.event({\n      category: \"Lesson generator\",\n      action: \"Change rule setting\",\n      label: `${event.target.name}: ${event.target.value}`,\n    });\n  };\n\n  const match = useRouteMatch({\n    path: \"/lessons\",\n    strict: true,\n    sensitive: true,\n  });\n  const url = match?.url ?? \"\";\n\n  return (\n    <main id=\"main\">\n      <Subheader>\n        <div className=\"flex mr1 self-center\">\n          <header className=\"flex items-center min-h-40\">\n            <h2\n              ref={mainHeading}\n              tabIndex={-1}\n              id=\"typey-type-for-stenographers-lesson-generator\"\n            >\n              Lesson generator\n            </h2>\n          </header>\n        </div>\n        <div className=\"flex flex-wrap mxn2\">\n          <Link\n            to={`${url}/custom/setup`.replace(/\\/{2,}/g, \"/\")}\n            className=\"link-button link-button-ghost table-cell mr1\"\n            style={{ lineHeight: 2 }}\n            id=\"ga--lesson-index--create-a-custom-lesson\"\n          >\n            Create a custom lesson\n          </Link>\n        </div>\n      </Subheader>\n\n      <div className=\"bg-info dark:bg-coolgrey-1100\">\n        <div className=\"mx-auto mw-1920\">\n          <div className=\"flex-grow mx-auto mw-1440 min-w-0\">\n            <div className=\"flex flex-wrap justify-between\">\n              <div className=\"flex-grow\" style={{ \"flexBasis\": \"648px\" }}>\n                <div className=\"p3 mx-auto mw-1024\">\n                  <div className=\"mt3 flex justify-between\">\n                    <h3 className=\"mt0\">Build lesson</h3>\n                    <p>\n                      <button\n                        className={`button button--secondary mb0 text-center${\n                          hideHelp ? \" collapsed\" : \"\"\n                        }`}\n                        onClick={toggleHideHelp}\n                        onKeyPress={toggleHideHelp}\n                        aria-expanded={!hideHelp}\n                        aria-controls={containerId}\n                      >\n                        {hideHelp ? \"Show help\" : \"Hide help\"}\n                      </button>\n                    </p>\n                  </div>\n                  <div>\n                    <p>\n                      This page lets you generate custom lessons using\n                      Typey&nbsp;Type dictionaries and personal dictionaries.\n                    </p>\n                    <p>\n                      <span role=\"img\" aria-label=\"Warning!\">\n                        ⚠️{\" \"}\n                      </span>\n                      Language is messy. These rules use heuristics and make\n                      imperfect guesses.\n                    </p>\n                    <div className=\"pb1 columns-2 columns-xs gap-4\">\n                      {availableRulePrettyNames\n                        .slice(0, numberOfVisibleOptions)\n                        .map((rule) => (\n                          <RuleOptions\n                            key={rule.ruleName}\n                            ruleName={rule.ruleName}\n                            prettyName={rule.prettyName}\n                            rulesState={rulesState}\n                            onChangeRuleStatus={onChangeRuleStatus}\n                          />\n                        ))}\n                    </div>\n                    <details>\n                      <summary>\n                        <p className=\"cursor-pointer color-interactive\">\n                          More options…\n                        </p>\n                      </summary>\n                      <div>\n                        <div className=\"columns-2 columns-xs gap-4 pb1\">\n                          {availableRulePrettyNames\n                            .slice(numberOfVisibleOptions)\n                            .map((rule) => (\n                              <RuleOptions\n                                key={rule.ruleName}\n                                ruleName={rule.ruleName}\n                                prettyName={rule.prettyName}\n                                rulesState={rulesState}\n                                onChangeRuleStatus={onChangeRuleStatus}\n                              />\n                            ))}\n                        </div>\n                        <p className=\"mb1 flex items-center\">Advanced:</p>\n                        <div className=\"pb3\">\n                          <RegexRuleSetting\n                            regexRuleName={\"translationMatching\"}\n                            regexRuleStatus={\n                              rulesWithDataState.translationMatching\n                            }\n                            regexRuleDataValue={\n                              rulesWithDataState.translationRegexText\n                            }\n                            entryPart={\"translation\"}\n                            onChangeEntryRegexStatus={onChangeEntryRegexRule}\n                            onChangeEntryRegexData={onChangeEntryRegex}\n                            placeholder={\".*(ation|cean)$\"}\n                          />\n                          <RegexRuleSetting\n                            regexRuleName={\"outlineMatching\"}\n                            regexRuleStatus={rulesWithDataState.outlineMatching}\n                            regexRuleDataValue={\n                              rulesWithDataState.outlineRegexText\n                            }\n                            entryPart={\"outline\"}\n                            onChangeEntryRegexStatus={onChangeEntryRegexRule}\n                            onChangeEntryRegexData={onChangeEntryRegex}\n                            placeholder={\".*[DZ]$\"}\n                          />\n                        </div>\n                      </div>\n                    </details>\n                    <p>\n                      <button\n                        className=\"link-button dib mr1\"\n                        style={{ lineHeight: 2 }}\n                        onClick={buildLesson}\n                        type=\"button\"\n                      >\n                        Build lesson\n                      </button>\n                      <Link\n                        to=\"/lessons/custom?study=practice&newWords=1&seenWords=1&retainedWords=1&startFromWord=1\"\n                        className=\"link-button dib button button--secondary\"\n                        style={{ lineHeight: 2 }}\n                      >\n                        Start generated lesson\n                      </Link>\n                    </p>\n                    {regexRuleIgnoredButHasText && (\n                      <p>\n                        Note: an advanced setting is set to “ignored” but has\n                        text. You can change the setting to “on” or “off” or\n                        delete the text to hide this message.\n                      </p>\n                    )}\n                    <p>\n                      {customLessonMaterialValidationState === \"fail\" && (\n                        <>\n                          That combination of rule settings results in no\n                          material. Try setting some rules to “ignored”.\n                          {rulesState.isOneSyllable ===\n                            rulesState.moreThanOneSyllable &&\n                          rulesState.isOneSyllable !== \"ignored\"\n                            ? \" Change one of the syllable count settings.\"\n                            : \"\"}\n                          {(rulesState.isOneSyllable ===\n                            rulesState.hasLongWords ||\n                            rulesState.isOneSyllable ===\n                              rulesState.hasLongTranslations) &&\n                          rulesState.isOneSyllable !== \"ignored\"\n                            ? \" Change the one syllable or long words/translations settings.\"\n                            : \"\"}\n                          {rulesState.isSingleStroke ===\n                            rulesState.isMultiStroke &&\n                          rulesState.isSingleStroke !== \"ignored\"\n                            ? \" Change one of the stroke count settings.\"\n                            : \"\"}\n                        </>\n                      )}\n                      {customLessonMaterialValidationState === \"unvalidated\" &&\n                        \"Preview generated lesson here after building.\"}\n                      {customLessonMaterialValidationState === \"success\" &&\n                        `Preview generated lesson with ${\n                          customLesson.presentedMaterial.length === maxItems\n                            ? \"max \"\n                            : \"\"\n                        }${customLesson.presentedMaterial.length} item${\n                          customLesson.presentedMaterial.length === 1 ? \"\" : \"s\"\n                        }:`}\n                    </p>\n                    <div>\n                      <ul>\n                        {customLessonMaterialValidationState === \"fail\" ||\n                        customLessonMaterialValidationState === \"unvalidated\"\n                          ? undefined\n                          : customLesson.presentedMaterial.map(\n                              (materialItem, index: number) => (\n                                <li\n                                  key={`${index}-${materialItem.phrase}-${materialItem.stroke}`}\n                                  className=\"wrap\"\n                                >\n                                  {materialItem.phrase}{\" \"}\n                                  <kbd className=\"steno-stroke steno-stroke--subtle\">\n                                    {materialItem.stroke}\n                                  </kbd>\n                                </li>\n                              )\n                            )}\n                      </ul>\n                    </div>\n                    {customLessonMaterialValidationState === \"success\" && (\n                      <Link\n                        to=\"/lessons/custom/setup\"\n                        className=\"link-button dib button button--secondary\"\n                        style={{ lineHeight: 2 }}\n                      >\n                        Edit generated lesson\n                      </Link>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <GeneratorHelp hideHelp={hideHelp} containerId={containerId} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default CustomLessonGenerator;\n"],"names":["actions","setRuleStatus","setRuleWithDataStatus","setRegexRuleData","defaultState","endsWithSuffix","fewerThanFiveCharacters","hasAnyLongVowel","hasAnyShortVowel","hasAnyVowelKey","hasApostrophes","hasCapitalLetter","hasCoding","hasCompoundClusters","hasContractionsPluralsOrPossessives","hasDictionaryFormatting","hasDigraphs","hasDiphthong","hasDisambiguatingBrief","hasDoubleConsonants","hasDoubleLetters","hasDoubleVowels","hasEfAsVeeOrEss","hasForcedWordEnding","hasInversion","hasLhsConsonantWithMultipleKeys","hasLongTranslations","hasLongWords","hasMedical","hasNumbers","hasOneConsonantOnEachSide","hasOneKeyPerFinger","hasOneOrMoreSpaces","hasOneSpace","hasOnlyOneVowelKey","hasOnlyShortIVowel","hasPhillyShift","hasPunctuation","hasRhsConsonantWithMultipleKeys","hasShortTranslations","hasSimpleStenoKeys","hasSomeConsonants","hasStar","hasStretchKeys","hasSuppressedSpaceStroke","hasUnstressedVowels","hasVowelDisambiguator","isBrief","isFingerspelled","isMultiStroke","isOneSyllable","isRomanNumeral","isSingleStroke","isSuperlative","isUppercase","moreThanOneSyllable","moreThanTwoCharacters","outlineIsTranslation","startsWithPrefix","initConfig","state","payload","ruleName","ruleStatus","rulesReducer","action","type","outlineRegexText","outlineMatching","translationRegexText","translationMatching","entryPart","regexText","rulesWithDataReducer","React","jsx","_jsx","jsxs","_jsxs","RuleOptions","_ref","prettyName","onChangeRuleStatus","rulesState","className","children","id","name","value","onChange","htmlFor","RegexRuleSettings","regexRuleName","regexRuleStatus","regexRuleDataValue","onChangeEntryRegexStatus","onChangeEntryRegexData","placeholder","autoCapitalize","autoComplete","autoCorrect","spellCheck","availableRulePrettyNames","RuleHeading","RuleBlurb","_ref2","Stroke","_ref3","GeneratorHelp","_ref4","hideHelp","containerId","style","flexGrow","maxHeight","href","target","rel","useEffect","useReducer","useRef","useState","GoogleAnalytics","rulesWithDataActions","Subheader","useLocalStorage","defaultRules","defaultRulesWithData","Link","useRouteMatch","RegexRuleSetting","maxItems","useAppMethods","Fragment","_Fragment","numberOfVisibleOptions","CustomLessonGenerator","_match$url","customLesson","customLessonMaterialValidationState","globalLookupDictionary","appFetchAndSetupGlobalDict","generateCustomLesson","mainHeading","setHideHelp","regexRuleIgnoredButHasText","setRegexRuleIgnoredButHasText","toggleHideHelp","catch","error","console","_mainHeading$current","current","focus","onChangeEntryRegexRule","event","dispatchRulesWithData","onChangeEntryRegex","replace","rulesWithDataSettings","setRulesWithDataSettings","rulesWithDataState","rulesSettings","setRulesSettings","dispatchRules","onRules","Object","fromEntries","entries","filter","_ruleName","regexRules","buildLesson","length","category","label","match","path","strict","sensitive","url","ref","tabIndex","to","lineHeight","onClick","onKeyPress","role","slice","map","rule","presentedMaterial","undefined","materialItem","index","phrase","stroke"],"sourceRoot":""}